(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1575280,      36141]
NotebookOptionsPosition[   1536269,      34903]
NotebookOutlinePosition[   1536608,      34918]
CellTagsIndexPosition[   1536565,      34915]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"mychange", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"genericde", "/.", 
     RowBox[{"Idself", "\[Rule]", "1"}]}], "/.", 
    RowBox[{"Ieself", "\[Rule]", "0"}]}], "/.", 
   RowBox[{"g", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.704713417637911*^9, 3.704713442784624*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dself", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "-", "m"}], "n"]}], ",", 
   RowBox[{"din", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]], "-", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}], ")"}]}]}], 
   ",", 
   RowBox[{"dout", "\[Rule]", 
    FractionBox["m", 
     RowBox[{
      RowBox[{"-", "n"}], "+", 
      RowBox[{"d", " ", "n"}]}]]}], ",", 
   RowBox[{"eself", "\[Rule]", "0"}], ",", 
   RowBox[{"ein", "\[Rule]", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}], ",", 
   RowBox[{"eout", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704767138744916*^9, 3.704791421959128*^9, 
  3.704856470154982*^9, 3.7050371551845016`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Large population limit", "Section",
 CellChangeTimes->{{3.705037227975664*^9, 3.7050372314777517`*^9}}],

Cell[CellGroupData[{

Cell["BD", "Subsection",
 CellChangeTimes->{{3.705051605518426*^9, 3.705051606936245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lQinM", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QinM", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"lQoutM", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QoutM", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705037232953491*^9, 3.7050372699489927`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "m", "+", "\[Mu]", "-", 
   RowBox[{"m", " ", "\[Mu]"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.7050372435320272`*^9, 3.705037270406416*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7050372435320272`*^9, 3.7050372704412746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lQinWF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QinWF", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"lQoutWF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QoutWF", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705037282832074*^9, 3.705037289437901*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{3.705037290155314*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.705037290222267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lQM", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Qin", "\[Rule]", "lQin"}], ",", " ", 
     RowBox[{"Qout", "\[Rule]", "lQoutM"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]BDD", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]BDD", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]BDI", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]BDI", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]BD", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]BD", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Gamma]BD", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]BD", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705037299421583*^9, 3.705037415008705*^9}, {
  3.705039168925518*^9, 3.705039173667197*^9}}],

Cell[BoxData[
 RowBox[{"lQin", "-", 
  RowBox[{"lQin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.7050373257780237`*^9, 3.70503734683876*^9}, {
   3.7050373836560993`*^9, 3.705037434575059*^9}, 3.705039174276483*^9, 
   3.705040028513466*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}]}], "n"]}]], "Output",\

 CellChangeTimes->{{3.7050373257780237`*^9, 3.70503734683876*^9}, {
   3.7050373836560993`*^9, 3.705037434575059*^9}, 3.705039174276483*^9, 
   3.705040028515472*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
         RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{{3.7050373257780237`*^9, 3.70503734683876*^9}, {
   3.7050373836560993`*^9, 3.705037434575059*^9}, 3.705039174276483*^9, 
   3.705040028546468*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n", "-", 
      RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{{3.7050373257780237`*^9, 3.70503734683876*^9}, {
   3.7050373836560993`*^9, 3.705037434575059*^9}, 3.705039174276483*^9, 
   3.705040028579495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l\[Beta]BDD", "-", "l\[Beta]BDI"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "lQin", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.705049160341132*^9, 3.705049190195341*^9}}],

Cell[BoxData[
 RowBox[{"lQin", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}]}], "n"], "-", 
  RowBox[{"lQin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.705049171439045*^9, 3.705049190629265*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}], "n"], "+", 
  RowBox[{"lQin", " ", 
   RowBox[{"(", 
    RowBox[{"m", "+", 
     FractionBox["1", "n"], "-", 
     FractionBox["m", "n"], "-", "\[Mu]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.705049171439045*^9, 3.705049190652198*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lQin", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "-", 
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"lQin", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}]}], "n"]}], 
    ")"}]}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", "lQin", ",", "FullSimplify"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lQin", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], " ", "lQin"}], " ", ")"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "lQin", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.705049241518592*^9, 3.705049275325554*^9}, {
  3.705049634490233*^9, 3.7050496455441837`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "m", "+", 
   RowBox[{"lQin", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
      RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]}], "n"]], "Output",
 CellChangeTimes->{{3.7050492474488697`*^9, 3.705049276471504*^9}, {
  3.705049639355001*^9, 3.70504964633799*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}], "n"], "+", 
  FractionBox[
   RowBox[{"lQin", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
      RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "n"]}]], "Output",
 CellChangeTimes->{{3.7050492474488697`*^9, 3.705049276471504*^9}, {
  3.705049639355001*^9, 3.7050496463403893`*^9}}],

Cell[BoxData[
 RowBox[{"lQin", " ", 
  RowBox[{"(", 
   RowBox[{"m", "-", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7050492474488697`*^9, 3.705049276471504*^9}, {
  3.705049639355001*^9, 3.7050496463455677`*^9}}],

Cell[BoxData[
 RowBox[{"lQin", " ", 
  RowBox[{"(", 
   RowBox[{"m", "-", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7050492474488697`*^9, 3.705049276471504*^9}, {
  3.705049639355001*^9, 3.705049646347508*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "m"}], ")"}], "lQinM"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.705049558894002*^9, 3.705049574638274*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.7050492474488697`*^9, 3.705049276478162*^9}, {
  3.705049560634306*^9, 3.7050495752352133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lQin", " ", 
    RowBox[{"(", 
     RowBox[{"m", "-", "\[Mu]"}], ")"}]}], "/.", 
   RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "0.00"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"m", "-", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m", "+", "\[Mu]", "-", 
     RowBox[{"m", " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{3.705051727945603*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$225665#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.1111110997982137}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.705051727998313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lbBD", "=", 
  RowBox[{
   RowBox[{"l\[Beta]BD", "/.", 
    RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"l\[Beta]BD", "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "0.00001"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"p", "\[Rule]", "0.45"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.705049302165255*^9, 3.705049321676942*^9}, {
  3.7050506314146338`*^9, 3.705050689306381*^9}, {3.705051209828834*^9, 
  3.70505122882402*^9}, {3.705051453375834*^9, 3.705051489625359*^9}, {
  3.705051720789032*^9, 3.7050517364707613`*^9}, {3.705051799538188*^9, 
  3.705051801945793*^9}, {3.705051874940213*^9, 3.705051886110743*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
    RowBox[{"n", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.70505145884031*^9, 3.705051489941187*^9}, {
   3.705051722276815*^9, 3.7050517368694563`*^9}, 3.705051802685507*^9, {
   3.705051878919392*^9, 3.7050518864868298`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVjGs01AkcQBFRJI/SmTxqLImSYlYb1U8oQg+PSTbkFCrVpuiUamnKSHmM
3Z0tdlTEJGbHECOhfmLyfjasZj1G483wJyaHirUf7rnnfrnkU5c8ghTk5OQO
LfG/XYKGW8tHqHtJ7yPY9VwxKjqsDxWTKKAZydbvzBCj1dPk1AKSI/jcc7An
UsTo2tjx8jHJCxRduXeNY8ToHTj75ndSIIxbCOJq/cXYbXHPIYEUDp6qrmKp
hhjT1h6JeUCKBoPrGukPrvcgTaXA5D6JCWvu7Cbf8urG4z7pvMmpTMjgv64T
re5E1UWar5MBD+y0Nse5mYnQ2H1iuDKuENw3KlMZNzvwWtMuSJ55DXvqbRtk
wnZcV6jZIy+PUH5bJ9rsQhsWSRwamndXgPmqQUOpshArQh7r+kgFEO/sP/O9
uhVlm/as5l6shofBSqZy/BZUmONo6BrXQcPfczG99s1ovRhQ5JnbAPF/1NVB
cCM2RFOaqsyaIdWrMbL6ZT1uSBqby55oAe3ney1c52txbFbc0779AwzUWG4K
ulGDmaOldeqJQmBTnurNzFShun4W0d/fBp+iEmp0Ge8x/hw/OM3oH7BS2zCy
lyrAL3ac/rNRHbBTQckgZU0lhlsKCnUqP0JWYJGz+/w7FOcK4lrJ/4IhI1L+
gqgcv4a0sUxvdEJoFJW+kYW4ZZ/yQnBpF9QI2J2H371Bp2fkM/nresDNb8Lo
lagUr+mfNPzkK4a+q1WSHaYluFVKVe041AtTTLH1FLMYtVdPqgjme4Hv4DM9
/7kIFZHF+yH1EyyjvaqYjuTjeUqpaIWrBEQuF1VUFgqQc/BU2tsvEkiZXMs6
8+dLlI2t1xh82Ac2O/Wywzzzke/ptIzp2A+RSRp9y5XyMMqZ/rRwsB8yF8Lx
WQEXyd0uHzPoAxB61uRzZxQHbXZGM0mWgzAtuNRtRclGX4PmOXnhIGxRNYq1
Mc5CWV2CJJQ2BNMlaqc7FzMxWdE/3MNoGMTFmicPamWgdg//mYJgGJpyqm6m
QDoq/Urz2nV5BG6lapfZ8J6gXLY/T6I1CkdZ083Vdiy88hcvQatiFEzGhrQO
5zzCN1tiVTR/GYNH7GPHOY5M1HS5svWOuhS6rnGL2ZTfsMu8RRhRJoXNN3xy
Ln6Pw7wnYNTvPw5ZayuydXbEoB/PWlN/YRyOR4wP9efextv0dFpXzgR4m69K
aqm9itxhfZa6GwEnjulFqGUGY+xjekDPYQJgkkNecArGQI9x41x3Aqr33zT4
NhaEemVleYe8CdAVjK7UpwThA8aJqvhTS21KnPssOI1nrVOmVkYQsPWuF2lk
OAANo9c4Kz9f+jsy3EbDjuHCT7dWdbwgoNn/yDbRWyqKxvs+POcQcH5/ql7v
CiomeRf4Hcgn4F4hT9U6zRMXzTzC6GUExLbLuPJNR7GrlfFkmZCA+tqf8018
D2BxzOxpYTsBVrb7EhVkjsi0PWma8XHpF2MiVUt0QFf2tkL7HgKcmfZKeeV2
WHK9sZY2QkDl9DcXv6PW+ND8R4a7lIAwjunyFXQrvCxJ9SITBLQV65lrl2zH
zW4XxOUzBHwdsByKdtmEivJtmUmzBJS9SO9sKtqIvXzbkIB5AjwT2UY5TjpY
FpJhsf07AbZulGS/A8vx0QZV2eIiAXcHJJVp+cZv/wOLZYlZ
       "]]},
     Annotation[#, "Charting`Private`Tag$228510#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.4949826351140288, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70505145884031*^9, 3.705051489941187*^9}, {
   3.705051722276815*^9, 3.7050517368694563`*^9}, 3.705051802685507*^9, {
   3.705051878919392*^9, 3.705051886526503*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"lbBD", ",", "m"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], "Input",
 CellChangeTimes->{{3.705051804317992*^9, 3.705051810446327*^9}, {
  3.7050518634659023`*^9, 3.7050518656715803`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.705051808348406*^9, 3.7050518107999*^9}, 
   3.705051866249856*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], "2"]]}]], "Output",\

 CellChangeTimes->{{3.705051808348406*^9, 3.7050518107999*^9}, 
   3.7050518662535477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], "n"], "+", 
    FractionBox[
     RowBox[{"lQin", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
        RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "n"]}], "/.", 
   RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], "Input",
 CellChangeTimes->{{3.705051244590877*^9, 3.705051256281239*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.7050493058297157`*^9, 3.7050493220778313`*^9}, {
  3.705050632306242*^9, 3.705050636208012*^9}, {3.705050667625499*^9, 
  3.705050689673143*^9}, {3.705051207375126*^9, 3.70505125680943*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7050493058297157`*^9, 3.7050493220778313`*^9}, {
  3.705050632306242*^9, 3.705050636208012*^9}, {3.705050667625499*^9, 
  3.705050689673143*^9}, {3.705051207375126*^9, 3.7050512568118477`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", "lQin"}], "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "0.0"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705051146219062*^9, 3.705051194110488*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k8VVsbB3BEqRTSVQpFk0pRGa7h9aNUCiVDozkUDYSrXCSSBqRBRTJL
yDw7ZxuSoYyHMxgSkbHoJFO6xbv8tT/fz1n77LX286znWVvG1tnYno+Hh2cd
Lw/P/PWw/VBz+bCZlrp7f+78lX/fGpduCSUI5Z0peCCmhD0x4S9yJXTRtufk
CYllutBvaM2JkjDFPduKPf/wmOKE3XTJIwk7rMz6KnBl8Cw+KtzeFyLhjtiA
C+r8BW6I/eto4D2JAByU237lmNlN+AnmbrkrEYZAqxWFPC8e4eSpuMzvY4nI
YRqFuvfFYemcn/lB6Uz4czN9tIuSsenYt6G3QXlYMh6kUflPBq42qiF8ohg/
p3XPH+/Nxqo80S5e3jLo5CSuK/qdC/Pg/0z7xMtwZFQqQ1IgD/F2/XXV8mX4
VdB5wmtZHuT/Ki4OOlmGKNrlJVuk87DXw/rJX1ll4J3eo/c38qDy4kRSmEI5
Io1zefbfyIONZZJFclc5jtlso0vN5qGgd199k2YFFNYK+FwdzgdHz28s5GAF
FNu31J7+no+pjFJxA+MKmPXv3qg2nQ9VLzWbd+cqkHDbffEgfwGKxBSmyh9V
4FSmTc+i9QUo1l2zPmeoAp9TGhdamxWASvruFhb2Fm+bpWq9qAJUOEWtPTVS
id4Ns+lD3oXIHb5wwXKqEqdFug9p+xci8bw6/SxPFbZ0D0uG3S7ELYfW05dX
VsGzMNZZ8VEh9GxFn9/UrIJumuGMxqtCNJ26tTojuArJ2qwtsYxCdOpd+mvB
jmqMFUwsTllfhMnN/xNOv1QDPg1j5TUFRdDq3Vtz71oNpLN7BkZoRQiM0vM9
f7MGswsE4ullRRBfacrdEFGDQlumpuH7IqjwXmh6XlkDxaBOdZ3OIlz7EB56
Z+07HDcfWniZtxi/QyeE7d6/Q5rWVpEhvWLwzbwWWbupFuNyV+++rS/G2oa9
41CoRcRWra32jGIoxbWz7dRqoTtuX7yAVQz7Q4siMwxrMcTVylL9UIx3Ebab
9nrUojuYLuU1XIxQdQl1x5paHL/kJntFgAZJ78CzhY518OmYmZXVoEHZSOpA
p1sd+HxF1O21aDiyMU+O93odMi8eDE3UocG3vmf08KM6eHavDVmjR0Ov5P+u
ddHqoFZmOfPZlIaUkvFgAaF6CDd/Sxm9RIPKnHWBSUY9bHoPjfdF0WBgWO6/
v6gedrb6f5fG0nA2ct1R1Yp67EuIbQ9LoOGBatfgGk49VopkKKun0DDsfEai
9w+5f3KRq30eDS8+mXm7GDbg+QczrlYtDbwVh/eGjDQgO2vOU2CChtUiqct9
pxoQZGVmHTxFw07LxR9ceBoxwidRJTJDw+lfNW6mKxsRErFw+YpZGvJ273+5
VrMRE6WytKlFdDgkQDA1qBE1L95bHlpLR32AUmP1tiZsHXNuW6NNh7pwHd9D
5Sa0JnvSbu6lIznCRvWMdhPi7zQ3DuvScTPjfizXrAldV00epx8i49uGXFf7
NeG6bGO6mAkZvz1qlVMrsWSJ6hl7OvYO+2ct3MtA4fCv8e7bdHjubKy9cJAB
8dfvXcfu0pHlJtHPMGDAcIJxiCeYDunZTInIEwz0KkkIiD+gY2bFR3+FSwz4
3DNnyIST8ZqqZifDGbiU8j2f/oqOdQ++zqR8Y+D1dsHrPFV0lNr4puSMM1D1
6aNFXDUdlnvETtF/MmD+KEBI+x0dLzjqRfV8zdjDU9zuUUfHaql7HlzxZpjo
NuvXNtOxIlVuXAnNGDz3yXBxFx0ClfYjZaHNEJI0ej06QUfik5nId2HNqBdd
tfjwFB2650L0myOa8XriqlHiNB3+S/JTexOa0VO/L8b4Fx2zRvyOAkXNmPN8
ZPJ0jo6fH+P7D39qRipnUy1tMYWv091dbMUWrLryyNVHkkLBudCKwyotEH0h
rZElReFGq1ZSmUYLJNrM0j9JUxAvjLqUcqAF++PiH6nLUKR+nfntbd4CsaAE
r5ZNFJ5PcCQ23mnBD56ZF493UrC3C/wTHtKC0RWCbnEKFBRZyj3LHrdgMnuG
N12RQnVuWPJ0VAsajLWPlOymMOZqrFqX24L1Fda0ChUKemMNpq7dLTgX55Zp
o0VBzMbn78G+FnDux/jrg0IXQ17S/EsLFO7ZSu3RpuCeFfR5/2QLLjkeSv9P
h0KM8yFXiaVM/Mh5c9R1P4Wp0crQchUmEoL+OEzpU3hj4e6mrMmEyGC7dIkB
heCGDSdSdZh4pR+Q5mdIQTbdXzrMgIlVB8oN+I9SMLyonX7Olgkdp83F3GMU
Er/Qa5ffZyLCOJvP+gSFy8+ObnB6zESQwx8/3pMUVHU/e1WFM1E5e+5nLHFt
1JId3glM9E28b2g/RdZrdCp0uIiJB7v5du0xp0D7MzKoW8rEnceBvpXEAak3
tGPfMqEr7VdnYkFhNX/y2PFGJgLTf1tetKSgVThlUvmZiZPlP+7esqYgaHcv
bd0wE2csRDoW2lBoEZEW8PpGnn+nZ0cgsb3T/oJdM0yYheZ/vm5L1isVtjpm
OQsHxDOjTtpRaL+566OnGgtqad8n089RiFesUmZrsWAluuWj8HkKFz+evK+o
y0LMJrCciXlUb2DwCAsXVVZMbnWksPlLY5ypHQvL3NeJ33ai8P2p7a9MRxb0
/XUethPT9k0ZL3Vm4TmPquy2C+R9RknxV3iyUDQecqeK2N3oooNCKAs82129
+i+S9f2ZK70XxkJ0W1Gx3CUKi1IfrxqIYMH1RpqYE/HzBfR3LxJZ0Ll8Q2qQ
2C7riMzPFBb8YloaZS9T2GnR62mSycJkXH60OfGbgsXbl9DI/f3LomqJ752N
umlfxkKDzI/6WWJTkV2d5ZUseG3eL73LmcKQ48mQq00syF4XlXtAnCM+0t/C
YoH7eaqHIvZ666u1s4MFxb83lA8SL5d6xe3rY8G/Y+OIqgsF7eM3P34eZqF5
4En1aWLXUKu63m8sWIimC3gTc3hXv/r0k4W21JV5xcSCGhNh3X9YCOu9vZFD
rO7O8O/iY8O7duC/78TRA3csO4XYENJP7ZG5QoGxzt7ggygbVncVxlSJ+U7p
qHeIs3HzbY+jAbHSIym59rVshMcbGVgRO9TN/NW2ng3p4KURLsTh/JwFrZvY
WB8fZ3SDuPZ/OWPsbWycehvndp/4t8f9bpYCG05Bz/kiiXdmOTUwldgYNl4z
+5LYevgAvUWNjWiFTIdM4keyG1KatdiInRjQLCSuPDP3lLGPDZ/dR/1KiKfC
PgQ06bFxVvUfpQpiucZC10ZDNg4KDxyvIj69KMy6wZiNBQE7h6uJg7VdjtSf
YOOx1Iev8y71NNCsMyfzl71mNT/+e47ctlobNvY8fag7/3+yI/yr3zuwMaCZ
Gzn/PNNNPQLvLrDx37Pz9vPzCbQsGa92YUNgSDN+fr5FzyJ6qv5h44E83TiJ
+Avjn6bKf9nQ33j56vx6JZcYl7z1ZWOL4SeRUGLDfTtfVwSwcb0vcp0f8XXv
JRFv7rKhNbgt8QpxVv5AYPl9NgRXrIqxJu79VuFe9pgNy55hkSPEK+VibEvD
2Sh6KP9LjfiAjZdRSRQbZevOn9lIfO35CS0qnsRTb5PyMuJOIZE1tDQS/3UH
TDtI/JcfGFlUnM3G8yW056Xz+eX7brKwgI3OxYwzccSJYzea88vZ2CnIY2Q7
n1/bLMryqtiY0ZcL0J7PLzu19NxaEp8dwspSxBc5Y3eyWWycSdwt3ELyN1q4
0SOrnY3397zUUokZeql2mV1siOZE9t4gVqLbaqcPseFHXc3dSvw7hjmd/JuN
axLbLR3n91t7Zv8rXg6Oi1IhysTWK4KZSQs5KJk7pM1DXBmgm5kowoGo2AXF
h2S/BjvmO8Ru5MBJSkI/juz3L9rpd5Zu46DtS768OfHB1S9TPRQ4OD/z0/gv
Yr6asG8G6hxYxixy8Sf1wnOju8fMUQ7MvA1nD5L6wvnvQridGQfJCzatmiT1
SIl5ltZ0moNx/mrPWOLvfiazL+05cF70XfoHqV8O3bsDjb3IfBwTft0g9a6y
YFtyyQ0OAs3uuK0nlr0vWysXyEFcwX6NUgcKHzVXLJ97wIHeubriCXuSX8/H
nrxO4oCz3TvAkNRPHbOsl/wtHAwr40MGqcfR8sk1zq0cCGeqBu8h/r0gdrij
k4PHtl+fFFiR/MsJ3ZE9yMGm8B/5haSe7xRxzrf4w8ETD1e1JFL/Jet2VBXI
tWKlbAtLifSPKe3Xfed9W6FfHecveYQClfg18mpAK0ZfqW31JP3KX1DeJPBu
K/zmfJxZpJ8tZ6S9SXjcCjeFoc5A0u82W2VEd71qRVe+ht4HPQrHfbJPmjJa
sVPsV83efRTyiwvrIdOGtYuHI4RVKfwr9fPmkc1tKE15v1qH9GNtv781LLa3
gT+fuf+KMoV6veKUf5Xb0IHNaQ17KPS10gLzD7VhJHVxgQfp7yunSrS3u7ZB
+bj++ntbSX3fXZkn/rYNmS6lRsVryPtXWh/78F0b0tu7EtMkKJxU8Q4SamxD
wwUP7+jVFDTUlWz52tugMipX5CNO4r83UfjbtzYYB1q6bFtBIfRYgFPVmnbM
iJqe+h85z6S66K53d23Hb8WaVANyPurOqAxqlunAmybnyzvq6WCM8o/s3tKB
Y0KGSvW1dJTL7zcIk++A7atdqY7v6YhNrRI6odqBhm3tr2LJ+c02qTqk06AD
hj7C07PldAxEvQsdvNqBaZnegz75dIwG1z/+09ABaTGhsptRdPznxIrc+u8H
dDJfvmlypGO7zqJZB3on5NrUnR/+puFgvMy57FVdqJP/IXfHnYarUlayPebd
UFngM6MyUAz5EbOlrYafcH9TuLq1YTHEhL8LVv76BM5SIY/ciCLwl0VmbnjR
gwP/QnGgvxAXlOjti/V7YdHrLF0gXojXh2xjS6d6YXK6/0E6CjD5dY3IwNPP
sFqUJnP+Uj7yTQ4uCNPtw4LMfqurvnnw1bsVkzfQB2W7Bx+jwnMh8/FwW8Kt
fgi5jQlHZ+RAXTUgTGL3AGSVhtWfJWfDXLpphpc5gOqkyTluWhYma0N6XfwG
sUwn5MfNrZmkn1i6G28cgmLOjmhF0XSIdeXH81UOQaqQV6F2OhUCPn6maleG
cW247F54YjJ4Uiwze1d8wUiY7ZUdl5Pg+jwzZEXFFzw7o5Iv8ScBJdvvCIpe
/gqOBiMoMjgOoodd5f2Xj+Cz/q6H9Z7R6NzBYHpSI7C+5bAq8WwEsqKxsc9y
FEbHzHlmH4XBIlNFVGp2FMsDtAy6n4bixq04v87Ub8hsvv8zdNUtpA9JRS43
4MLf7vSWhZYeuBN1y7rrCJd8L7x/s1zAA3bGo5syjnGx/IuvsljaP5CkqCzD
E1xEDa1ME/7ljnuhZ6qDbbnk/LNjlPPEDedVIsaWeHKx0ibzWky9C2QDVuot
SuIiLODUiOZlB8z+7b2sNZmLy+PmLw/S7dE++rkl6TUX+mud9x8WtMeDE7kW
B7K5mMjaraMafxZz24zdblHk9ypd0yy2NTqbQ6MXMLmwzVaP0fY4jqLA6bNM
NheHjxx1NxU2Q5iG1daENi4k/QsPn0w2gf7LnXl7u7jYmrBbULHDCLRrDe/9
hrlQFB/W1P73AJ7uUA49NsKF3pKI9POv9+FK7wtTGS4X/T4BJlc6tSFncLG7
fIKLmjyXrAPeKuDnZSU+mObic96G2xEfFfEpX8PJ+hcZL7Nx8pTPZlBOCQqK
f7hg266w4L8ujmfrlk7OzXExyljHKB9W1vo/hh/mIA==
       "]]},
     Annotation[#, "Charting`Private`Tag$217269#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.1111110997982137}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7050511484712687`*^9, 3.705051196890257*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"b", " ", "l\[Beta]BD"}], " ", "-", " ", 
          RowBox[{"c", " ", "l\[Gamma]BD"}]}], "/.", "lQM"}], "/.", 
        RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "/.", "mychange"}], ",", 
      "m"}], "]"}], "/.", 
    RowBox[{"m", "\[Rule]", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.705040346376223*^9, 3.7050404009308863`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  
  RowBox[{"\[Mu]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]}]]], "Output",
 CellChangeTimes->{{3.705040359441227*^9, 3.7050404014296827`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.705040402316399*^9, 3.7050404119746237`*^9}}],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  RowBox[{"DirectedInfinity", "[", "c", "]"}]}]], "Output",
 CellChangeTimes->{{3.7050404099452543`*^9, 3.705040412408189*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EXBD", "/.", "mychange"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Idself", "\[Rule]", "1"}], ",", 
       RowBox[{"Ieself", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "\[Rule]", "0"}], ",", 
    RowBox[{"p", "\[Rule]", "0.45"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"b", "\[Rule]", "15"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"\[Delta]", "\[Rule]", "0.005"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7050405675446568`*^9, 3.705040616221674*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "29"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "-", 
     RowBox[{"116", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}]], "0.015`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"900", " ", 
      RowBox[{"(", 
       RowBox[{"0.032999999999999995`", "\[VeryThinSpace]", "-", 
        RowBox[{"9.049500000000005`", " ", "\[Mu]"}], "-", 
        RowBox[{"0.12375`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
        RowBox[{"9.024750000000003`", " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
     RowBox[{"30", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"0.041249999999999995`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.00275`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.9615`", "\[VeryThinSpace]", "-", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
        RowBox[{"0.0027500000000000003`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"15", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         "\[Mu]"}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"0.04125`", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", "\[Mu]", "-", 
           RowBox[{"0.0027500000000000003`", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "29"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "-", 
       RowBox[{"116", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], "2"]], "0.015`", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
     RowBox[{"29", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"60", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.1155`", " ", "\[Mu]"}], "+", 
     RowBox[{"900", " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"2.9834999999999994`", " ", "\[Mu]"}], "+", 
        RowBox[{"0.12375`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"9.024749999999997`", " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
     RowBox[{"30", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Mu]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"0.04125`", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", "\[Mu]", "-", 
           RowBox[{"0.0027500000000000003`", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.038500000000000006`", " ", "\[Mu]"}], "+", 
           RowBox[{"16", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.005`", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.55`"}], "+", 
                 RowBox[{"0.55`", " ", "\[Mu]"}]}], ")"}]}], "+", "\[Mu]"}], 
             ")"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1.0082499999999999`", "\[VeryThinSpace]", "-", 
              RowBox[{"2.0054999999999996`", " ", "\[Mu]"}], "+", 
              RowBox[{"0.04125`", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", "\[Mu]"}], ")"}]}], "+", "\[Mu]"}], 
                ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.705040532531127*^9, 3.705040569461095*^9, {3.7050406059871473`*^9, 
   3.705040616763324*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", "0"}], ",", 
     RowBox[{"p", "\[Rule]", "0.45"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "6"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.005"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EXBD", "/.", "mychange"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Idself", "\[Rule]", "1"}], ",", 
         RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
         RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
    "prs"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EXDB", "/.", "mychange"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Idself", "\[Rule]", "1"}], ",", 
         RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
         RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
    "prs"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EXWF", "/.", "mychange"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Idself", "\[Rule]", "1"}], ",", 
         RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
         RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
    "prs"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7050404457313232`*^9, 3.705040467263464*^9}, {
  3.7050405098754*^9, 3.705040539923913*^9}, {3.705040624426736*^9, 
  3.705040697874721*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
SKz6vrjIhWf/RIKET1Lhf9bwgwM=
       "]]},
     Annotation[#, "Charting`Private`Tag$201558#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.009216091417045399, 0.011603469574953507`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7050404615943937`*^9, 3.705040467722114*^9}, {
  3.705040514376177*^9, 3.7050405272670193`*^9}, {3.7050406250009813`*^9, 
  3.7050406987209873`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$201596#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.047242985140049876`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7050404615943937`*^9, 3.705040467722114*^9}, {
  3.705040514376177*^9, 3.7050405272670193`*^9}, {3.7050406250009813`*^9, 
  3.705040699251647*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$201634#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.011289216753042638`, 0.011237747674113188`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7050404615943937`*^9, 3.705040467722114*^9}, {
  3.705040514376177*^9, 3.7050405272670193`*^9}, {3.7050406250009813`*^9, 
  3.705040701022386*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"factorBD", " ", "\[Beta]BDD"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
             RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
          "mychange"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Idself", "\[Rule]", "1"}], ",", 
           RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
           RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
      "prs"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"factorBD", " ", "\[Beta]BDI"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
             RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
          "mychange"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Idself", "\[Rule]", "1"}], ",", 
           RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
           RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", "m"}], "]"}], "/.", 
      "prs"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7050416394173813`*^9, 3.70504167183307*^9}, {
  3.705041711235372*^9, 3.705041765569371*^9}, {3.7050418046341476`*^9, 
  3.70504181707272*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$205218#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
TeWOch4T/wONwf2D
       "]]},
     Annotation[#, "Charting`Private`Tag$205218#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-5.206855592319602, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7050416426218*^9, 3.7050416725831633`*^9}, {
   3.7050417158282022`*^9, 3.705041721279031*^9}, {3.705041754812996*^9, 
   3.705041767891015*^9}, 3.705041818702533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"l\[Beta]BD", "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"l\[Gamma]BD", "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.705039175704213*^9, 3.705039213602273*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
   RowBox[{"1", "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.705039182777341*^9, 3.70503921418266*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"DirectedInfinity", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"Sign", "[", "m", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sign", "[", "n", "]"}], "2"]}], 
      RowBox[{"Sign", "[", 
       RowBox[{"1", "+", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], "]"}]]}], "]"}]}], 
  "n"]], "Output",
 CellChangeTimes->{{3.705039182777341*^9, 3.705039214322769*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l\[Beta]BD", "-", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}]}], "+", 
        RowBox[{"lQin", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"n", " ", "\[Mu]"}], "+", 
           RowBox[{"m", " ", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"n", " ", "\[Mu]"}]], ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.705037518817377*^9, 3.705037598200418*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.705037529018695*^9, 3.7050375566345053`*^9}, {
  3.705037592661454*^9, 3.7050375988677883`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"t1", "=", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]BD", "/.", "mychange"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "lQinM"}], ",", 
          RowBox[{"Qout", "\[Rule]", "lQoutM"}]}], "}"}]}], ",", 
       RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"t2", "=", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]BD", "/.", "mychange"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
           RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
        "mychange"}], ",", 
       RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "-", "t2"}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.7050376689666758`*^9, 3.705037713113174*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
    RowBox[{"n", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.705037695218472*^9, 3.7050377134783497`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
    RowBox[{"n", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.705037695218472*^9, 3.7050377134800053`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.705037695218472*^9, 3.705037713481347*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"t1", "-", 
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "\[Mu]"}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
       RowBox[{"\[Mu]", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}]]}], ")"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.705037718497057*^9, 3.705037789046899*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.705037736441078*^9, 3.7050377904076633`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]BD", "/.", "mychange"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.705037844616139*^9, 3.7050378924957943`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.70503784598914*^9, 3.705037893035748*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"t3", "-", 
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", 
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"m", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}], 
      RowBox[{" ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", 
          RowBox[{"(", 
           RowBox[{"d", "-", "1"}], ")"}], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "+", 
         
         RowBox[{"d", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}], 
        ")"}]}]]}], ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.70503789410824*^9, 3.705038001016733*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.70503799280196*^9, 3.705038001375989*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tt3", "=", 
   RowBox[{"t3", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "\[Rule]", "0.95"}], ",", 
      RowBox[{"p", "\[Rule]", "0.45"}], ",", 
      RowBox[{"n", "\[Rule]", "2"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tt3", ">", "0"}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7050384753993063`*^9, 3.7050385408984137`*^9}, {
  3.705038625013989*^9, 3.705038719939609*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
n5tsInmiRgmK94sSwsb/A0fuYVk=
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwNwwtT0gAAAGDYeLb3xp5s7AUM2ByOocOJIG5OYORl2WVmdZlnWT6y98se
V16W1+v6w/ndfer20dVtIJFInF8EL3Y82QRgKpdHwRSWSuPpTA9EyGyOyGQN
nYvK/EBFbYypKAiHEzxBCiRVyF+qamyRKgQ46wgSzrGxZ+YoEkSRFIamcawH
A1mSyBC4KwlusTSw6YDBahWV4DlS4KmikC9QkSPWjXIYsEHILIcap7OWCasV
RK+yC12DL3OjoVk2uLZbctsSZqNNm5my4OkmIzh8y5FiCyq6gtMSF/vKbLuk
9JGJ7xldfdxJznXkxpw8Hnm1+Yrny6iKtGekfg/p9WGwB/QX4aUBbQ/Q+oKB
B9hgSbWbtBay725NH93WD7c0fwI5ET+JISs244l3sKmc/fC/b8g/f80/flR/
+KC2EonnB8ponDSHwPVP0vq++O/Mv/Nl5vhp4/1OdXUXWtujh6OkNzI7Y+/z
SWv3MhStlE+/dcJl5tXNqRer0Id18eRj6/lLa+OJ/Oy4ceNvd/+a+PXu7Ou3
zZ0/1b0r9OY95c0a/ftQ27qv/QcN6lPg
         "]], 
        PolygonBox[{{80, 149, 66, 21}, {144, 143, 34, 38}, {97, 148, 64, 
         32}, {86, 132, 54, 30}, {99, 150, 69, 34}, {122, 121, 21, 47}, {82, 
         123, 48, 22}, {93, 124, 38, 35}, {95, 130, 52, 54}, {127, 126, 28, 
         50}, {83, 151, 71, 28}, {140, 139, 32, 37}, {112, 115, 42, 31}, {79, 
         119, 45, 12}, {135, 134, 1, 56}, {89, 116, 44, 45}, {106, 146, 61, 
         41}, {77, 147, 58, 11}, {148, 79, 12, 64}, {149, 98, 33, 66}, {138, 
         137, 31, 58}, {150, 82, 22, 69}, {142, 140, 37, 59}, {114, 96, 57, 
         42}, {130, 94, 53, 52}, {145, 111, 35, 60}, {98, 104, 40, 33}, {118, 
         117, 11, 44}, {91, 120, 47, 48}, {128, 129, 50, 29}, {131, 85, 29, 
         53}, {96, 133, 56, 57}, {103, 141, 59, 40}, {146, 87, 60, 61}, {101, 
         107, 41, 36}, {151, 101, 36, 71}}]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[{72, 1, 134, 135, 133, 96, 114, 113, 115, 112, 88, 137, 138, 136,
       147, 77, 102, 78, 117, 118, 116, 89, 119, 79, 148, 97, 90, 109, 139, 
      140, 142, 141, 103, 104, 98, 149, 80, 105, 81, 121, 122, 120, 91, 123, 
      82, 150, 99, 92, 110, 143, 144, 100, 124, 93, 111, 145, 87, 146, 106, 
      107, 101, 151, 83, 108, 84, 126, 127, 125, 129, 128, 85, 131, 94, 130, 
      95, 132, 86, 30, 27, 20, 10, 9, 8, 7, 6, 5, 4, 3, 2, 72}]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {2, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.705038497852131*^9, 3.70503854118228*^9}, {
  3.7050386251431713`*^9, 3.705038652779825*^9}, {3.7050386947333*^9, 
  3.705038720477647*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", "1"}], ")"}], "/", "d"}], "\[Equal]", "m"}], ",", 
   "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"m", "\[Rule]", "0.95"}]}]}], "Input",
 CellChangeTimes->{{3.705038727440486*^9, 3.705038745025284*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"1", "-", "m"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.705038735745027*^9, 3.705038745479006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", "19.999999999999982`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.705038735745027*^9, 3.7050387454811783`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{
      SuperscriptBox["d", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}], ",", "m", ",", "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.7050380428661823`*^9, 3.705038082438324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", "\[Mu]"}], 
  "+", 
  RowBox[{"d", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.705038040146647*^9, 3.705038082701693*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}], ")"}], "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7050383294735727`*^9, 3.705038360445899*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
      "\[Mu]"}], 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.705038338930469*^9, 3.705038360702631*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]], ">", "0"}], " ", "&&", " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]], "<", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705038365444828*^9, 3.705038406502256*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl2HtYVGUewPFBLDUZJGML8X6FSDGVMfHS+8ooomKOgECY4y1dc7yUa8mg
rtjSZD7rBRlDSc1pU9BSxKwnhVXUbHUW09pkDqhEApqoqOPlWU1hTz18X7bi
H57PMxe+nDnn975nuk5fEDezmcFgcPkYDL/8Lp04O8LpqRSXr4zar1tm+ERu
KXJcVO6/u9XjNaZq5crk8vnGmhrlNc0/8Zicl5WH7l0ireYryrWTYnc6vLXK
G1t0bJvvuqYc/dn1NI+lTvmW9VBVQ8MN5XsPVx93eMtFs95drHtdHeSEhL7Z
HkuFMv2Yfkw/ph/Tj+nH9GP6Mf2Yfkz/yn7+BfmuUNWP6cf0Y/ox/Zh+TD+m
H9OP6cf0Y9Xfy7HJbO/X1N9o1d9o1d9o1d9o1d9o1d9o1d9o1d9o1d9o1d9o
1d9o+mMj3knJdw1U/Zh+TD+mH9OP6cf0Y/ox/Zh+TD+mPyAqo3179xDVj+nH
9GP6Mf2Yfkw/ph/Tj+nH9GP6a3OHzzfbperH9GP6Mf2Yfkw/ph/Tj+nH9GP6
Mf0l4UdeshvNqh/Tj+nH9GP6Mf2Yfkw/ph/Tj+nH9O/5XPbNd41U/Zh+TD+m
H9OP6cf0Y/ox/Zh+TD+mf93Q4jY1phjVj+nH9GP6Mf2Yfkw/ph/Tj+nH9GP6
Fx4TN4PdY1Q/ph/Tj+nH9GP6Mf2Yfkw/ph/Tj+lPGHP4jMU6TvVj+jH9mH5M
P6Yf04/px/Rj+jH9mP6B375Y4PCOV/2Yfkw/ph/Tj+nH9GP6Mf2Yfkw/pt+v
9w8xVvME1Y/px/Rj+jH9mH5MP6Yf04/px/Rj+pfd6BRpXx2n+jH9mH5MP6Yf
04/px/Rj+jH9mH5Mf90+67NOT7zqx/Rj+jH9mH5MP6Yf04/px/Rj+jH9U97a
2i6/60TVj+nH9GP6Mf2Yfkw/ph/Tj+nH9GP6z0RWtHLbElU/ph/Tj+nH9GP6
Mf2Yfkw/ph/Tj+kf/qjjg+rPk1Q/ph/Tj+nH9GP6Mf2Yfkw/ph/Tj+kvKJ5c
29CQrPox/Zh+TD+mH9OP6cf0Y/ox/Zh+/HGeNTzfdV4sCeh2XrO0lfUNv/z8
8Adzvxkz4Z+vWM1lIlYYF7Z391Ges/uxNLsxQjm8sPmQGlOksveE70OL9UXl
SbYVVuux4crDvAbhTBqh3Nme3tl9NVpZvx03GNJHK1c5lleaAmOVjxsbim15
Lyn/ur5ttSh/9cvjP01Q/nX96B+vvMP5V5draYJyUPKhzKKvJyqvbF+/whOQ
pHy/YthCb0qy8u8/f46fen3j/ZY6fo33L5j7Acz+GrNfxez/MPspzP7kN8dD
X+9/8//r6ydmPcLMd8y8xMwfzPWMuT5Cd2X/2xb6g5j/WPTAcssTMq3+6+lm
+wVljhfmfPyqe5ubZnt3dX3hzrk9M73B5WLHrjVn7MZeyhc3r23jX9NFvZ7v
F07F3bsf7D4nXuzUdcsI+zPKfD48n/NZ3Q83mvef8+XqzBrTc+r1/D3+H96f
9/u9+b6A1/N+i0qLZpvb/fH7m6nrXm6oHOErUx61j8ifVqZef3BUzGzzpHLx
wHT26ADfdnLc3ffvBxvOi8CSz/ulXPKTo3qtCqopLBNpnquWkJbd5N3kR60N
A8vE6cQjOWGuPrLl4HkR+QP0z9fx9oXuD/rIPuOuVFmal4kuLXzKrn06QJ5d
mFZqq9eEX9vNHr/FEfL5wuxbpkuaSOlzO1HkDpJBfS1Z3kpNrPT8ZVROSaTs
cXu3n+E7TZTIuZlf7h0mF1/JDXGf0kTt2tjrk9oK6egsg2uOaSIqc9O7x6cN
l8GvTqu2FGviTknunv0hUTKxRcFk6wFNbH2vUFy7bpZhOfdLbV9o4nX3nOvL
jo2QAf77UkMLNJFXdvm8tiRaBpwNLHLt0cTQ1BWrdk0eJVNr2he5dmnirdea
b2jTerR0VW486cjT/96lXL/V90bLKS9/P9m6XROBz078cdgHY+X+lTZT/j/0
5/fIebB4TazcYjqS5d2mCWfLTkOe7P2SfHz5TIv9Q00cHbOw0+We42Xw1LOp
oVs0YUhP77vXapGbjjmCaz7QxLreQUPnVVhkmRZgNOTofS2W79iQO0HOTzyd
5d2oH4+QWt+dz8bJo+/MspmzNRGbfW7qxzfj5NyO/T229zUR0N66snBRvDw7
qzTL69TEpfD3recjE+TyeldDsO7EJ7rbDhxOkPXT4l2e9Zr4q7vhUejfJsq8
+52MBt0f3R306UdPJMoXF1/I8q7T329OkFhVkijrQ7+otui+o93cOX1iksza
schmXqsfX2NlV8PTyTIueVyRa40mYorycrttS5YDahNdHv35zC/O/71PxV0e
tvkpWTxc7Crqde4P82zrw+/qZp96Tmqdg6KczzTNt7lTd2/z3NTUfNv/r5Qs
b7mm5tuuQf4280lNzbfsNW+edBRpTfOt5c1bpv2amm85x2Mt9t2amm/y6oUo
Z66m5pvYJx1G/fNlvq1bsKXaslVT8w2r/fyj6TbzJk3Nt4u9H0Q59c+H+TYl
yT/UnaWp+VZx8PBJh368mW8cL+Zb/Yx3O7rfqxDXdta7thxoJm8vtBtr/m+9
ZP7dmVWxpG6uj5oHPgfyRx5+oZVcvzE10nn/giiZGX3z597NZdCJxBh73wsi
yvbnhXUnHpfhG5dmGLeXqfnXfPrmDGNWmWiIDkuJnddDPjmp9Xj7jDKROaAh
bLIIlRXt2mQYq8rE6L+nZVdGdpHOGVHvGE1N6/XBgq4h7nb6/C9fkLsxsp8s
SQqfbPVtWr9dPctPOALLhNXnwWePivtJe69vx9tva+LQ+sKtySED5avmD26Z
qjW1vkfMWhDivq5fbxk9Yg/2eEF+P79ujvmcJiyLRVlB2BCZvKTAz3BGU+v/
T08fKbWV6tffkj2pda8PlV1iSkttbv38/6ro8M4OUj68O+ek46im9gcrky+U
2r7WhLXbkQ7XNSnNUypumQ5pIn1Z3SuO3Cg5Ni3MZtbnB/sHH62dw1ioiR1J
Tw/wvGmWWVVbsrz6+bR3+4idH0eMlJtfePekY5+m9hdL192+ZdI9po9v1+8C
ouX2uP9EOfXzLedPV+IHHhsl6+5Uhbg/0dT+45txFotd9+DPzPOe3xUjp65/
I7hGPx9jji9r1za+6Xxkf/Jh7s9+hh2aSG5l6ZkdNVYuGjzCYdTnT7lz1bX1
VbFyfd5gl0efP+xfTrx2brLVpYn1ovp0cvk4eW7MWIdRn0djMtqc+nJR0/nM
/mak80aUU59P98LSvzg4yCLnr51rsevzqXR4aE6Q7wRZPTO7IVifT+x/mhuf
89h0h4f5dGmdMUEmDz26p0ifV6nfZiSExDZdD+yPrh9IN+Xrnt+1R3T/03Fy
+JVnjAZ9fnWY9qP/wA3x6vnsn66mV6WGbtCPd+BG94jgBDmn2hlco19P+x6O
2fN2RYK6nthfBS6d6jDqj9c37G4dPrNpvkVvnnGjKqTpemP/FZ9Zmxqaqc+X
y4GfNNubKH/y39kQrD+uDVn6/Mg3ktTz2Z/lFa+w2PX5t81dknf0QZKaf9Or
vPtPH9T30/+Nq7T4nRPpWUHF39S1Vetzge/FV+te95fj6lNOOF4pEzOfcqUV
1oXK/wG1CGvt
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHnclkUVhp8BFBdEARVk33EBWUUQEGRREBDFDQSVVVA2RUQEQXBjk0VB
ZFHApbTSMMlKrUBSckvNTMOkKNs003JvsTqXcz2/lz/Od96ZOXPOPc/MnHPP
12zcjOHTqxRF0Tv+VA19dCqKaiEfxu+/h8TP4rCQmv7G9ogi21YLqRNyYEj1
kFr2HRByuLbYdQxpGdIq5EhtDyJWyMEhh4TUC+c10CHHFPk3cWvrjxgNxIHv
hmqwNFIT/yh947f+ftgbO46/puIGSxvt8N3c+eBqFniahnwUv5ukjKtcQ4nx
WOeB5Tg1WI5XE7NDSAvntjN2s5ATHG+i1BZTW9ul3ZFi+lg/7UNOdAy8XwtZ
H7IhpJP4Wod0cW1gPEkNxq5qMHYTBzE/0XePkO72gfdkbbHrrG/89tSe9Z3q
HhO/txrbPmqwnKI/sPcVE1j6qYnTXw2uXvrG7wD7wHW6Gn+fiveMkLNCTtP3
IPHhY5h9xDnTPvAOESsYh6qZP9jx3q6VfeZ8nK0PMF6oL2zPM/7AkOFiBeM5
2tL+TJtzteshvgvEiq/zHaM9Qt9gHKkG40Vq1jrW2Mwb7TrBeLGa+JeowfW5
8S8NGec84o9Xs6YJauJfoS98TDL2qJCJjoNrjD7BcZl92E01DuOXiw9fk/VB
+wttpoRM05Y1LQi5KmRmyCxjM2+GuMF7jX34vtK+Cc6ZKJar1ZP0N8GxG7Rj
fLY+WOt8fWE7V0zTQ+aIkTX909/XhlxnX2k3VnzXixVf8xyjzdniHnDuFxqf
9W0MWRGyMuRmfRPzRtcJxn/Zf1PILY4Tf4kxrve7ci44B0vtY03L/aas+3Zj
3GK8Rca5zXFw3arvueJaqN0y/eFrtVjw9W9/rwpZ7Dww3WEc/K1RM363tvj4
j783hdxjHxjXuQZirncNYNygBtddji8X3yy/12Z9EP9+fWG71vh8s3tt3xny
gOPE2eI88N7n+Dr1EjFtdZz5XxcTe/il63gw5CF/s9ZvqFnfN9VgfNh4+Ntm
PPA+Yh8Yv6Utdi+F7AjZGfKotmB/rMg1ACz/Nf72kO/uh+Xb+iPG98QElu+r
ifMDNbi+o2/8PmEfuJ5U4+8pNdh3hTyu7x+JDx8/sY84P7bvMddQYnxazfz/
2b/D9kNifUYfYISEMP5iyHPi+GHIbrGC8Vltaf/UvtJum/heECu4nneMNvwF
ngCfgHfUtv2K62RNr6rB9XM1MX8hDmK+oV/ivG4feF/TFruXXT9+U8prejNk
j/v9s5C31Nj+Wg2WX+qPGHvFBJbfqInzWzW4fuU3w+8++8D1OzX+fq8G+7sh
b+v7D+LCx3v2EeeP9oH3z2IF41/UzP+T4+U6drrmv+oDjFX93vA5uCe8E/73
N7GC8X1taX9gH3irpIztnSLzTXyUXBUN/6MuUQvI//DIOu5rnyLXU+ornBGe
Bd+COx5tGxxwgHpFhXc20G99x45Jmb/WLTInorb3KCrctKHx4HWNjd/UNvGa
2a6pb/zCPeGdLYwNr2tpvNa2a+mvkXPaOIaPY22X3PRY58OnOjgPTne8vjo5
Bqa2joELvgZva+G89mJtpx3fqLm2xO6sL8bhaN2NAa/rWlT4aMlPuzin5KYn
FRUOfZwx8FFy1W76gmdMcl+r+x3rFBUOempR4aC9jXOa7ZJ39i0qnHJAUeGg
/cTR1zkd9dfLfYWnnWEb7jbI8cG2iTfEdjd999cXNXqovofZJt7Ztnvqb6Bz
znEMH8NtExvOda7zR/k9mAeXO19fox0D04WOlZxyRFHhlCPFOkK7Dq6tZ1Hh
lKMd5w5NMAZ8Z6w4xhSZz5W882IxjnVsoHPOKypcs+Se4/VFviC3vSruye4x
HOOwlHlGWVPLGoumzpX1rKxv6LKGoKkxZZ3DjrpNzaTGldwCDkCdp95T3+EZ
Gx2j9pdcYJU4iL/ceXCIssYTn5r5hPHK2kl7sb5LjkE9oo7CleAecBc4JhwP
zgfnPDTlvnu1LTnCI0WFRzzs+h50rdtdG/W2rOfokjs8auzNzgP3Mtexzm8P
n4JXlRzuDmWL87oFrnkpvy2mhL4ipH5IHZKv9axT6Jkpvy9rp1zjqd+1UuYr
4CxrBjWkS/Rfk/Lb7oTQl/m/iLccp55Mjr5JKf+vomvInJTfWHscpy51iL4Z
Kb+bj0iZn/FtDk+Zd25ynfe7D2v9vlvdg83u53q/Y8kTH3DOGm23eCbucz5c
vUbKe9cu9HD/h3Bi6Gn+PjLlek/dAkvNlM/UuNCbUh5fbXzO2ZJoj0r5DvBe
me3elO8c3jPUzH/kz14c4p5wH49KuZ9x6i119z3PAtwHzsO9e9c9ONhvyZ0+
yH04w/OCLTyphv6ogdXdW/LigX5vasQBrpW6sdeYxKCGvy+OltS3kIYpfwPu
Od/hM2MT93MxgaduyuuBI3zhOlnjJ8Ym7sfGJu6n4gPbviLzCWLDHT6wfai+
prhv3Df2jm/NXpJztrluOCRvPt5H3M+SBz/pnJu1J+fx7pvmHkzVPzmP92X5
ZkWX79oZReWtyNuNNxQ5lLfp5frmXK7W71xxjLE91fnzHJvouSAeOXSWZ4WY
843B2ALbvP/Ig8v1y52/RV+LbTN/obacP96O5dtrkWPEX+IcYiy1fZPYVxlv
mWMLjLnM+SvEMdM4C/S90rE54vrqHRt7dFHK+7Y8ZLTn6MaQkSnvbSPP16Fh
3zxlrlb+bihva6kdeaae/ZzxVo7Dv+o7F453Jecx5XO2iPPluWG8gf5vDt3L
MwRHJifBo+Hd+4p8D8hfdT3PvAng6nB3ciT5kdwID2y9HxdEt1S3Elv5JnlF
zK3F2VqbJq6vsWusYo4h/5AXyYnkQ/IxuZI8SSIhX5Orq3nvvvp/sPmd3L4g
dHfvz0diBSM14WRz0OLQvb3b5RumfAug94j7bcfe9Du945r2Ola+T7i7vKVe
91vy/nnD8Zf0x/d+zj7s2kb8qe7Ni44T55xob/W77Nbfa0XlXbSvqLyjyJ1t
wu5497d8a4FvdfQNSPn7LQt9mjVmReh+KX9jalpn8+ndoYemvA/rQgal/L2p
D+3Mm9Su9uZT6mdH8+yG0INT3oc15MiUzws18KSUcyf85pmi8v5G7/Jst/Js
cH6ne4ZHhMxPOZ+eF3JVyvn0gpBrU87F54fMSjmfXhgyN+W8zD1b6F2jRt2a
cu68NOSOlM8xd/SmlO/pTveevRob7fWepzEhd3rmqDMvFJV3+fPu52xxgOGU
lM8fZ29l6ItTPsc3uB7Wcr1YwXmd62Eta8UHtvEhEz3fO8TFGbkn5XrMPblL
fGDbmDLuOp6Fsz0Pt4e+JOX7A5bbxENOWppyXmJ8lTbl/w4441f73fnmj7tX
TxeZc5P74WID3W/2+kzPDWeGu0kN/dD8Q14rc1hzsXH3W9rXwt/Yl+0a5oqm
ng10M3+X/6Nh31oYD/vt9vHNhqR8LjmTfVO+A5z//infgS/18bJ7Pyz6NodU
DTkr5fvAXdhlLsDuKfecu35qyvmUXAqfftbzDZ/ebftJbWn3TDkvk5P7pJyD
yD+np3xXuadVjUme+T/8kgP4
         "]], PolygonBox[CompressedData["
1:eJwt0mkrblEYxvF9m+eZJ06UV44IxzxzzMMhno9gPsgQERERERERkekTynSO
mf/dvV78uvZde++197VWZt+kfyLA87w8BMEvnneDTNwzj5NZiOT6B7mPJnww
x5GHaMEnczzZgyuku2dWyUo8cx1JLqIU/5jDyWO04Ys5gZxAnls7mJxHMZ6Y
w8hdNOCdOZbcRC1emaPJdVTjhTmKHMVfpCIN5/gDQRKGMIIU3PLMNFmAB65D
yEEM4I45mTxFBzwk4hLdCEAgtlGPN26JIZdRjv/MEWQ+psT+TdeYJQvxyHUo
2Y4TsS50jWH8hM99YwkWxLrQDsvIJbEudY0KckVsLe28iJwTe7d2qO/qF/sX
n+smV2xvtaNfmBH7d/2mKnJNbO+00xpyQ6xb7fyazHHdZZCtOBI7C7qnXeSF
61o76sSZ6073IBtjbm983N9MHoidLT1Tv8kdsS51z+vILbG91o71rPWKra1n
rhF7YmdDz+iNW0PfrWf6G+gdRyE=
         "]]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwt0tlWDAAABuDREPUA7uumUJMUbfYYWkTTokjLoBhprFkSiiQ0FdmS4qYH
6AE8gAfwAJVCck5v4OucLr5z/rv/4v/TovFI14ZAIDBDEmt5lQvCRc6TSQeX
aGcHX6hmmlNsJ4NOsrhMjCts4ysRsrlKiLXiGq6RQ5ydXKeWm+Ryg13coo5u
8rhNPneo5x67ucse7nOaBxTQQyG9NPCIIh5SzGMa6aeEPvbyhDMMsI+n7OcZ
Z3nOAQY5yBBNvOQQLzjMK86RoJRhjjBCM2McZZQwr2lhnGO84ThvaeU9Zbyj
nA+0MUEFH6nkE1E+c4JJqpjiJEHmbb7ATxZZ4he/+cMyf1nhH3P84DvfmF3/
0AQJ+ukmRjMRwhQTIp2tpJLCFjaTzCY2Elz/5H/Xxket
      "]]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {2, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.705038375161385*^9, 3.705038406900407*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{"lQinM", ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7050530265982*^9, 3.705053040259556*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}]], "+", 
   FractionBox[
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "m"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "m", "]"}], "2"],
    SeriesData[$CellContext`m, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`m, 
   0, {(-1 + $CellContext`\[Mu])/(-1 + $CellContext`\[Mu] - $CellContext`n \
$CellContext`\[Mu]), $CellContext`n (-1 + $CellContext`\[Mu]) (
      1 + (-1 + $CellContext`n) $CellContext`\[Mu])^(-2)}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.705053038249668*^9, 3.705053040697521*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{"lbBD", ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7050530501917477`*^9, 3.705053052627195*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}]], "+", 
   FractionBox[
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "m"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "m", "]"}], "2"],
    SeriesData[$CellContext`m, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`m, 
   0, {(-1 + $CellContext`p) $CellContext`p (-2 + $CellContext`\[Mu])/(-1 + \
$CellContext`\[Mu] - $CellContext`n $CellContext`\[Mu]), $CellContext`n (-1 + \
$CellContext`p) $CellContext`p (-2 + $CellContext`\[Mu]) (
      1 + (-1 + $CellContext`n) $CellContext`\[Mu])^(-2)}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.705053053342925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"l\[Beta]BDD", "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"l\[Beta]BDI", "/.", 
     RowBox[{"lQin", "\[Rule]", "lQinM"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.705053094173192*^9, 3.705053124824017*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}]], "-", 
   FractionBox[
    RowBox[{"n", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "m"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "m", "]"}], "2"],
    SeriesData[$CellContext`m, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`m, 
   0, {(-1 + $CellContext`\[Mu])^2/(
    1 + (-1 + $CellContext`n) $CellContext`\[Mu]), -$CellContext`n (-1 + \
$CellContext`\[Mu])^2 (1 + (-1 + $CellContext`n) $CellContext`\[Mu])^(-2)}, 0,
    2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7050530944987698`*^9, 3.705053125249219*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}]], "-", 
   FractionBox[
    RowBox[{"n", " ", "m"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "m", "]"}], "2"],
    SeriesData[$CellContext`m, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`m, 
   0, {(1 + (-1 + $CellContext`n) $CellContext`\[Mu])^(-1), -$CellContext`n (
      1 + (-1 + $CellContext`n) $CellContext`\[Mu])^(-2)}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7050530944987698`*^9, 3.705053125254599*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DB", "Subsection",
 CellChangeTimes->{{3.705051617648315*^9, 3.705051619173868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lQM", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Qin", "\[Rule]", "lQin"}], ",", " ", 
     RowBox[{"Qout", "\[Rule]", "lQoutM"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]DBD", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]DBD", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]DBI", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]DBI", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]DB", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]DB", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Gamma]DB", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]DB", "/.", "mychange"}], "/.", "lQM"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705051623611762*^9, 3.705051637990749*^9}}],

Cell[BoxData[
 RowBox[{"lQin", "-", 
  RowBox[{"lQin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{3.705051638954937*^9, 3.70505190187027*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "n"]}]], "Output",
 CellChangeTimes->{3.705051638954937*^9, 3.705051901912109*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "lQin"}], ")"}]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", "n"}]}], ")"}],
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{3.705051638954937*^9, 3.7050519020201406`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], "+", 
      RowBox[{"lQin", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{3.705051638954937*^9, 3.7050519021478567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lbDB", "=", 
  RowBox[{
   RowBox[{"l\[Beta]DB", "/.", 
    RowBox[{"lQin", "\[Rule]", "lQinM"}]}], "//", "FullSimplify"}]}]], "Input",\

 CellChangeTimes->{{3.705051903648543*^9, 3.70505191858422*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{"m", "-", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.705051913194066*^9, 3.705051919013898*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dlbDB", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"lbDB", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dlbDB", "/.", 
   RowBox[{"m", "\[Rule]", "0"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7050519210531893`*^9, 3.705051960363145*^9}, {
  3.7050519920723248`*^9, 3.705051994494766*^9}, {3.705053893144455*^9, 
  3.705053906176437*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "m", "-", 
        RowBox[{"m", " ", "n"}]}], ")"}]}], "-", "\[Mu]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{"\[Mu]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
      RowBox[{"n", " ", "\[Mu]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.705051924340417*^9, 3.705051961218384*^9}, 
   3.7050519949295588`*^9, {3.705053901504244*^9, 3.705053906721567*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{"\[Mu]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]}]]], "Output",
 CellChangeTimes->{{3.705051924340417*^9, 3.705051961218384*^9}, 
   3.7050519949295588`*^9, {3.705053901504244*^9, 3.705053906739071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dlbDB", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.705053909508731*^9, 3.705053919445359*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "n"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "n"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.705053915428608*^9, 3.705053923265513*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mci", "=", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "n"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mci", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
    RowBox[{"p", "\[Rule]", "0.45"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.705053943122267*^9, 3.7050539787165327`*^9}, {
  3.705054008861621*^9, 3.7050540173550863`*^9}}],

Cell[BoxData["0.3346640092948431`"], "Output",
 CellChangeTimes->{{3.705053950029175*^9, 3.705053979625991*^9}, 
   3.705054017788686*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mci", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"p", "\[Rule]", "0.45"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.705054019985058*^9, 3.7050540372019587`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}]}], 
   RowBox[{"n", "+", 
    SqrtBox[
     RowBox[{"n", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"]}]], "-", 
    RowBox[{"n", " ", "p"}]}]]}]], "Output",
 CellChangeTimes->{{3.705054024612417*^9, 3.705054037387759*^9}}],

Cell[BoxData["0.33333333333333326`"], "Output",
 CellChangeTimes->{{3.705054024612417*^9, 3.7050540373902187`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.705051644014419*^9, 3.705051646047773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "m"}], "-", 
    SuperscriptBox["m", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.705052152669264*^9, 3.705052161809026*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$231694#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999996}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7050521623608513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"lQinM", ",", 
    RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"%", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"lQinM", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.705052894536174*^9, 3.705052952536632*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[Mu]"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.705052902167655*^9, 3.7050529529504766`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.705052902167655*^9, 3.705052952955028*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "m"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "m", "-", 
   RowBox[{"m", " ", "n"}]}]]], "Output",
 CellChangeTimes->{{3.705052902167655*^9, 3.7050529529982347`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WF", "Subsection",
 CellChangeTimes->{{3.705054103916273*^9, 3.70505410526857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lQinWF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QinWF", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"lQoutWF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"QoutWF", "/.", "mychange"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705054132492855*^9, 3.705054138682137*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{3.705054145884738*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.705054145954979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lQWF", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Qin", "\[Rule]", "lQin"}], ",", " ", 
     RowBox[{"Qout", "\[Rule]", "lQoutWF"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]WFD", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]WFD", "/.", "mychange"}], "/.", "lQWF"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]WFI", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]WFI", "/.", "mychange"}], "/.", "lQWF"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Beta]WF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]WF", "/.", "mychange"}], "/.", "lQWF"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"l\[Gamma]WF", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]WF", "/.", "mychange"}], "/.", "lQWF"}], ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.705054113907832*^9, 3.705054165615644*^9}}],

Cell[BoxData[
 RowBox[{"lQin", "-", 
  RowBox[{"lQin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{3.705054166594862*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "n"]}]], "Output",
 CellChangeTimes->{3.7050541666398077`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "lQin"}], ")"}]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"lQin", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", "n"}]}], ")"}],
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{3.7050541667426043`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], "+", 
      RowBox[{"lQin", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{"n", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{3.705054166848353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lbWF", "=", 
  RowBox[{
   RowBox[{"l\[Beta]WF", "/.", 
    RowBox[{"lQin", "\[Rule]", "lQinWF"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7050541986506987`*^9, 3.705054208849642*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.7050542069991703`*^9, 3.705054209258049*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dlbWF", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"lbWF", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dlbWF", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.705054218866209*^9, 3.705054250069763*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
   "2"]]], "Output",
 CellChangeTimes->{{3.705054222759259*^9, 3.705054250532692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.705054222759259*^9, 3.7050542505478973`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dlbWF", "/.", 
   RowBox[{"m", "\[Rule]", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7050543786691513`*^9, 3.705054385328583*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]]}]], "Output",
 CellChangeTimes->{{3.705054383397107*^9, 3.7050543856933804`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dlbWF", "/.", 
   RowBox[{"m", "\[Rule]", "0"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], "Input",
 CellChangeTimes->{{3.705054478688443*^9, 3.7050544895694304`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]]}]], "Output",
 CellChangeTimes->{{3.7050544842159767`*^9, 3.705054490038957*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]], "Output",
 CellChangeTimes->{{3.7050544842159767`*^9, 3.705054490041787*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddlbWF", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"dlbWF", ",", "m"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.705054280568617*^9, 3.705054296304947*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
      RowBox[{"6", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "3"]]}]], "Output",
 CellChangeTimes->{{3.705054289442812*^9, 3.705054296871633*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ddlbWF", "/.", 
   RowBox[{"m", "\[Rule]", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.705054298889678*^9, 3.705054307747016*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "n"]], "Output",
 CellChangeTimes->{3.7050543080623903`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BD", "Section",
 CellChangeTimes->{{3.704738073299255*^9, 3.704738074980177*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]BD", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047134050514183`*^9, 3.704713406134329*^9}, {
  3.7047134455958233`*^9, 3.7047134509779377`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Qin", "-", 
        RowBox[{"n", " ", "Qin"}], "+", 
        RowBox[{"n", " ", "Qout"}]}], ")"}], " ", "\[Mu]"}], "-", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Qin", "+", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "-", 
           RowBox[{"n", " ", "Qout"}]}], ")"}]}], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Qin"}], "+", "Qout"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", "n", " ", "\[Mu]"}]]], "Output",
 CellChangeTimes->{
  3.7047134069955807`*^9, {3.704713447701441*^9, 3.704713451533285*^9}, 
   3.7047365054657993`*^9, 3.7047371863042393`*^9, 3.704737652464341*^9, 
   3.705037159005027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]BDD", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704713464195245*^9, 3.7047134918109083`*^9}}],

Cell[BoxData[
 RowBox[{"Qin", "-", 
  RowBox[{"Qin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.7047134662238483`*^9, 3.7047134920915337`*^9}, 
   3.7047365056027927`*^9, 3.704737654434084*^9, 3.704767147580703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]BDI", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704713464195245*^9, 3.704713488261057*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "d"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
   
   RowBox[{"d", " ", "m", " ", "n", " ", "Qout"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin", "-", 
      RowBox[{"n", " ", "Qin"}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{"Qout", "-", 
         RowBox[{"d", " ", "Qout"}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}]}], 
  RowBox[{"d", " ", "n"}]]], "Output",
 CellChangeTimes->{{3.704713485077297*^9, 3.704713488613811*^9}, 
   3.7047365056078444`*^9, 3.7047376560741987`*^9, 3.704767149152275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}], "+", "1"}], ")"}], 
      "n"]}], "+", 
    RowBox[{"m", "  ", "Qout"}], "-", 
    RowBox[{"\[Mu]", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", "1"}], ")"}], "Qout"}], "+", "1"}], ")"}], 
      RowBox[{"n", " ", "d"}]]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "-", "\[Beta]BDI"}], "/.", "mychange"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704737680091498*^9, 3.704737885308292*^9}, {
  3.704737937749555*^9, 3.704737964444858*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.70473770052295*^9, 3.704737885824142*^9}, 
   3.7047379648921623`*^9, 3.70476715016578*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["factorBD"], "Input",
 CellChangeTimes->{{3.704738004583294*^9, 3.704738005613209*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}], " ", "p"}], "\[Mu]"]], "Output",
 CellChangeTimes->{3.7047380060335693`*^9, 3.70476715220078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"factorBD", 
    RowBox[{"(", 
     RowBox[{"\[Beta]BDD", "-", "\[Beta]BDI"}], ")"}]}], "-", "\[Beta]BD"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704713505313136*^9, 3.704713523096307*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704713513890823*^9, 3.704713523557266*^9}, 
   3.704736505753703*^9, 3.7047376576884823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]BD", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704738091396559*^9, 3.7047381227374268`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.704738107260592*^9, 3.704738123961595*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704738124933076*^9, 3.7047381449559097`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
    RowBox[{"n", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.7047381306791058`*^9, 3.704738145307907*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
   RowBox[{"1", "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7047381306791058`*^9, 3.7047381453305283`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]BD", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704738779386641*^9, 3.7047388001548977`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", "n"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", "n", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "-", 
              RowBox[{"2", " ", "m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n"}], 
             ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}]}]]], "Output",
 CellChangeTimes->{3.704738801151413*^9, 3.7047394785573177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"%", ",", 
     RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", "FullSimplify"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704738845765427*^9, 3.704738849750993*^9}, {
  3.704739506374881*^9, 3.704739514975065*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"d", " ", "n"}]}], ")"}]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]], "Output",
 CellChangeTimes->{3.704738850179503*^9, 3.7047394792736187`*^9, 
  3.704739515517808*^9}],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  RowBox[{"(", 
   RowBox[{"-", "\[Infinity]"}], ")"}]}]], "Output",
 CellChangeTimes->{3.704738850179503*^9, 3.7047394792736187`*^9, 
  3.704739515519824*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "n"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"2", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n"}], ")"}], " ", 
      "\[Mu]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.704738850179503*^9, 3.7047394792736187`*^9, 
  3.704739515657848*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  RowBox[{"DirectedInfinity", "[", 
   FractionBox[
    RowBox[{"Sign", "[", 
     RowBox[{"m", " ", "n"}], "]"}], 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m", "-", 
      RowBox[{"m", " ", "n"}]}], "]"}]], "]"}]}]], "Output",
 CellChangeTimes->{3.704738850179503*^9, 3.7047394792736187`*^9, 
  3.704739515929489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]BD", "-", 
   RowBox[{"factorBD", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]BDD", "-", "\[Gamma]BDI"}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704739067900897*^9, 3.7047390800418453`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7047390766266003`*^9, 3.7047390803575993`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"{", 
     RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.704739432953333*^9, 3.704739446420547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"d", " ", "n"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "d"}], "+", 
      SuperscriptBox["d", "2"], "+", 
      RowBox[{"d", " ", "m"}], "-", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", "m"}], "+", 
      RowBox[{"d", " ", "n"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", "n"}], "+", 
      RowBox[{
       SuperscriptBox["d", "3"], " ", "n"}], "-", 
      RowBox[{
       SuperscriptBox["d", "3"], " ", "m", " ", "n"}], "+", 
      RowBox[{
       SuperscriptBox["d", "3"], " ", "m", " ", 
       SuperscriptBox["n", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", "\[Mu]"}], 
   RowBox[{"d", " ", "m"}]]}]], "Output",
 CellChangeTimes->{3.704739446822177*^9, 3.7047394816028843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Gamma]BDD"], "Input",
 CellChangeTimes->{{3.704739007281342*^9, 3.704739022328876*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "\[Mu]"}]], "Output",
 CellChangeTimes->{3.704767747168292*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]BDI", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.7047677699035587`*^9, 3.704767812339033*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "d"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
   
   RowBox[{"d", " ", "m", " ", "n", " ", "Qout"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin", "-", 
      RowBox[{"n", " ", "Qin"}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{"Qout", "-", 
         RowBox[{"d", " ", "Qout"}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}]}], 
  RowBox[{"d", " ", "n"}]]], "Output",
 CellChangeTimes->{{3.704767771655303*^9, 3.704767832406831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "\[Mu]", ",", "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.704767828298875*^9, 3.704767839753004*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin"}], ")"}]}], "n"], "+", "Qin", "-", 
  RowBox[{"m", " ", "Qin"}], "+", 
  RowBox[{"m", " ", "Qout"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin", "-", 
      RowBox[{"n", " ", "Qin"}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{"Qout", "-", 
         RowBox[{"d", " ", "Qout"}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.7047678346712427`*^9, 3.704767840209413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "Qin"}], ")"}]}], "n"], "+", 
    RowBox[{"Qin", 
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], " ", ")"}]}]}], ",", "Qin", ",", 
   "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.704767901851565*^9, 3.70476791080135*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"1", "-", "m"}], "n"], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "n"]}]], "Output",
 CellChangeTimes->{{3.704767905122078*^9, 3.7047679111268*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Gamma]BDI"], "Input",
 CellChangeTimes->{{3.704800467641281*^9, 3.704800470006852*^9}}],

Cell[BoxData[
 RowBox[{"dself", "+", 
  RowBox[{"din", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
  RowBox[{"dout", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "n"}], "+", 
     RowBox[{"d", " ", "n"}]}], ")"}], " ", "Qout"}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "n"}], "+", 
         RowBox[{"d", " ", "n"}]}], ")"}], " ", "Qout"}]}], ")"}], " ", 
    "\[Mu]"}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704800463786419*^9, 3.7048004933326273`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]BDI", "/.", 
   RowBox[{"dself", "\[Rule]", "din"}]}], "/.", 
  RowBox[{"\[Mu]", "\[Rule]", 
   RowBox[{"1", "-", "no\[Mu]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "no\[Mu]", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70479963784451*^9, 3.704799667727474*^9}}],

Cell[BoxData[
 RowBox[{"din", "+", 
  RowBox[{"din", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
  RowBox[{"dout", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "n"}], "+", 
     RowBox[{"d", " ", "n"}]}], ")"}], " ", "Qout"}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "no\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "n"}], "+", 
         RowBox[{"d", " ", "n"}]}], ")"}], " ", "Qout"}]}], ")"}]}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704799634618039*^9, 3.704799668044215*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"no\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", "Qout"}]}], 
     ")"}]}], 
   RowBox[{"d", " ", "n"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", "din", " ", "n"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", "dout", " ", "n"}]}], ")"}], " ", "Qout"}]}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704799634618039*^9, 3.7047996681733522`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"d", " ", "din", " ", "n"}]}], ")"}], "/.", "mychange"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704800137408587*^9, 3.704800140876382*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "d", "-", 
  RowBox[{"d", " ", "m"}]}]], "Output",
 CellChangeTimes->{{3.7048001389256487`*^9, 3.70480014125333*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "n"], "+", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}]}], "n"]}], ")"}]}], 
    "+", 
    RowBox[{"m", " ", "Qout"}], "-", 
    RowBox[{"\[Mu]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}], "+", 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", "1"}], ")"}], " ", "Qout"}]}], ")"}], " "}], 
      RowBox[{"d", " ", "n"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "-", "\[Gamma]BDI"}], "/.", "mychange"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704767815519598*^9, 3.704767823334532*^9}, {
  3.704767855807231*^9, 3.704767874570121*^9}, {3.704767924101268*^9, 
  3.7047679952490664`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.704767823735715*^9, {3.7047678572622643`*^9, 3.704767875239316*^9}, {
   3.7047679514652243`*^9, 3.704767995647441*^9}, 3.7047697130405416`*^9, 
   3.704770314631957*^9, 3.704797864680479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", 
    RowBox[{"1", "-", "no\[Mu]"}]}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "no\[Mu]", ",", "FullSimplify"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}]}], "-", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}], "-", 
         RowBox[{"n", " ", "Qout"}]}], ")"}]}], 
      RowBox[{"d", " ", "n"}]], "+", 
     FractionBox[
      RowBox[{"no\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", "-", "1"}], ")"}], " ", "n", " ", "Qout"}]}], ")"}]}], 
      RowBox[{"d", " ", "n"}]]}], ")"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704769714724742*^9, 3.704769743669816*^9}, {
  3.704797860245595*^9, 3.704797862521574*^9}, {3.704799487581462*^9, 
  3.704799522545998*^9}, {3.704799569763098*^9, 3.704799582643949*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}]}], "-", "no\[Mu]"}], ")"}]}], 
    " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
   
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "no\[Mu]", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m", "+", "no\[Mu]"}], ")"}]}]}], ")"}], 
    " ", "Qout"}]}], 
  RowBox[{"d", " ", "n"}]]], "Output",
 CellChangeTimes->{{3.704769719534422*^9, 3.704769745469123*^9}, 
   3.704797866547448*^9, {3.704799495056131*^9, 3.7047995265062017`*^9}, {
   3.704799573637146*^9, 3.704799583346725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "-", 
       RowBox[{"n", " ", "Qout"}]}], ")"}]}], 
    RowBox[{"d", " ", "n"}]]}], "+", 
  FractionBox[
   RowBox[{"no\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", "Qout"}]}], 
     ")"}]}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704769719534422*^9, 3.704769745469123*^9}, 
   3.704797866547448*^9, {3.704799495056131*^9, 3.7047995265062017`*^9}, {
   3.704799573637146*^9, 3.704799583348728*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704769719534422*^9, 3.704769745469123*^9}, 
   3.704797866547448*^9, {3.704799495056131*^9, 3.7047995265062017`*^9}, {
   3.704799573637146*^9, 3.7047995833497458`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Qin", " ", "+", " ", 
   RowBox[{"Qin", " ", "\[Mu]", " ", "p", " ", "p"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "Qin"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], "p"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.704769799836644*^9, 3.704769824993037*^9}}],

Cell[BoxData[
 RowBox[{"Qin", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "Qin"}], ")"}], " ", "\[Mu]"}], "+", 
  RowBox[{
   SuperscriptBox["p", "2"], " ", "Qin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.704769822166749*^9, 3.704769825401396*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704770256753154*^9, 3.70477028268075*^9}, {
   3.704770351995831*^9, 3.704770356150885*^9}, 3.7047704040203457`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "m"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "n"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "n"]}], ")"}]}],
   "+", 
  RowBox[{"m", " ", "Qout"}]}]], "Output",
 CellChangeTimes->{{3.704770278942438*^9, 3.704770283138136*^9}, 
   3.704770316670145*^9, 3.704770356781468*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "m"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "n"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "n"]}], ")"}]}],
   "+", 
  RowBox[{"m", " ", "Qout"}], "-", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", "Qout"}]}], 
   RowBox[{"d", " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704770278942438*^9, 3.704770283138136*^9}, 
   3.704770316670145*^9, 3.704770356783176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "n"], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "n"]}], 
       ")"}]}], "+", 
     RowBox[{"m", " ", "Qout"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "n"], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "n"]}], 
       ")"}]}], "+", 
     RowBox[{"m", " ", "Qout"}], "-", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", "Qout"}]}], 
      RowBox[{"d", " ", "n"}]]}], ")"}], " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.704770278942438*^9, 3.704770283138136*^9}, 
   3.704770316670145*^9, 3.704770356785316*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704770278942438*^9, 3.704770283138136*^9}, 
   3.704770316670145*^9, 3.704770356786809*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7047678000036583`*^9, 3.7047678096797647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]BDI", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
      RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"factorBD", "*", "%"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704739007281342*^9, 3.704739058212208*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "d"}], " ", "m"}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}], "+", "m"}], ")"}], " ", 
    "\[Mu]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d", "-", 
      RowBox[{"d", " ", "m"}]}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{"d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}]}]]], "Output",
 CellChangeTimes->{{3.704739011246763*^9, 3.704739058891836*^9}, 
   3.704767755184567*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"DirectedInfinity", "[", "d", "]"}]}], "d"]], "Output",
 CellChangeTimes->{{3.704739011246763*^9, 3.704739058891836*^9}, 
   3.704767755251631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]DB", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7047389830041323`*^9, 3.70473899004815*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}]}], "+", 
     
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.7047389843991213`*^9, 3.704738990444407*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", 
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]], "Output",
 CellChangeTimes->{{3.7047389843991213`*^9, 3.704738990500292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  "\[Infinity]"}]], "Output",
 CellChangeTimes->{{3.7047389843991213`*^9, 3.704738990538762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"tmp", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "n"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"2", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n"}], ")"}], " ", 
      "\[Mu]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
     RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.704738812092511*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  RowBox[{"DirectedInfinity", "[", 
   FractionBox[
    RowBox[{"Sign", "[", 
     RowBox[{"m", " ", "n"}], "]"}], 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m", "-", 
      RowBox[{"m", " ", "n"}]}], "]"}]], "]"}]}]], "Output",
 CellChangeTimes->{3.704738812408729*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704738803845284*^9, 3.704738805949836*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]BDD", "-", "\[Beta]BDI"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
      RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Sign", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.704805958387121*^9, 3.704806008972891*^9}, {
  3.7048060990954447`*^9, 3.704806127429186*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{
      SuperscriptBox["d", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}]}]]], "Output",
 CellChangeTimes->{{3.704806115434598*^9, 3.7048061277406597`*^9}, 
   3.7048072747213383`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sign", "[", 
   RowBox[{"\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], "]"}], 
  RowBox[{
   RowBox[{"Sign", "[", "d", "]"}], " ", 
   RowBox[{"Sign", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     "]"}]}]]], "Output",
 CellChangeTimes->{{3.704806115434598*^9, 3.7048061277406597`*^9}, 
   3.704807274722731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7048061861627693`*^9, 3.7048061955333014`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704806115434598*^9, 3.704806127742318*^9}, {
  3.704806188678176*^9, 3.704806195888369*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", 
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"m", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}]], ">", "0"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704806351412462*^9, 3.704806378141144*^9}, {
   3.70480641477534*^9, 3.704806505046241*^9}, {3.7048065493358727`*^9, 
   3.7048065499426947`*^9}, 3.70480720449304*^9, {3.704807292052047*^9, 
   3.7048073052833147`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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

   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlXdsVmUUh88tdMDXUixDQBSqKEsBkSWKrCIoIqu4EKUVlNbSr+CIgiJT
mWFqFFAUEggEAnEQF7JcIEONERAnKvtPCKhxPCfnl9g/nnz3O/e85z37Fpam
h1VmmNnbUANaQXPIgkpIQQ6UQgnUhkfgYciDdjpTCFdDXbgErtFvgeRt9a4z
DIL60ALyJb8B7oB6MBCu01mX3SX59XpXoPtzoQ5cpV+39SB0gDYwGkbp7haS
5cvXVorRz7ZWLOV6lyUbrfW+RDnwXIxXLlyvTLm4UvFeq5g9b7XkXzEMV05v
hMHQELrCndAARsLN0AjugS6S3w2dlKv7oDtcKt2bpN9ddl3eTXbd/kR4DRLF
3UGxPAZ7wGt+r864/uNwwKIHRsDtkClfOsufTqpTfcVULB3XHaBn92uI/CmW
rUzFP1y57QFD5f9tMAxqqs4dVeuOqnc91aG9ajRAZ1z/FtlqbNEvXoOCavX2
vhoLY1Qjz8EDsuc6o6RXBWmLnhqqerhvFfCoRf2HqAYe1/0WfeZ5LZP9lPxz
G3V0xuW19VsinTHyyeXeRw9Z9NI4i17Kk9z7LFuysmpnyxSLvy+vpjNO8ir9
T+lO9z9HvxXS996slLxctgolS+tsqfRLJPN3ufK3VP5X6DlbcaelMwfWqGYL
4bDFHC+CIxbz/w18Cf0tZsJ70fvQZ8JnoIH0fAa833y2fI/4fB2EL+BW+3/+
81QPf85XjdqovqvgRWgJe+FT6AevwGzlbRZ8a9FbWQzNcos+yeD5rEUvp5Xf
lHJcpbhPwrNwBSyDHyz66C+YK7/PwwsWc7AEjiruxfCd4v4H5lv08VL43qLv
PoZTUASveg6S6PeVYHqeDNOgqe5JkrjrIlxQPhboDrc/T/65b3/Anxbz8JnF
7vC98QxMh8sV3wzFmMvLVBL7dQX8rfrUSCJOv/cDeB96wiSYCpfBFJgJzVST
vCTq4jX5XHVZB2stdsB2+Ah6w07YAX1gG3wIvWRjgur7ifJVpDx5jjw/h+B5
i131Brxu8e2qlUS/eq+ehjMW++hJWG3R5+fgPYt9869i9ni9d1626B/XfUL6
3pv7LfpzN+yCvrLxrux4HL8rFo/vV8V4TPnyXG2Fdyz2vefyJ+VzC2y22N2b
YKPFnn4L3rT4JmyA9RY7+0d4ymJP/gxPQxP4zaJvmiqXvyifxy1q73V/CWom
8b38yuI74d8In92vLebX4zuhGPdZfGMydM9zuisbGzlJ7F/PfWYS+f8Pyi67
vg==
         "]], PolygonBox[CompressedData["
1:eJwt1Fdsj2EUx/Hztn9UzVtbpVZqtWZV7VVbQ0uLikbiiivjznZhrygSRLQ2
NUolIiIiRozYe+89Y4XwPXl+F5887//9P+/znOec875JE6ZkT44zs8GI4Tt+
YgySMQcn0BP1MBXVI7NCxkTMxFF0Q208xzPU1TO7sQvt0QGzcAzdUQeP8UjP
+r0d2I62aIfpqMl+kxirYStKkIo0zMZx9NCeT/FEa/u9uTiJXqiPLVrT12qN
h3iAWjrDRVxCX8TjNV7p2d64gsv6rx/O4hz6wPM4D6c0twHWogbxT2RshAs4
r7m+x0u8UG49xgrMXcPYDK1wBqcRaY/3uIkBGImruKZYvH4xJsajoda4gTfI
Rha+4CA6I8/CwksYmqClarXcQj94zcqxGsORqdoswyDVqAyrMAwZuI+vyNcz
+7ESQ5GOBPariOZcj8MMfENX1WAvVmAIOuI2PiJXMd3CB+Qohns6U55iuIvP
GK093ylnnqsRWI/KUai9x3AHnzBKe3qvrVOtvOeOKAeZirFUMXpsnXBAZ0xX
TotRKQpna4MfSOR3gYV3KuI6LgqxeI0W4Dr6q6ZvVdOYauZn3Wah13OU28Po
ohxvxCY0DaW0P6jKxXjGFCzFBtV2IIqw2UJvJSm2YsXqMf7FIjRGC+V+p4V3
MVe52mPhXfacLcY/zfUe8l6fZuHb4D3v34oi7VWo2uxT7rxGCxVzivaswvxf
jGMtnOG3hW9Ssu55ruZb6GXPWYnO6Gfzb8IhCz2ZoRz9B37Mig0=
         
         "]]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwt09VPkFEYwOGPBkXAFnNece2Yc845O67lP/BSN50KiICKip3Y3YqASdgo
FnZjd2CLYrc+DC+e/d733JztfPs6Dh4+aFhIEARX6UfdnMQIGlkW6RpWM5KT
nKKSM5xmFOc4z1kucoFULnOFS1T9v+c1r7jOZK4xhRu85Q2h7g5hqvkzYeZw
FpsjdK2uYwlx9jRdTzrx9qU6jWUk2EfrBqYTY1+ukRpNFBvtDfSrfuMLP/hO
Q+ex/DLP4Ccz+c0K/jKLP8wO6h9xpTTWVTqHTWwmnxpuMpctFFDIO24xjyK2
so333CaP7exgJ7XcYT67KKaED9xlAaWUsZuP3GMhe9jLPj6RwX0esJ8DjGcM
D3nEQcrJIZPHPOEQh5lAFk+ppoIjTCSbZzznKMeYxFhe8JLjnCCXcXSgL+3p
Qzt605ZetKEnrelBIt1pRTda0pUWdKE5nWlGMk3pRJO6b0UC8cQRSwzRDCWK
IUSSQgQDCWcAYfQnNKj/j/4Bhe5xgA==
      "]]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {2, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048063623834887`*^9, 3.704806378804289*^9}, {
   3.7048064272809153`*^9, 3.704806439318068*^9}, {3.7048064721322517`*^9, 
   3.7048065051615467`*^9}, 3.704806550291733*^9, 3.7048072052532883`*^9, {
   3.70480729646852*^9, 3.704807305667757*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"d", "-", "1"}], "d"], "\[Equal]", "0.9"}], ",", "d"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7048065199027033`*^9, 3.7048065424297237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", "10.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.704806528107758*^9, 3.704806542785132*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
     "\[Mu]"}], 
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]], "\[Equal]", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
     "\[Mu]"}], 
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]], "\[Equal]", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7048062373746567`*^9, 3.7048062556701813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "d"}]}], "d"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704806240904806*^9, 3.704806256015959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["\[Mu]", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Mu]"}], "+", 
       SuperscriptBox["\[Mu]", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.704806240904806*^9, 3.7048062560459213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"3", " ", "\[Mu]"}], "+", 
      SuperscriptBox["\[Mu]", "2"]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7048062743733063`*^9, 3.704806308775888*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$2061917#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-3.554172992485182, 4.599439205003817}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704806280523418*^9, 3.7048063097647047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]BDI", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704805958387121*^9, 3.704806008972891*^9}, {
  3.7048060990954447`*^9, 3.704806114390009*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "-", 
      RowBox[{"n", " ", "Qout"}]}], ")"}], " ", "\[Mu]"}], "+", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin", "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "-", 
         RowBox[{"n", " ", "Qout"}]}], ")"}]}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Qin"}], "+", "Qout"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}], 
  RowBox[{"d", " ", "n"}]]], "Output",
 CellChangeTimes->{{3.704805959909728*^9, 3.7048060097177353`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "d"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
   
   RowBox[{"d", " ", "m", " ", "n", " ", "Qout"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Qin", "-", 
      RowBox[{"n", " ", "Qin"}], "+", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{"Qout", "-", 
         RowBox[{"d", " ", "Qout"}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}]}], 
  RowBox[{"d", " ", "n"}]]], "Output",
 CellChangeTimes->{{3.704805959909728*^9, 3.7048060097864*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.704807427224489*^9, 3.7048074299103003`*^9}}],

Cell[CellGroupData[{

Cell["BD", "Subsubsection",
 CellChangeTimes->{{3.704808346553233*^9, 3.704808348123356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bBD", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]BDD", "-", "\[Beta]BDI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"cBD", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]BDD", "-", "\[Gamma]BDI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"combined", " ", "=", " ", 
  RowBox[{
   RowBox[{"b", " ", "bBD"}], " ", "-", " ", 
   RowBox[{"c", " ", "cBD"}]}]}]}], "Input",
 CellChangeTimes->{{3.704807433059003*^9, 3.704807459190674*^9}, {
   3.704808023063891*^9, 3.7048080278434467`*^9}, 3.704808341750086*^9, {
   3.704858077093973*^9, 3.7048580878273983`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{
      SuperscriptBox["d", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}]}]]], "Output",
 CellChangeTimes->{{3.704807450265085*^9, 3.704807459897503*^9}, 
   3.7048080288232517`*^9, 3.704808343316477*^9, 3.704809242735359*^9, 
   3.7048564706252317`*^9, 3.704858089252654*^9, 3.704858280623752*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"m", "-", 
        RowBox[{"d", " ", "m", " ", "n"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", "n"}], ")"}]}],
            "+", "n"}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}]}]]], "Output",
 CellChangeTimes->{{3.704807450265085*^9, 3.704807459897503*^9}, 
   3.7048080288232517`*^9, 3.704808343316477*^9, 3.704809242735359*^9, 
   3.7048564706252317`*^9, 3.704858089252654*^9, 3.704858281104434*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"b", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"c", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "-", 
         RowBox[{"d", " ", "m", " ", "n"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "m", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", "n"}], 
              ")"}]}], "+", "n"}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.704807450265085*^9, 3.704807459897503*^9}, 
   3.7048080288232517`*^9, 3.704808343316477*^9, 3.704809242735359*^9, 
   3.7048564706252317`*^9, 3.704858089252654*^9, 3.7048582811062193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bBDI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]BDI", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
        RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
     "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"bBDI", ",", "m"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704808033161371*^9, 3.704808039663582*^9}, {
   3.704856445306119*^9, 3.704856449867321*^9}, 3.70485663763934*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", "n"}], "-", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"]}], 
   RowBox[{"d", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.704808040361555*^9, 3.7048092435192833`*^9, 
  3.704856471474257*^9, 3.7048566383472147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"db", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"bBD", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"dc", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"cBD", ",", "m"}], "]"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704807462621324*^9, 3.704807502118422*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}]}], ")"}]}], 
   RowBox[{"d", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.704807466243513*^9, 3.7048075025665493`*^9}, 
   3.7048092437306232`*^9, 3.704856614318211*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", "n"}], "-", "\[Mu]"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"]}], 
  RowBox[{"d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.704807466243513*^9, 3.7048075025665493`*^9}, 
   3.7048092437306232`*^9, 3.704856614410431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dcomb", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"combined", ",", "m"}], "]"}], "//", "FullSimplify"}]}]], "Input",\

 CellChangeTimes->{{3.7048583063406477`*^9, 3.7048583295999813`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"c", "+", 
      RowBox[{"c", " ", "d", " ", "n"}], "-", 
      RowBox[{"c", " ", "\[Mu]"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
          "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7048583161336393`*^9, 3.704858330086232*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"dcomb", "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dcomb", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704858331385766*^9, 3.704858337609643*^9}, {
  3.7048583686684647`*^9, 3.704858372535747*^9}, {3.70485852456682*^9, 
  3.7048585250032463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", "n", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
           "\[Mu]"}]}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", "n"}], "-", "\[Mu]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0"}], ",", 
     RowBox[{"n", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], "d"]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704858334663788*^9, 3.704858338006277*^9}, 
   3.704858373087412*^9, 3.7048585256325006`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox[
      RowBox[{"c", "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "d", " ", "n"}]}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c", "+", 
           RowBox[{"4", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"b", "-", "c", "-", 
        RowBox[{"2", " ", "b", " ", "d", " ", "n"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c", "+", 
            RowBox[{"4", " ", "b", " ", 
             SuperscriptBox["d", "2"], " ", 
             SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
       RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704858334663788*^9, 3.704858338006277*^9}, 
   3.704858373087412*^9, 3.704858530354742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"muc", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"b", "-", "c", "-", 
      RowBox[{"2", " ", "b", " ", "d", " ", "n"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"b", "-", "c", "+", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
     RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muc", "-", 
   FractionBox[
    RowBox[{
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "d", " ", "n"}], "-", "1"}], ")"}]}], "+", "c", "-", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "-", "c", "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
    RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muc", "-", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"b", "-", "c", "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c", "+", 
           RowBox[{"4", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}], ")"}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.704858587698283*^9, 3.7048586359429617`*^9}, {
  3.7048953878513317`*^9, 3.704895415125787*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7048586134352903`*^9, 3.70485863661103*^9}, {
  3.704895405860224*^9, 3.704895415666164*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7048586134352903`*^9, 3.70485863661103*^9}, {
  3.704895405860224*^9, 3.704895415667663*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ex", "=", 
  RowBox[{"EXBD", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Idself", "\[Rule]", "1"}], ",", 
     RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
     RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dex", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"ex", ",", "m"}], "]"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.70485866397703*^9, 3.704858719459364*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", "\[Mu]",
        " ", 
       RowBox[{"(", 
        RowBox[{"m", "-", "n", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
         RowBox[{"m", " ", "\[Mu]"}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", "m", " ", "n", " ", "\[Delta]"}], "+", 
         RowBox[{"c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "\[Delta]"}], "+", 
         RowBox[{"c", " ", "m", " ", "n", " ", "p", " ", "\[Delta]"}], "-", 
         RowBox[{"c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "p", " ", "\[Delta]"}], "+", "\[Mu]",
          "-", 
         RowBox[{"m", " ", "\[Mu]"}], "-", 
         RowBox[{"n", " ", "\[Mu]"}], "+", 
         RowBox[{"2", " ", "m", " ", "n", " ", "\[Mu]"}], "-", 
         RowBox[{"m", " ", 
          SuperscriptBox["n", "2"], " ", "\[Mu]"}], "+", 
         RowBox[{"2", " ", "c", " ", "\[Delta]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "c", " ", "m", " ", "\[Delta]", " ", "\[Mu]"}], 
         "-", 
         RowBox[{"3", " ", "c", " ", "n", " ", "\[Delta]", " ", "\[Mu]"}], 
         "+", 
         RowBox[{
         "4", " ", "c", " ", "m", " ", "n", " ", "\[Delta]", " ", "\[Mu]"}], 
         "+", 
         RowBox[{"c", " ", 
          SuperscriptBox["n", "2"], " ", "\[Delta]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "\[Delta]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "c", " ", "p", " ", "\[Delta]", " ", "\[Mu]"}], 
         "+", 
         RowBox[{
         "2", " ", "c", " ", "m", " ", "p", " ", "\[Delta]", " ", "\[Mu]"}], 
         "+", 
         RowBox[{
         "3", " ", "c", " ", "n", " ", "p", " ", "\[Delta]", " ", "\[Mu]"}], 
         "-", 
         RowBox[{
         "4", " ", "c", " ", "m", " ", "n", " ", "p", " ", "\[Delta]", " ", 
          "\[Mu]"}], "-", 
         RowBox[{"c", " ", 
          SuperscriptBox["n", "2"], " ", "p", " ", "\[Delta]", " ", "\[Mu]"}],
          "+", 
         RowBox[{"2", " ", "c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "p", " ", "\[Delta]", " ", "\[Mu]"}],
          "-", 
         SuperscriptBox["\[Mu]", "2"], "+", 
         RowBox[{"m", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"2", " ", "n", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"2", " ", "m", " ", "n", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"m", " ", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"c", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"c", " ", "m", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"2", " ", "c", " ", "n", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"2", " ", "c", " ", "m", " ", "n", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"c", " ", 
          SuperscriptBox["n", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"c", " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"c", " ", "m", " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"2", " ", "c", " ", "n", " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
         "2", " ", "c", " ", "m", " ", "n", " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"c", " ", 
          SuperscriptBox["n", "2"], " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"c", " ", "m", " ", 
          SuperscriptBox["n", "2"], " ", "p", " ", "\[Delta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]"}], "+", 
            
            RowBox[{"b", " ", 
             RowBox[{"(", 
              RowBox[{"\[Delta]", "-", 
               RowBox[{"p", " ", "\[Delta]"}]}], ")"}]}], "+", "\[Mu]"}], 
           ")"}]}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Delta]", "-", 
                  RowBox[{"p", " ", "\[Delta]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
                   "\[Delta]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "c", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
             "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"m", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]"}], 
               "+", 
               RowBox[{"c", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Delta]", "-", 
                  RowBox[{"p", " ", "\[Delta]"}]}], ")"}]}], "-", "\[Mu]"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
            RowBox[{"\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", "\[Mu]", "+", 
               RowBox[{"c", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "n", "+", 
                  RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "b"}], "+", "c"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
             "\[Mu]"}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", " ", "c", " ", "\[Delta]"}], "-", 
               RowBox[{"3", " ", "c", " ", "p", " ", "\[Delta]"}], "-", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}]}], "-", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               RowBox[{"2", " ", "c", " ", "\[Delta]", " ", "\[Mu]"}], "+", 
               RowBox[{
               "2", " ", "c", " ", "p", " ", "\[Delta]", " ", "\[Mu]"}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{"c", " ", "\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p", "+", "\[Mu]", "-", 
                  RowBox[{"p", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
         RowBox[{"d", " ", "\[Mu]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n", " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", "n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.704858665545918*^9, 3.7048586708185387`*^9}, {
  3.704858705085566*^9, 3.7048587199390306`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", "\[Delta]", " ", 
   "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"c", " ", "d", " ", "n"}], "-", 
     RowBox[{"c", " ", "\[Mu]"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.704858665545918*^9, 3.7048586708185387`*^9}, {
  3.704858705085566*^9, 3.7048587202788553`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dex", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704858723264618*^9, 3.704858737388007*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"b", "-", "c", "-", 
        RowBox[{"2", " ", "b", " ", "d", " ", "n"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c", "+", 
            RowBox[{"4", " ", "b", " ", 
             SuperscriptBox["d", "2"], " ", 
             SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
       RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox[
      RowBox[{"c", "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "d", " ", "n"}]}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c", "+", 
           RowBox[{"4", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["n", "2"]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", "b", " ", "d", " ", "n"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704858728888465*^9, 3.704858738811865*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "2"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"d", "\[Rule]", "3000"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7048585272048273`*^9, 3.704858569615253*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1.7070859481601182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0.2928723851732152`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704858539232799*^9, 3.704858570185087*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"NN", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}]}], ")"}], "\[Equal]", "0"}], ",", "NN"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
     "\[Mu]"}]}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.704856659866042*^9, 3.7048566972190742`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"NN", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "-", "\[Mu]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7048566664137897`*^9, 3.704856697591051*^9}}],

Cell[BoxData[
 RowBox[{"-", "23.700000000000003`"}]], "Output",
 CellChangeTimes->{{3.7048566664137897`*^9, 3.704856697594264*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"db", "-", "dc"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704807781454053*^9, 3.704807786708399*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.70480778466471*^9, 3.704807787202148*^9}, 
   3.7048092440005836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"db", "/.", 
   RowBox[{"m", "\[Rule]", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704809245740773*^9, 3.704809250750648*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", "n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
    "\[Mu]"}]}], 
  RowBox[{"d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]}]]], "Output",
 CellChangeTimes->{{3.704809248320758*^9, 3.704809251064912*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}]}], 
     RowBox[{"d", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       "2"]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "30"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704809270516177*^9, 3.704809282445017*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+Q8aCvHwMPF/ZhvWHQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$2130901#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.5797202076016097}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.704809284044445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["factorBD"], "Input",
 CellChangeTimes->{{3.7048093830784597`*^9, 3.7048093842221746`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}], " ", "p"}], "\[Mu]"]], "Output",
 CellChangeTimes->{3.7048093845295763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"factorBD", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"b", " ", "bBD"}], "-", 
       RowBox[{"c", " ", "cBD"}]}], ")"}]}], ",", "m"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704809348457129*^9, 3.7048093945425873`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"c", " ", "d", " ", "n"}], "-", 
     RowBox[{"c", " ", "\[Mu]"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.704809349552894*^9, {3.7048093910833607`*^9, 3.704809395179686*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"c", "+", 
       RowBox[{"c", " ", "d", " ", "n"}], "-", 
       RowBox[{"c", " ", "\[Mu]"}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", "n", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
           "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"d", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "-", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]}], ")"}], "2"]}]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "15"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"p", "\[Rule]", "0.45"}]}], "}"}]}], "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0.2"}]}]], "Input",
 CellChangeTimes->{{3.704809451970233*^9, 3.7048094554739313`*^9}}],

Cell[BoxData[
 FractionBox["748.2208800000002`", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"9.280000000000001`", "\[VeryThinSpace]", "+", 
     RowBox[{"15.200000000000001`", " ", "m"}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.704809455894567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"c", " ", "d", " ", "n"}], "-", 
        RowBox[{"c", " ", "\[Mu]"}], "+", 
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"d", " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
            "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"d", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "-", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}], "2"]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "30"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"b", "\[Rule]", "15"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"p", "\[Rule]", "0.45"}], ",", 
      RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704809404717293*^9, 3.704809426285864*^9}, {
  3.7048094704642*^9, 3.7048095157374*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
0fmNDTY0FJrzmlGn4f8AlTv/5w==
       "]]},
     Annotation[#, "Charting`Private`Tag$2135883#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-8.878090793760418, 11.493173127663002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704809426531645*^9, 3.704809516569647*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DB", "Section",
 CellChangeTimes->{{3.704738081069922*^9, 3.7047380831721573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]DBI", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dself", "\[Rule]", "din"}], ",", 
     RowBox[{"eself", "\[Rule]", "0"}], ",", 
     RowBox[{"eout", "\[Rule]", "0"}], ",", 
     RowBox[{"ein", "\[Rule]", 
      FractionBox["1", 
       RowBox[{"n", "-", "1"}]]}]}], "}"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "\[Mu]", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7047687017168627`*^9, 3.7047687428054647`*^9}, {
  3.704769004712734*^9, 3.704769009501183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "n"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["din", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
        SuperscriptBox["dout", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "dout", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "din"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "dout"}]}], ")"}], " ", 
     "n", " ", "Qout"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.704768704327197*^9, 3.704768743182239*^9}, 
   3.704769009990014*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["din", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
         SuperscriptBox["dout", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "dout", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "din"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "dout"}]}], ")"}], " ",
       "n", " ", "Qout"}]}], ")"}]}], "-", 
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["din", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
         SuperscriptBox["dout", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "dout", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "din"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "dout"}]}], ")"}], " ",
       "n", " ", "Qout"}]}], ")"}], " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.704768704327197*^9, 3.704768743182239*^9}, 
   3.704769010013288*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"factorDB", 
    RowBox[{"(", 
     RowBox[{"\[Beta]DBD", "-", "\[Beta]DBI"}], ")"}]}], "-", "\[Beta]DB"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047135372304688`*^9, 3.704713546376273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Beta]DB"}], "+", 
  RowBox[{"factorDB", " ", 
   RowBox[{"(", 
    RowBox[{"\[Beta]DBD", "-", "\[Beta]DBI"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7047135467419767`*^9, 3.70473650588626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]DBD", "/.", "mychange"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047135544019814`*^9, 3.704713565954473*^9}}],

Cell[BoxData[
 RowBox[{"Qin", "-", 
  RowBox[{"Qin", " ", "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.7047135562756968`*^9, 3.7047135663263693`*^9}, 
   3.704736505892507*^9, 3.704768068427701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dout", "/.", "mychange"}]], "Input",
 CellChangeTimes->{{3.704792682118349*^9, 3.7047926837303047`*^9}}],

Cell[BoxData[
 FractionBox["m", 
  RowBox[{
   RowBox[{"-", "n"}], "+", 
   RowBox[{"d", " ", "n"}]}]]], "Output",
 CellChangeTimes->{3.704792684244512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"din", "/.", "mychange"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dout", "/.", "mychange"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7047933366512327`*^9, 3.7047933604393578`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "m"}], "n"]], "Output",
 CellChangeTimes->{{3.7047933392022552`*^9, 3.704793360860753*^9}}],

Cell[BoxData[
 FractionBox["m", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]], "Output",
 CellChangeTimes->{{3.7047933392022552`*^9, 3.7047933608619432`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mu]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "Qin"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], "2"], "n"], "+", 
        FractionBox[
         SuperscriptBox["m", "2"], 
         RowBox[{"n", 
          RowBox[{"(", 
           RowBox[{"d", "-", "1"}], ")"}]}]]}], ")"}]}], "+", 
     RowBox[{"m", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "2"}], ")"}], 
         FractionBox["m", 
          RowBox[{"d", "-", "1"}]]}]}], ")"}], "Qout"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.70479355900672*^9, 3.704793611195573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "2"], "n"], "+", 
       FractionBox[
        SuperscriptBox["m", "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "m"}], ")"}]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "m"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}]]}], ")"}], " ", "Qout"}]}], ")"}], 
  " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{3.704793611765163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"t2", "-", "tt"}], "/.", "mychange"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704793614219022*^9, 3.7047936595936747`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704793617432416*^9, 3.704793659897297*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tt", "=", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["din", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", "-", "1"}], ")"}], " ", 
          SuperscriptBox["dout", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "-", "1"}], ")"}], " ", "dout", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "din"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", "-", "2"}], ")"}], " ", "dout"}]}], ")"}], " ", "n", 
       " ", "Qout"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mu]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tt", "/.", "mychange"}]}], "Input",
 CellChangeTimes->{{3.704791474666128*^9, 3.704791514059914*^9}, {
  3.704792643784103*^9, 3.704792657361402*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tt", "-", "\[Beta]DBI"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dself", "\[Rule]", "din"}], ",", 
     RowBox[{"eself", "\[Rule]", "0"}], ",", 
     RowBox[{"eout", "\[Rule]", "0"}], ",", 
     RowBox[{"ein", "\[Rule]", 
      FractionBox["1", 
       RowBox[{"n", "-", "1"}]]}]}], "}"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.704791474666128*^9, 3.704791514059914*^9}, {
  3.704792643784103*^9, 3.704792657361402*^9}}],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]], "-", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}], ")"}], 
         "2"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "n"}], "+", 
           RowBox[{"d", " ", "n"}]}], ")"}], "2"]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]], "-", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}], ")"}]}], 
        "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "m"}], 
         RowBox[{
          RowBox[{"-", "n"}], "+", 
          RowBox[{"d", " ", "n"}]}]]}], ")"}], " ", "Qout"}], 
     RowBox[{
      RowBox[{"-", "n"}], "+", 
      RowBox[{"d", " ", "n"}]}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7047915066765842`*^9, 3.7047915145066643`*^9}, 
   3.70479265397159*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7047915066765842`*^9, 3.7047915145066643`*^9}, 
   3.7047926539724503`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ttt", "=", 
  RowBox[{
   RowBox[{"\[Beta]DBI", "/.", "mychange"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", "\[Mu]", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70471357118088*^9, 3.704713575611005*^9}, {
  3.70476807418182*^9, 3.704768082650507*^9}, {3.704768304954569*^9, 
  3.704768305529871*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
       "n", " ", "Qout"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.7047135762489777`*^9, 3.704713581483552*^9}, 
   3.704736506034891*^9, {3.704768070081614*^9, 3.70476808308817*^9}, 
   3.704768305949031*^9, 3.70477040960957*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", "m"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
     "n", " ", "Qout"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
       "n", " ", "Qout"}]}], ")"}], " ", "\[Mu]"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.7047135762489777`*^9, 3.704713581483552*^9}, 
   3.704736506034891*^9, {3.704768070081614*^9, 3.70476808308817*^9}, 
   3.704768305949031*^9, 3.704770409638701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}]}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"2", "d"}], "-", 
     RowBox[{"d", " ", "m"}]}], ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.704770561378191*^9, 3.704770631930541*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7047706323843117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tmp0", "=", 
  RowBox[{"ttt", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"tmp1", "=", 
  RowBox[{"ttt", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{
   RowBox[{"\[Mu]", " ", "tmp1"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mu]"}], ")"}], "tmp0"}]}], 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ttt", "-", "%"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.70477041505863*^9, 3.7047704210529346`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "m"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "-", 
   
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", "n",
     " ", "Qout"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]], "Output",
 CellChangeTimes->{3.7047704213047857`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7047704213076153`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "m"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
      "n", " ", "Qout"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mu]"}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]], "Output",
 CellChangeTimes->{3.70477042130966*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7047704213111477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ttt", "/.", 
   RowBox[{"{", 
    RowBox[{"Qout", "\[Rule]", "0"}], "}"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", "1", " ", "-", 
       RowBox[{"2", "m", " ", 
        RowBox[{"(", 
         RowBox[{"d", "-", "1"}], ")"}]}], " ", "+", " ", 
       RowBox[{"d", " ", 
        SuperscriptBox["m", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], " ", "Qin"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}]}], 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{"d", "-", "1"}], ")"}], " "}]], "-", "%"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.70476830733158*^9, 3.7047683730776243`*^9}, {
  3.704768412364328*^9, 3.704768467212357*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "m"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.704768311715016*^9, 3.704768341377263*^9}, 
   3.7047683739794188`*^9, {3.704768431529625*^9, 3.70476846765256*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704768311715016*^9, 3.704768341377263*^9}, 
   3.7047683739794188`*^9, {3.704768431529625*^9, 3.704768467655435*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Collect", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "m"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
      "n", " ", "Qout"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]], ",", "Qin"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "m"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
      "n", " ", "Qout"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]], ",", "Qout"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.704768271501472*^9, 3.704768284858527*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "m"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"d", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
    RowBox[{"2", " ", "m"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
     "n", " ", "Qout"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{{3.7047682752248087`*^9, 3.704768285325385*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "m"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "n"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
    "Qout"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "d"}]]}]], "Output",
 CellChangeTimes->{{3.7047682752248087`*^9, 3.704768285326868*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]DBI", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dself", "\[Rule]", "din"}], ",", 
     RowBox[{"eself", "\[Rule]", "0"}], ",", 
     RowBox[{"eout", "\[Rule]", "0"}], ",", 
     RowBox[{"ein", "\[Rule]", 
      FractionBox["1", 
       RowBox[{"n", "-", "1"}]]}]}], "}"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.704793859333387*^9, 3.7047938594765463`*^9}}],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["din", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
        SuperscriptBox["dout", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "dout", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "din"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "dout"}]}], ")"}], " ", 
     "n", " ", "Qout"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{3.704793860274108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]DBI", "-", "\[Beta]DBI"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eself", "\[Rule]", "0"}], ",", 
     RowBox[{"eout", "\[Rule]", "0"}], ",", 
     RowBox[{"ein", "\[Rule]", 
      FractionBox["1", 
       RowBox[{"n", "-", "1"}]]}]}], "}"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.704793868643166*^9, 3.704793900100069*^9}, {
  3.704794601058055*^9, 3.704794601185245*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"din", "-", "dself"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "Qin"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.704793874021152*^9, 3.7047939006744432`*^9}, 
   3.704794601446932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Beta]WFI", "-", "\[Beta]DBI"}], "\[IndentingNewLine]", 
 RowBox[{"\[Gamma]WFI", "-", "\[Gamma]DBI"}]}], "Input",
 CellChangeTimes->{{3.704795554838327*^9, 3.7047956008531322`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704795560933539*^9, 3.704795601385852*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704795560933539*^9, 3.704795601390373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\[Gamma]BDD", "\[IndentingNewLine]", "\[Gamma]DBD", "\
\[IndentingNewLine]", "\[Gamma]WFD"}], "Input",
 CellChangeTimes->{{3.7047960365402117`*^9, 3.70479604897738*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "\[Mu]"}]], "Output",
 CellChangeTimes->{{3.704796041772997*^9, 3.704796049379059*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "\[Mu]"}]], "Output",
 CellChangeTimes->{{3.704796041772997*^9, 3.70479604938061*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "\[Mu]"}]], "Output",
 CellChangeTimes->{{3.704796041772997*^9, 3.704796049381962*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.704857542379509*^9, 3.704857544996619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bDBI", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]DBI", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"bDB", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]DBD", "-", "\[Beta]DBI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"cDB", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]DBD", "-", "\[Gamma]DBI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"combined", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", " ", "bDB"}], " ", "-", " ", 
    RowBox[{"c", " ", "cDB"}]}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704808364528508*^9, 3.704808374976536*^9}, {
  3.704856760449975*^9, 3.704856764168376*^9}, {3.704859471569169*^9, 
  3.704859482502173*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"m", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704859483087882*^9, 3.704866715648383*^9, 3.7048671301227913`*^9, 
  3.705054571671132*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "d", "-", 
        RowBox[{"d", " ", "m"}]}], ")"}]}], "+", "\[Mu]", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704859483087882*^9, 3.704866715648383*^9, 3.7048671301227913`*^9, 
  3.7050545717505703`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
    "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704859483087882*^9, 3.704866715648383*^9, 3.7048671301227913`*^9, 
  3.705054571852564*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
     
     RowBox[{"c", " ", "d", " ", "m", " ", "n"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", "\[Mu]"}]}],
     ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704859483087882*^9, 3.704866715648383*^9, 3.7048671301227913`*^9, 
  3.705054572112918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ex", "=", 
  RowBox[{
   RowBox[{"EXDB", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Idself", "\[Rule]", "1"}], ",", 
      RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
      RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7048668235716743`*^9, 3.704866846880576*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
        RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "-", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", "\[Mu]"}], "-", 
        RowBox[{"d", " ", "n", " ", "\[Mu]"}], "+", 
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d", "+", 
           RowBox[{"d", " ", "\[Mu]"}]}], ")"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.7048668264724617`*^9, 3.704866859147284*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dbi", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"bDBI", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"db", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"bDB", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"dc", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"cDB", ",", "m"}], "]"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704809050987014*^9, 3.704809064544387*^9}, {
  3.7048567698480177`*^9, 3.7048567731708527`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
      " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
         "\[Mu]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "+", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "-", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.7048567744458838`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", 
       SuperscriptBox["m", "2"]}], "+", "\[Mu]", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "m"}], ")"}]}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"m", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m", "-", 
               RowBox[{"m", " ", "n"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["d", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], 
              ")"}]}]}], ")"}], " ", "n"}]}], ")"}], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.704856776711054*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", 
       SuperscriptBox["m", "2"]}], "+", "\[Mu]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"m", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "m"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "n"}], ")"}]}], "-", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"m", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n"}], 
              ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.704856777542652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"dbi", "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dbi", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.7048567924042263`*^9, 3.704856812363995*^9}, {
  3.704857168717469*^9, 3.70485716918032*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], " ", 
          SuperscriptBox["m", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
          "\[Mu]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "\[Mu]", 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "m"}], ")"}]}], "+", "\[Mu]", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
       RowBox[{"4", " ", "\[Mu]"}]]}], ",", 
     RowBox[{"m", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], 
       RowBox[{"1", "+", "\[Mu]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "d"]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704856797675395*^9, 3.704856813040648*^9}, 
   3.704857169884136*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
           RowBox[{"d", " ", 
            SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
           RowBox[{"n", " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]]}], 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{"n", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
           RowBox[{"d", " ", 
            SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
           RowBox[{"n", " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]]}], 
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704856797675395*^9, 3.704856813040648*^9}, 
   3.704857170081687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "40"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704857146717655*^9, 3.70485718664694*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "1.139520521443789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0.7706499980278109`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.704857155221304*^9, 3.704857187187117*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dbi", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "40"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704857215155217*^9, 3.7048572277399693`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
D9OnLZhw57vtos1NHMKEyp96rZnwL7H4cME=
       "]]},
     Annotation[#, "Charting`Private`Tag$165705#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-2.851782435741527, 0.06359600441369097}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7048572281780243`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mcc", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
       
       RowBox[{"(", 
        RowBox[{"n", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]]}], 
    RowBox[{"d", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.704857369371187*^9, 3.7048573731688223`*^9}, 
   3.7048578499679413`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dmc", "=", 
  RowBox[{
   RowBox[{"mcc", "-", "mc"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "0"}], ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dmc", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7048578514088078`*^9, 3.704857907698339*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
       
       RowBox[{"(", 
        RowBox[{"n", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"d", " ", "n"}], "+", "\[Mu]", "-", 
           RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}],
   "d"]], "Output",
 CellChangeTimes->{{3.704857852978754*^9, 3.704857908137599*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.704857852978754*^9, 3.704857908159811*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.01566923388259158`"}]], "Output",
 CellChangeTimes->{{3.704857852978754*^9, 3.704857908161759*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined", "Subsubsection",
 CellChangeTimes->{{3.7048656138532953`*^9, 3.7048656163334417`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"ex", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"%", ",", "m"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7048668711976833`*^9, 3.704866921039328*^9}}],

Cell[BoxData[
 RowBox[{"p", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"c", " ", "d", " ", "n"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Delta]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.704866874357828*^9, 3.704866921562533*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
  "\[Delta]"}]], "Output",
 CellChangeTimes->{{3.704866874357828*^9, 3.704866921587418*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"combined", ",", 
   RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"%", ",", "\[Mu]"}], "]"}], "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], "Input",
 CellChangeTimes->{{3.7048666707214193`*^9, 3.7048666979592648`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "+", 
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.704866675342074*^9, 3.7048667200019217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "b"}], "-", 
  RowBox[{"c", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.704866675342074*^9, 3.704866720004777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"combined", ",", "\[Mu]"}], "]"}], "/.", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}], ",", "FullSimplify"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7048667405198917`*^9, 3.7048668128208647`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7048667478618593`*^9, 3.704866801840172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "-", 
     RowBox[{"d", " ", "m"}]}], ")"}]}], "+", 
  RowBox[{"c", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7048667478618593`*^9, 3.704866801843136*^9}}]
}, Open  ]],

Cell["Derivative with respect to m", "Text",
 CellChangeTimes->{{3.704865618401338*^9, 3.704865623227352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dcb", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"combined", ",", "m"}], "]"}], "//", "FullSimplify"}]}]], "Input",\

 CellChangeTimes->{{3.704859496460231*^9, 3.704859507004376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], 
         "-", 
         RowBox[{"c", " ", "d", " ", "m", " ", "n"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"b", "+", 
            RowBox[{"c", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
          "\[Mu]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "m"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "m"}], "-", "n", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "-", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.7048594992718477`*^9, 3.7048595105242577`*^9}, 
   3.7048657047617683`*^9, 3.705054594163787*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dcb0", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"dcb", ",", 
     RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7048671104466*^9, 3.704867137512779*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
        RowBox[{"2", " ", "n", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
   "2"]]], "Output",
 CellChangeTimes->{{3.704867116746682*^9, 3.70486713812742*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dcb0", "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]", "+", 
          RowBox[{"2", " ", "n", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.704868091911463*^9, 3.7048681230356503`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704868096552053*^9, 3.704868134936798*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dcb0", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"muc0DB", "=", 
  RowBox[{"\[Mu]", "/.", 
   RowBox[{
   "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.7048671394175653`*^9, 3.704867150078944*^9}, {
  3.704867387383553*^9, 3.704867399493327*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", "c", "+", 
       RowBox[{"c", " ", "n"}]}], 
      RowBox[{"c", "-", 
       RowBox[{"c", " ", "n"}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "n"}]}], ")"}]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048671461316032`*^9, 3.704867150410927*^9}, 
   3.704867399759797*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "b"}], "+", "c", "+", 
   RowBox[{"c", " ", "n"}]}], 
  RowBox[{"c", "-", 
   RowBox[{"c", " ", "n"}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "n"}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.7048671461316032`*^9, 3.704867150410927*^9}, 
   3.704867399762906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"muc0DB", "-", 
   FractionBox[
    RowBox[{"b", "-", 
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], "-", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "n"}], "-", "1"}], ")"}]}]}]]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.704867405072762*^9, 3.704867476591124*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704867424565797*^9, 3.704867476978661*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"muc0DB", "\[Equal]", "0"}], ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.704867613943461*^9, 3.704867618951527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"c", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7048676191674128`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"dcb", ",", 
    RowBox[{"m", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704867985046982*^9, 3.70486799795816*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b"}], "+", "c"}], ")"}], " ", "d", " ", "\[Mu]"}], 
  RowBox[{"1", "+", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.704867992207143*^9, 3.704867998273559*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dcb1", "=", 
  RowBox[{
   RowBox[{"dcb", "/.", 
    RowBox[{"m", "\[Rule]", "1"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704867635275547*^9, 3.704867662783942*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "d"}], "+", "\[Mu]", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"d", " ", "n"}]}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", "d"}]}], ")"}], 
             " ", "n"}]}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "n", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"d", " ", "n"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704867642031136*^9, 3.704867663460178*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"dcb1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "1000"}], ",", 
      RowBox[{"n", "\[Rule]", "10"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"ContourLabels", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704867732449185*^9, 3.7048678064671507`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxsnQc81t3bwJEGWvbKuN3SLi3tzmk87UEaUinRQvYmq5K0UKlQSRJpCElp
CCk07JESoZSGlKTB63/frvPrHO/z+X9e77frrOuM61xn/M7N22yzYouYiIiI
eD8Rkf/9pf9rQiHaCzv/l4hoziBcmbKz8395jLyQsEBcWUr4hfAfCLd3/O+/
14SDBfHfEOb/D0PqCN8QRH9LeL4gw/eEKwTpNxK2FBTwE+H//6+IiLDcv4i+
NGcQBn1peSFh0BcY9AUGfYFBX2DQFxj0BQZ9gUFfYNAXmG6XX4y+YpjWFziD
MK0vyAsJ0/qKYVpfMUzrK4ZpfcUwra8YpvUVw7S+YpjWVwzT+ophWl9gERGh
Hr2JvjRnEAZ9aXkhYdAXGPQFBn2BQV9g0BcY9AUGfYFBX2DQF5geh72JvoJs
Q/oSfWnOIAz60vJCwqAvMOgLDPoCg77AoC8w6AsM+gKDvsCgLzDoS7OIyE1B
ugOJvjRnEAZ9aXkhYdAXGPQFBn2BQV9g0BcY9AUGfYFBX2DQFxj0pVlE5KUg
nizRl+YMwqAvLS8kDPoCg77AoC8w6AsM+gKDvsCgLzDoCwz6AoO+NIuIiAr+
rwLRl+YMwqAvLS8kDPoCg77AoC8w6AsM+gKDvsCgLzDoCwz6AoO+NIuI6Ajy
USL60pxBGPSl5YWEQV9g0BcY9AUGfYFBX2DQFxj0BQZ9gUFfYNCXZhGRxYJ0
VIm+NGcQBn1peSFh0BcY9AUGfYFBX2DQFxj0BQZ9gUFfYNAXGPSlWUTEVhBO
jehLcwZh0JeWFxIGfYFBX2DQFxj0BQZ9gUFfYNAXGPQFBn2BQV+aRUQWCdLR
JPrSnEEY9KXlhYRBX2DQFxj0BQZ9gUFfYNAXGPQFBn2BQV9g0JdmsM88xj7z
GPvMY+wzj7HPPMY+8xj7zGPsM4+xzzzGPvMY+8xj7DOPsc88xj7zGPvMI/pa
C8JpEX1pziAM+tLyQsKgLzDoCwz6AoO+wKAvMOgLDPoCg77AoC8w6Esz/KdN
9KU5gzDoS8sLCYO+wPT6SBvT6yNtTK+PtDG9PtLG9PpIG9PrI21Mr4+0Mb0+
0ib60uWNQoJstFu6/Mw0wlATrBzSEarzmQnfRBjSF8brIPGBQS5MRxyDHBjk
wnQlMZ2/JFP+AZgu/wAiF45fGSIHBrmw/eWIHBjkxwR/FYkcGOSpgvIqEzkw
yKsE/z6IyIFBLlybaxA5MMiP/u9vjiaRA4N88P/+yGgROTDIBf7lOj6RA9P1
C/2jy9/+Jzzdnz+T+MBsf4J+AOMH+gMdnpPT/SGRaf9Epr0TmfZNZNozkWm/
RKa9Epn2SWTaI5Gp/0SmvhOZ+k0k9QF60fUb0rWeae7S8wvD8UJ7e4ULDwzh
aXkUsz8Rxazfo5j1bRSz/oti1kdRzPohivGvoxj/M4rxz6IY/yWKmd+jmPkv
qpu9hfoApu1FfFd/+ENYGL4HBham1wfT4fsRFiTqI01Y2H5yhAXljVYgbPO/
/0dPmbCg/+SoEr4laF91On9nTTq/dB5hgd4SXPuy44Vu73jSP+j24/oPbceb
uvUfVs72N3a8s/0N5HT9tjLxRYl8gSDjXrS+C6Xo+HoDCQvHkwxhwXhcJ0/4
lWDaUiQsGI8+KoSHCNpPjbCgP0Zr0Omp8uj2Ndci9cP2J6gnuvxixP7B+AGm
19/xzPo0jVm/xTPrm7RuTK8H4hl/OY3heMa/TOvGtL+VzdjfbGIvhe1Ww3AF
sZ8QHuyn0H+pJSysl2JiT60E8V4RhvDAwnrOJ/YWwgNDeGDIH+wxlA8Y8gf7
DHKaawgL86snDOmDPYfyAUP6wJAeMKRH8yti/yE8MIRn5wcYX8LypDDjP4Tx
p0LI+IPwMN6AYXwBw3gChvEDDOMFmB0vYL+o/P5h1v7Q/kEKY+8Su9kHdn5n
7QPtv8V3m5+hvCCH9oD86fr268r/a9d4DycMcmG8b11/Y4TtU8rFZ1mQ/x4+
XV//zM/QXhCebd/KrvkO5FBfkD9dvhDCIKfr14+0B8gFsaJFu/p3QhdLEhbO
XzKEBf1hGuff0OXNYPz9/G4M+sD4YVlYLnEy/liG/gDjGeTAIIf8WBaWZwAZ
jyAHBjltHzkG/wjKC3Jg1n6CnBrvZL85m9hTKD9rb2E+gfi0/5pBGPRj7TO9
v5hP7DOkz9pviA9M759mE3sN+rL2HuY3qE+QA9P7kbXMfmB+t/kA5kNIn50f
6P2+WmY/MIX4Z1B+dv6g96vyu80nEB4YwkP+EB7yB4b0YT6B8rPzE8zfdPtz
8xNdnhoih/kC5MD0flkK8T+hv0B5QF92vqP3d/IJQ3mBobzs/AdyKA+9n5XN
rIfyCUP69Hz4qtv8Cf4LPR64+Zbdf6LXq3nM/JPN2MfCbuUDOejLlpeVA9P2
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
Vtnagc1iuL2wYVfLVu69Q5MQ9XPt2zLJeK7/kmVhFc2917c4SWXmD/HjqHVO
46y8ZyJYd8vE3vfcwpCT2aOJx60ksI7Nye/XZE4hpeit+WvU5fGfZ6412fsj
UFq6jNhQb2X84qv2lB/Dw1FEkNU+p2+aWNFsz0nRHWFo1Jj670mfNHHiGUPt
qJV3iL0KS1zqkV0Szby3GoPmf7H3s+1cb8+5eM8/PPwOOT/27fs1duuoJGK/
Ls31NfF6m4hGvjdWy4vXwpHr6/e8i85DcoFRRf2kfqFXqo8nD5vS6e+ZSa14
sLADfWuftPCXUSkaJXpu59tKMRwU8Xh5+J9MtK5H6cAs1164bLBis/jUXGS9
7P7HxhUS2FL7Ro8ssUp0ap1a/z5ve2PjjSkLCnQKUI9ta8relvfDvVRdbjbj
AnRg/s9xxr/74b2imt7331Qhq/mHb4wt6od79zqrPOZnFZJ1a/3vUac8qWqQ
0SDdTGRSM6m3a9hA7DNnyMGGKUXIwHOZe4dh5/ohwWrx7IXVKE1HVKvH/oF4
i+PWsd8t89ChByh8orUs1uy354NbRAY6ZT2m40iDPD6tWT8zq7EUTZ3dMNrf
XBb/ftE+8fLtGhS9cNac9n5yeOWmwJnL7tegSzN9lueqyuH5f9XvLDEsQKop
LtsXBirg96MurbDPK0Alt7yX2YopYtu4xKm+NypQn0+vt/kbKODn2xPVyo3f
oOlHh/VQ+CiP5617M0E6LQc1uO9I29dXGf8tnZF4f0Ieyvjx3/jtecr4csXO
7bothWjBeTVPv7FKOLbVKunZrkqUmCyTNm2/Et7aUjLs1c8nKBkr7ra5oYJ3
vy7rta6+BC0I0Xny56oqzlyrpeSpU4qiwwc3f+49CF+46XZwWk4SGvNmZmTS
pEG4PCelosKmALmN3u8kP1Ydt96sGHjxZQFqXDF2W1uGOn5rOic5ZEoZkt88
8uxbXzUcN+fl+nlqr9HGFvcKMz11bJ+87OEZw9do939/lkmcVcfBJxUUR62p
Q3Jib/4Yt6lhvEx7Qs6eOpT53x7p/CZ17DPeZv4rwzyUuf57zYShmvjNod4l
4b+ykFlj/Brl4Tx8aYrSynGPC9G6lVEWpSKa+PBR3YelMtVoEZri3qasiVXm
iWR+T6tDHUm90nn9NPGcDo/340xuoGfW5Tarr2riG+qKlxJcnqHRrUZJB/R4
uHzGpAvnb7xAdX2uzPY8x8MTes1Ex/tWIufX0QmtP3i494E4cb2BueiE3YcD
og1a+MKow4VT+XnIsj38v+/6fHzM/Jodb1zneufscdvpaXx8z1xRXi0pE921
xnErD/Pxur9ehbd3FyCnlIsjTD93jp9nB3qZ1hagw6MO33w2k49PfJuWNHfP
E+TcEdOvuJyPaw9P9x1vXIqUA/OejK/Uwm3uzVEOsYUoaaN+5th6Po59cuve
1VuVaIlTzo1d57j7irzwJP7c13z87v7XouTaJ2Q9tXvJ2zEDt5ehNV+/L7Xv
TP9ZTu1gv7el6MwjeecDJnw8f8xgqV7Z3O9f9v615tWwI9x7gCP7rPU6kH+v
23uAsrvF9LJ4KjjRKtVvduq9bu8D7u+1P1VhnQbOy11aVBtzr9vvH4g83Hd6
wiJu/Wbf0fast7I4Pnwsomn4ulRy/hh+sy6OH829Hwj6HjCbErfVfBA+HO5g
9WhUBiqOfOwxdyT3Psi5O7yjNg0SuP3UQ9dfB8+g6rP17qelpbHt8l1LHQzP
okkn5zUPfMvdlwp4LKEdH6yJD27v6/HoznXkV5ZdbDtaE69tUtZc5JKIPj5a
s+jibEVscqIjIrvjSrf7KuNSPzXqvtPAl/ZuvdxrQWi3+3of9256kWKnjBWG
nqkqbT1H6nPvvccv37+ORkn9Mye/DufjyJT99juWJKFhBs3HI8018agy8TNi
PZOQ5Xvs+tGYu0/aMUdEV96wB976/OdFWcvb6M/ib5umVqrhwe3x+UZPbqOK
VWNcB7jxsNTa3O93DTLRuDZrkS/nNfF7/xUOJQ0ZqFZVr+znXO49wbD8733l
7reiZ20D3+b983tf161en3EUzUdi5nmOAdaDsKyDeUNLWj66YdyuwlvaWX87
jbcrT8sh7R/9UkMpqjEHmdZ/Kj1upYFbX9lbyt5+RNrf1zJlS86Cx6hUbpjE
pf+08MCcwZNVHj9GoVsDRhy108I3NHUiDS3/+T0viZ9SvWLy0U2pprJfuDO+
bvT95A/5KPdK/olyRy080XSh6l+nEhI+6Jqe14e8EhR5xqdvjIkWrkrz1TIx
uIusZ76Ybtdpf6o+Dxuedfguapq2/8uKtzz8lpfzfN2fU+T+hEPb7J3zY08j
VwmxsFlD+fh8D8/LNofOEf9FTb+4/JPCFfTgStzE1T20sEq2eyOv+grTvxNQ
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
uqYtHpp4Q7OBTMwfH3I+qLV9QKTW7V2EDzS6q7a5uxH+bv029Pk0J8LC+LZM
+B2MfBPD+oSnG//UCSnxQWvDbodv/8jDDafHZd132oXGB5Vc1v7Kw8b7HKeu
w26or3/T3eoWHs7rNCA/JJ1QvYfU84hfEN8W3bfTqTbqgPA70Klts77KiWt1
yTch+w3rxQr6AOujJYYusof6aZH8866WBVTXc/k3p95x0a7h8lfOPLd1+0su
f/zUf9XlMi7/rWWWc5sKufwP1uiPn/CMR/JPapyo5ZrDI/m/aFGRvpPF/b6e
/fWxYl4tmviZ1Mml03/6ogC7LS0LX2vh6qX9DcY1e6O9Uive5r3Qwvw9H3t9
/OaB/C7MLFtaqoW33c69c6HFBXmjEY+fF2jh+KZY+42tDsizQvGWwVMt/FoQ
3wa5OYhfKnoM4bch535fw1ZlQfobkcPFVwfK7gMv75xfcj3XpmnhNzMm9vD5
EoT+JE8t/HxHi5TP9XCYZEo1Vz6P71eUJ9Rz5fMyfjA08T1XPt/04km6n7ny
7dFpmHe1mSvfvoO/V41s5coX2Nx/y6XfXPkOGWk5DhXhk/IF3Zu4O0acj1vn
an3tYXGcvD+3+3Nw6689Cd1+f1Dy1zDPlKPyOCe7f+JCr/Pdfo/QeM08f6dW
7n2ggoLec91n8fC1QXuO67lwv0947/mqXkk/z6PyuWsrAk0619Nv1+mhuCik
Nu395G/zediut6XYlHnm5P2gE1ajdz1PNUdn7x1ef2XyX8IbZ9mdX/HoLzJ5
czohw+0xWmW6rE3c5Sd5333nqob9Nl/bUAW/xL1jQx6SXtNrUcVrZSy/tjnz
d/CTbu/h99ExnnNNWgIv+vYgWubzSfKe0OF5B5tGPwsl7/+cnTrcRdf8GEoY
k/ny0n1NfLJm0OTrzw6T3yt0XCWVtUvpEtrpVCjakcfDqp9mjGr/441mpMlJ
KlaIdbENavgy+plasBiRuyVmX14t1oPIn+263LB8UQ8cbHDW9LGGG8rtMbjm
YVXvLt6BVmxYaDIzpjeRex3u2Pbkvz5E/mNC5QdDrz54Z5lSxITe3uhTqn7w
e7V++MyRgdtdrzmiS0e3Zph86dvF5mibtee3ovS+XPi/gxY9Xc6F1+X3Vjby
6kfCOyz4+u7N5X5YevDmaNNjvshkCLLeP1wan5p01DnExB19n7zVJ0NBuktu
hwIXHQr5LQZsijTXJ0dP+DKQxDeeF7GgTpeLnzXBSS9+Lhd/FH+Ztr0RFz9U
eojMFKvO9UaV1JLMYC8UVFBe6JUoi8ve9nFb8ckZ1Uq2Fy85J9slt0Z6c/ll
KkHAJmj/rgUVDV6yJL7t6CGjfJ9y8dVaREckVXHxc9NeDq3/wsV39bupoygq
h510BreseOuDRg9Z7tR3iQIOmNFnlbqkBzqwAmWVTlfAOqOz74fOd0QNu8bI
nhulgPcL5JZoXpzGZkt14HUounjA9YkDFEh6apYlRXuNuPTSUf2etG1cemZy
LRO/OnPp9Xwv/k7Hn0sv9q7cyfXHFXDd3VKnEaP9kOcR7QalOiXsOT1N+dsS
L2Q9+uB851IlrPv38fwjM1zRpqffYooeK3WFt0cGVut6jU1TwmMF8u1ojlTm
lsNXgI3QhEvDHzaeVcJ3B9VlG532R5/KJ5koFiiR/JSOa1+Squfy0/lxZ9HV
Zi6/iWtWNeqLKJP85qZ+OvCtnzLJb4Wy/8hQVWWS3yZ39aeTh3G/J/pj5PVv
DRLK2OJqY7PB1gPk98d+76mqPurmg6I8Tm6+Ya2KlwaoPVns5IHuFV8bb7xZ
FUf38iq1aXVCL0Y9Eu9YpdoV3hb98K8qOb8Q5FuQTHVLzIIZwKvQ6Cn9XD/p
qpL0Z04rcRX15tLXenP34voDXPq99seU3jzBpf9hzJGestFc+k9LXSZYJ3Dp
J+zaZJZzRxVvzYnQ2xPii35FXE7/3FMdF+9yl7un4YWkvphXRP1Swy+3p6U5
qLihQbPUmld/UcN1hn82D5N3RKOOlkhK1anhUkF4azSz/hD/fjnIzdHySfOm
OzwFXok27W9fOSRDjeQ3+nK9mXFfLj8141GLYxTVSX59+ziNa9ZSJ/n9vnFH
eeZodZJfo5m4aOAUdZLfC+klDSVz1Ul+ufePPufpq+Phvy4e0R3jg2Y82eb8
Z4EmTjH7bRZxzwOp9JO/9XiOJlYqioktU3dBrUszfh+bqYndZ6/4JONtj4oP
28w0nQLhLdH154N8R00A+WZ0ZGBuZtto4BXIysClV/YwTZKfxzkHbLeCy+/M
puy/0Wu4/B5oKKeVr+fyq6uydO27mcuv95l7E/E2Lr9hG6S/OVhx+S0ZZJ5w
0U4TFww3k7XT9kV/VlVULDjGw58CP9U87NiFlN5IhTkf4eEp6XKn41Lc0ATr
mcbRgTy8t2Wa0aGdTkj/l61K4V5eV3w7ZOV//kWHD4TfgQJkSsNGeYLcFEWf
6bNunQuwAUofPk11vz2P5F+96Zio9Sku/6xi01n4DJd/7IIxvjLnufwP3vmT
XneRy99WN1fk5mUu/5XRJ/D+61z+k5W2+KxL4fIfdHBc+qg0Hnay0u1ZYcP9
ni28Rzh1f5vehds8vHLmneQYUeeu/cDfKPV0cNarK1uQbdVb/ddufwhblPsH
ln37TX5v69Tej2EWWAxXvKoqNZN4jCIMghvXzVDC1fOtpEpvPWbeH81Bx18M
yYl9qIQ/3PSUbhp2lfn9qgSk3lviVLuRKv5VO8Xh67dsNGrRnU0/rqnhaTIp
kTkd2eT9pu8HXlw40r+g2+/X/lh8KLl3kRo+5TD5Z1TKE9QnarpJbed6Q1Es
YeTfeU/I+qguXu+/W9HFSMEDrdi3nYdVnicdab5UzLxHkoNSf1TucD/K/R7t
q/nfZ3if18Ix1p/GB9WUIocNV3skr+V+b1a0v/xx9ZV8/ORh6eElB7jfn21V
rqiTbnxE3sc4+ySlwdklB40Q3/5f8XUZbKJfkTA6N534P9/+rnl9e80DVFVo
eLs+UwX3XiTfq8qmlnyv5bH/6pZA21p0xdg8MbxKGfu8PrRyxtVaFGReLfK7
UuX/yjrveCy/uI9TViR7Zt63UgiVEcr3ICqbhojsFSWjaUSpNGWmgZBVMtNN
Q0akyN4jOxLK6kfL4/X03Od6PXd/vl/nnNv3xeW6zrnucz5vNB+Rpiol9BGf
n5KnTMil6H4E/xW/VJhLRFCErxLboYiP0K0skTqrIYp0dqj6prAQPtlLNi7l
sxLDMCXe91llUgTFxasWTmjk4rzkW12pdh/P5QK/QLqlB4MEKtnxxThuJhdm
meOiLvBIoK9GGx4zhpYS+eS/KUbzK8ogz4xul+vk8vg9YxOGQmUwXJ/+lemH
OFITXTveVN2Jz1OHq5p2vOfoAg6PG2cN2Zbno6EJAZOyXZB1ZFYplSyJJN04
xAPNSvH3Kd7la5iLr5dCcirJ2Po0Cb1z7vnSPVoKYr3XglEsCZEMfBzNAgaI
898xlu2Pbg2AKXRe0ogjowPDTL36CQPQkdcgF/aCjCo/jyjXvSLylTdOJp7J
KRmB/Ms3f7fYktHOLpv1ckMjkMZJiuMeJaMwkq/qwu+jIL9a1vNe/BxQuWm2
JcrJYQ4Wa+WkeutfwrXn0/UZbkLIkj134ykTCt7/4B9n2HV2HQXItrEGfcyi
KIXl17eThmk4b5OdK0EnsIcC20vmE6xWSaJpv9srHnoXgVWQMKt0BBlxmcto
17hRoGoxTf+wMxlt3bt+JU+IN7QsaE6IeZERibQz10rMC1ijP76b8iSj3ngN
q3B1D0AKQeklR8jojtBWhjcHltdP70Uv3nQjo/0xMtkLPo6Q5fzK4bALdbwt
DNDZIHknan8L4L//S/SPPbXdBAxV7//8YEtlgPNNGp3xNkQ9csxlPAPHiXq+
e0iqcPkS9ZQ1hBzUOkHUc0158Kz3KaKe/Xe145POEPVILCW/bvQn6vniuHKQ
Poiop7DakWFLMFFP8KY36x3Ok9HXAlJUZ+ZzqC0eP64+Q0Yjm6Wjhd8Vg3LW
8Y49NWRUYVjl0nG2EIJzcrsMEkWQq4Pnj6hHT2nOfz6FmA6Bg1OuIshzc4+X
o/UzaODfZcDTJIEM40M+dIk8w9fz1ELsnOOzaEB5LgGxlZyIR+d3YGXcbRrf
7T34nmGT673AiaST3LRbl1JA8118lLQ94bvd5NlL+k+HC3Vo0wlGzj3AfrNE
Y8rL5vVx8P3nNl3O84Tf1m3O3ssyWxRV5I8gWYkUKPaI1jQxJHy2FXwV8spb
xVCZ6GwBY/cD7B87UT3C5N/hCK1ZdXluvEtAZZP7FT79gUSerLp15gHFmm+w
c31otHR4OvbZ7jEVayxUI3y2mQ8X18dvfAKSpzIVilhXIDrFJGfloBwwr4/i
HVZZgbJ7yOte7iuGq0KcourFPOjD3nuqPkvPQbUgLPDtCl60JUxbo60sAz6C
ieVWEj8yaZgzs58uhog9o7KVbwVR9AbKVWuhJ2Dg1pgczLQWHQvLu1uSVQx3
/Ptd1hlLor10C52kA8Vw4+m8GP/y+jdoaSLUc6kf349J4+3De7P6YehR3miB
Axf6nnD4wOLODryf3ulTonqYQDuUqF+vvBjOg8YkNN2tK9oh+YDtRmclXpSn
eVglYrSSxjf1BhTOkrr2U/gRV2T4TbNKwk8b3ShktttzEFLLH6mESfMjrXkm
/trUQai7wyM21s+P8peKVxssDoLQWpYeEw5B5LtXvIT/aAu+/3ecEhe38+vB
bCYrz7Enqhsyr2bbe6QLopNCfHV/NvQA0rPR5PMRQp4Xz9xKYeuFL1z5Pdpv
hJGP9rpTbe1DcIBjb8f8vbVoj8+zb+yqHfj8LDWv2euGnrhwlhjqjywvutRB
+Gn/Xl/NMOLmpzJ1RgJdJ6+qGXbrx+2jatdYXCX6oWdwZketigRaM+vtLGje
D11sap3fl5/HKyK/2dy90Q8vnGKZOMWW/z4okVnmaj+UF0Wq9PBLItfiTCnF
P4SvNuadel9f3TBctSJzp+tJoHfvdj2//mUYVFbz3JyKlUDpvCCwTnAEHEIn
SB4kSVS/o6VfgXsElDTlrfm5JJGzVs2w6ALhs50/VNbr6TSCOZxPSW/fzhHY
oJc+QMqWRKFXvlLyrozAoVcn//ONJ/y1ksy1AXZXyEhEuaetAA0Ao/Qxo+wq
EhLIKSr7+r4IoERBapO3KOpU/j7VdKDoH5+3oI5labOaJGo/x80wOVgAnSsp
Fx83k5BiM2XslclTMLBWfv9kmIROC5RtfCJUTJP3XwziRxq+3soho5hIsYIb
4nmQJMpO336fDXnqHg5jCSD8st/dj7BLmebg/f3U+VX5aCGqt2ZDfOu6e1y+
p0Pw/Vp4G0D4ZT+VdGv97mZFLHFP9JF7Js5fr5ILHc1uyQSKx/rwchFxtNth
as7cn/DLsnp4MbCezoP9A6LSer5EntBOtRPcCcvzpz9VG9x+kAi/7DeFIysE
+SjA4XTtla0FGXUkuem4bCF8sdT7F9dJ50pp1mnYete1u145HxbXe9dsiJ/B
888BPb1xtt0z8KyeLWOqswzKIjK/ZSdRfUal8KUlKWdseg6kbvVYPbasBBaR
F3YTuwh/a0pAq67COy5EcaKzZqQnfK6M9UGRbsf6afJ7+sHr0tNnjLJciElz
x4jYfBvOJ02JdhM+1FqO80lnC0xv59gRfteICw8HhAybafJKm6HK+/aLZxRB
9FktMBpCu3H7zMb39qmhdXDuWUqlTjjhe7Vk0hfVEid8r0xVgc9rPEXQ6YMB
M2Wjdfj7JzSUdqvPrReGbwTOe5kSvtcyo4BHUQ1rUZhZuMb+fML/GpJo3gcd
lXg+YnXZPrremvC/0n0+rc66SPUfSiDf7cwMT1d3wrGm6Nrdssv/7x0CIy9d
CN+rxWC+ZbMA4Xt1F7po9qhiGLODaGeVo86/PtfxSUnfug2Ez3VpylNExUAS
/RK6vJjyoRvnv5CMnK/lx47AqRcMR2eqSdh3oPLBfqxBm4xYZx8Zp6QTPtfV
aWlvKQGvIcfEJ7O4aw7S6i4cGzUtA7ZjP4Q5XRkRw+47R8s3VODzO/Ii7sgt
8zWNL60U7Kd7re98YUAqb0zZIudKIXA3Z6HUMAfenzEf/tRYzYIT3TjlHivT
U0b4aYzUycabX+N8J+rnGS+M22se5kBCE/Hu0hFh//hWtxy8tyCbzIvPX5+X
55bpmBdBfuKft/LQEb7Uu1MNJ8s1KP/4Ur0TY7aafmDB74PnW14wpUdxocO6
lRTj9lQo0LVZRY8IP+no5ZOtJ4aEUOiP96lHyanYL2HMYXu7alsGXp9QP6+s
s4Fx5yFh/PN8uY8MFQVKILl9jdM14oRvVPpBfIiOSDBmnY5m0snNAZjVj3tq
O8ucxqzIwuiwj+xHM/44TX83mnY7GjbFfObFrvGkiDyQvHrFrCxgBdrwrLL6
Hmc+rH2QWCfQuBZVM2ZPUEwKsN9UOKvnTdKhPEgZct5Ukr4WbfeoWGjZnAfB
mUaJpIS1qFv0BN/Pe9lwVe1eubT8DBzjLK2TKakDfu48d6WCnyB7Yzz90n7C
Vyqr5fatMrIKPp9boxETy4w67nJHpi5V4/0xQjMU1o3KTcD9JV2LXYMDPVLQ
qFHgbMbXz939Dg+/K7VAoct3sQkOLrRDtm5P/WvCN+oRKvJQv7QPTAJDTTU9
OdCJ5mjfHvF+PP7l7omOGfa25fXaT2fpOMIfqvtfr3TXfh60KeiWzUodwiea
I5x33fIS4RP9e/m1gtLQlZvJxtzow1fh4gz2QXjfxlpetciLfWH9i4Jb9J7x
Ief57ugzcoRf1Lw11nfX5VzwSj1h3zpE+EN3ZRrtHlQTQF7fOhNfjBN+0bbm
segxp2y8/4J6v2c9IKVX+57wiw4/kHQdLhRA0zY7X3dbvMXnOVYr/CcmL90E
OZrSW8FaAFlL2qYdLSD8otf2bZJaW98F/YdsNlonE/7Q+FS7deF+y/NJ1lUy
/zH/6xMtZUx9OrC0fD8X+TPjE9kGF5Tufq6IFUH6f1ztdD8T/lA/mfJGDrEm
KJgwyNIQFEebBHknxy4QvlC1a7IR4Q/7IC/EQtNrK+ED9a3myPlvXBy1m2oe
n+wh/KC39VQViq8MQ58D01zSKnGUOvl2DV8a4f+kPh8YbOcd181KLP8+SXK6
at0wa9onukqShDR+Omgt+RO+T4r9dfPopocQ+WtsaXWwGNp8aClANzwY+xH+
8nHMoXRr9NY0nsF5e3/ZHfOCbeDlmOfncL6EacxeqzXSJ2jYGfMOM97ZE+Mh
xPrnTMJEbt9ZzH/bvWnYHvO7dFeZLxKh2A/qo32eFMNzDj+PW/MGOnOMT2H+
2+5Fw7aYN1ep8easC8HP68K28ktBXv6YmSW5RxKi/GjaPWj4EOanZXtQSn4Q
fp7b0GvQfb55GjOjllypvIcPTbsbDR/8x2d69P7KscnXguibmciZhMfB+P3Z
p97Od/nV/pgnBPyTNqifxDz9v/2P07S70PABzJMKL+7oVITg57/xvWxTE98g
zGVtn44K2J3BrMQtfq3P0I+m/zGadica3vePj3X6an7xlNLy+jW4TDRlLAb7
5fTfhpiHHAzG84fqBOmfXowBmH9lG5j1Wp7CrPjaK10/24emvydNuwMNm2Oe
dy/avmAYgt8HehZrH8nXC8L8NYH3kN/sGcw+oZ8MVB6cwPx3vDdNf3eadnsa
NsOs73+sOuO5C7ziq7/imfMDqLxosXoTvdxPEC07/Pi+URMk8/9OznBcgoeb
51iL2VthxZJwjl4JPSoKHMhoj22Hp/eiL8WyMKD0Wr6ii186QWF/wp/hG0yo
05rV70JIDSQNSo/3zK1CPJKyPUYcDfC1YuA6V8hqxKufmn6avQdsz2r90DVc
hRJZOKIDf/eCAb9XcZP2avTq2qqOeecB2CaW1bVeigddP1fP0r73A/yymrUj
yfOih9bBGcmnG2CkRjVE6iUfunOFlf2XRScMPawL4R3iQxVjj2aubG2F80Uq
rb3vhNG+/R8eH40ph6idEuslPSVQxWQM24jKACwKWPRfzyL88AH+Ux96LGdx
ng7VV0rNd6GuH6j5Lng98X/5LlSm5rtQmZrv8v/He9H0d6Vpt6VhE8z+wNNw
Kc0bOA9uto3cRUbJg7WPvtp5wWkrNsW3e8jISM+3sNHPA/qtR+h+GZDRYqZQ
aUGYK+y2fd2oaExGqeyl72PuO0Ku/Z1kZ1PqeFsQdPL1vWtO7W8BwS5GO+v3
UdtNYMxNmo/BgsoAph70n7ZZEvXUHt4eIKVH1ONk7fD4qw5Rzy/LsK7nWkQ9
0RbZqy4BUY/c/pZtZjuIet6Y/3AV0SDqsTaVuD26jahnzkivKl+FqOe6ged8
oBIZbZmqdXFfzIdt912GrXK5kfXG3xfiJJ/AjgB9jwlGbuT2Ifwwc3M6znOh
5hnR+lYZVb0lph5MYx+r6QMjDt44enTTP050kiEX+y5PTToobVEcgkKPILug
dkHkbx7aIrwpGTLOZZgwm02DRGMiixSkgNqln0YT/mT8/l9xUXOkq24BtHTb
m8sUPYG+2ybvaMo8ZqljSr7dU/MQi35HWrE6QpDMSl/niiXMIwWcHrGKdOjW
p8tjglKPIHrI8NxEEz26IXLnY7EmBfRY29eV2vIgp9p9tTWiRdCmeuPzrJMg
Etj+MnG38WOorngzHNQijF6tEbvS3deM91+mm1Rt9mztx9/ntAjOsvbeLcR+
RNq8ftr5OW1+NO3zhXb9QZsPTpu3SutToI6n5hP9DxJgyBg=
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNU79LW2EU/ZKX53v58RfUQQrpkGTRLG2Cf4VQ6JpCstnSFAcXQRAc0uZH
iQ6NJFAodm2HatZCJwcdOri4dxOkuOo5nhPqcPnu971z77n33Puevn678SYb
QngFi2CjXAi1pRD6OMs4n8GymRAmcQj/YO8B2oa9g03wvp7T+yH8TBLCGOff
Ugjn+H4B28N9AEzLfi+nb/QvC8LsIO4LeFbhv0jxhnzTjHgPYDPYMmyKb11g
jnFWge/AKrY2rAnMS+TfihTDWndjcfN+6Dz0ieH9Y6w+G/D7sfrlW9v5y1n5
s6zyMxf72bcm1Il5ThNhrtH7VUm8f0rqiXj2+7ug3s9xbqbKdQZMPVIsuVgD
+cnFOVQ9iyHsk3lH9tci8TH2JFFP31wPjXHLxvcdO3Au+l3E/EDMXV619Fwn
eRnDesgzMp58jGVPE+/Cgw4Z7QNn9StVHfNU+lWtIWt8EqmvhufK2jqeHWd4
VNQ+fS0qjm+L+j/HysP5lD2jik9i+E7tuDPEUlPix55r03vJ+/cl9TW0hsSP
7PMbMfNEWq7n/u9JwzWz75Z7X0nV189EPBeugftLf+yzb7/rXWT/5B8s9PRb
w3OjvszP2XBGt3n9Z6yH/MzDXWeutCAM50ndatb8INVcPuB8nmq2N4+0a5qr
ap2Zf+J/uW5d1rybbee8B0S5gfc=
         "]], PolygonBox[CompressedData["
1:eJwlkL0uRGEYhOc46+znOFewjbgDNH6idAWbuACiRdgoFDbZ0FHaTlaCDaUo
lqOUqCRWodC4CYVO4pm8xZvMvD/zzXyzm7vtnQlJLapBfVZSb1Lq5NJNIdVJ
OgCvM3yGn8H34IfUO/iW2gf3M+k4xY533RvAh9PSKvyOuoc/NqVLHlxgfs3u
Er058An3i+Au8w/42PqltEXvlNsN+DZ4xLyVh8YTuKbOuV2hRui9VbHrDN9V
eLI3e+6n8GAvzvSSIqOz2uMFXmv4IAvNDO01NP4a4ecVP+MysD3Zm9/02/Y0
A/8pIoszfJWRwfvWOEJvmZ35PDJfFdHz7AGe2P2dCuye3/Yf+a9849t/8ek9
Tg==
         "]]}]}, 
     {RGBColor[0.31180123848816066`, 0.4132847802993536, 0.6357781856810814], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVDtMVFEQvbtvd9/b97axobAhUkFFyYqauLE2ISaWGgIJpXZG46dkUVaw
BRdChAbDrokQlMQSNahYUVj4S/w0S6LRxE8gxnNyjrG4mblz586cOTP3Hho5
f+pcPoTQwIqwHqUhbENZg/xaDKG/FMJj2HNxCLVcCBvYz+FCFXoX1mKJhyE8
wPmRJIRp6IOQ13F3oqg7ZzLEQsyzkAOQN2Cfzeucfgdzsk1i9UJ/XQ6hDb+P
kOPY14vKVXdM+jMu9R2kX87rPu+ORMJNzIcTYSNGxqYP888V5MMa9qF/ga2K
GC8jnXdD/5EpxhbqauTFCX3auNfCmod+IVG+n/BdyMtGbCczxTwNecf8EEuM
WIvQdyvCXjd+ctFy3u5EsdZx7zL8n8N+oiKs/dD7ctrTvpQqz5D53E1l571V
yM8FYSeXn6BPEmNB9Q/l1CvKP8DwMBb+dcgm5BRWDaucKtYByJWiMBDLHvDd
gixVVNOCY/7K1LPZTHvm6vP5vH04U+T/Xx9GHJO17BXE81XgGGRPPI/7tt+P
VUcH9hlzOG4cxLPv+Vxxf5fMSTNVLMa8FqvP5Iyc09aTF05i4j3qnCvioR/r
Zkz2cifSPDEGMUzk1Mfj6N1N+K7FwjXj/nasE2fNPvQlD+SEc/Y2Vdw3kPfA
3THYf2c6px9xsQ8NY2Wv5jxv7PO2z9hn1jtpP9rY303zRv6q7i3tzNMxNkru
WU/Vb4nvjvPO2pnvbl74a56Rac8P9bFI+0uJ9IuJZrNlrvkHfIg0X8WKaosq
itd0zIHEMwa5U9bdF+X/+ZhrNFKvu/xvsE+M/wrcDePsG/i6ncmHc0quWsbP
PMQw5TfGt7YR67zt/jL/sN/ait97MB+j5oQxxhyHve14Dur+n+jz3j1lb5fN
Xc2cLfrtcb54VjWv9On1H0GfUqzzmn2uxPqnNlP5Ltu/4XPys+c/jZw8iXX+
Dv7PYs1aoaLaeuxf8r90NBF28kT8bc9Rt2ea+J7G4nXcNcYVcfK9pHr6PA9b
zsWc5HLQ74vvhpwQU9tzznnne2auVfgnfqf8A/4CpFLl8g==
         "]], 
        PolygonBox[CompressedData["
1:eJwtk0tI1FEUxs844/yfm7ZtpFbtWhZmyIQtgwhaFjFZiyCDFpEQbZIoSnSj
i5omqbQWOShGZbXK0RZj2mKEFllBD1r0kAItEer3df6LD86959zzncd3t5RP
HehpMbMSKICZ0Ow5mAZPwInA7DOOqbxZFJtVQAP7E3dlfG9Ts2XQBEuggze3
c2YDYBd2nfgF4tsgmSF+tGh2B1QSsxuJc/zn4u4pmCDH/lazH7zZh39T7Nxb
ef89ck5x17h7w/kwMSvYFfx7yPMxcp/46tg3uauCu+BeBtkXQB/4At9l+ErU
myP3JDVszvmdfBucBzkfJWfAeQ2+MvYss1rFniTHRDYzzU41qJZ+UMJ+Rf2L
oBv7GGgPfTbHydGLfTDxXjfo6T5xpwPvtR2EnH8VnVucZ4ifwn+lxXfwFf8y
aGLvAJ34XwTOvQ2OOex3sduKeR97jGK1k3P418k/UvCdBZy/EfMh7zM9RG0P
uauSbwS08fZ84LUdwf+a2DwzqRY8h3IVUp+N7lpTn7FmPQSGQ9eAdqMe6thz
5JjNZqRZ9RBzEjR4O5+6RqSVUTAG/oDd5L5Ivb8Tn5lm95J6nmH38/YqWACL
oWtAfOP4m9h7ydmVOqe4lzLtSpPSpnH3l7hVsBZ5DY1M49L6I2o2uGvSaOox
ilVO5Z6PnEsalpaHs95Vk2obh+NSznuoUf+D2GvXH9NfG8t6laakrZ9Fn/V2
7ZjztcR7lyavJ/5n9HekcWn9bOja0g61S2muO5upZrsz9Fzq4RbvpgPfrTQv
7asn9aadP8b3D9G0o3c=
         "]], 
        PolygonBox[{{2542, 546, 1906, 2559, 2560}}]}]}, 
     {RGBColor[0.473059916313083, 0.46995715908766494`, 0.5409807520715423], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVktrnGUU/ua7z7yjixIVbaB2UYvgRk0yuQiJiXHXDLi0NAF/gF1pVURs
QkmI7aybXkkVWhQrKjYGmopkqBds002XYi0uJJjpQmvTENTn8XnExcs57/nO
e+6Xb/crB196NY6iaA0nwVnB5UucS8Avx7oTbxdR9D3wVcC/KrgDnwKcSqNo
VyLe45kg+U8BXwL+t2WSzvutWhTdBP9PgFcgaxW0mVw6l/322UT3hyC/PxG9
AfxarLfjgCOx3g7jHML5Gmc/eJrQ+yF4FnCfgG07gB8Hvg/088Y/yvR9L/i7
AedwtqD3cJCsi7BrIJa/26CPlrjj7WSQXSv25d1cemdAn80Vk6NBMeLbNnzs
g45566LePJdu6qCunZCd1aPoLGxNAb+Dnk3gvbFsv5fK5g3jpA+B71fgr0HG
WCp8mvLB80sqf84BLuJUQI/Bfwr4/Vz0D3COgP6Mc/kgbCjqom+D548geQuA
J1O9nagofhOZ7GHcTqTyizzEGUP6PZYpbrR5n/lZD6cz5XQ9U61Qx0xF31gn
nUT5Y3zuZJJLvaOp+FkbF+qy4TzgZKr6Y23Rb8aOvt9KFHPacDtR3RyoKBdd
FdF/CHp/Lahu+I2+/In7UdDvAW7iHGPcgmI7Z78XDMm/B7BTUZwZS/YEfaGv
9Iv+fYo4jwJ/p66c9sXK49NBMeoP8rFp+z7LVbuXg2qdtdh0/dCvRizYZ1+2
C9nwZKG4dTLlo8C9BfqW+2vJPTWIbwOst4p697q/Lbou6MOy5wD77vVS9N8h
581S/TkIOByUsxcB3yrk1wrwt90/w6VixrzQ31ZN+CzgJ1X16YWq7Kb9T5TS
SfnUy57rN077rnuesM++SBT7bwvRb+TKJXN6N8h+vmXeu2vi3wnYqqqOZ6vK
I23o9vzoSjRXHitVd1chc7rQjHm8VP/tsC9fBeEPg34jVv8y1qxFxpT23sXb
+7wD9iTyi/F/oJQfi7lkk4d5X4slizVzxPcp54+yk7rsG3buh6Dzffd4L2BP
+n8OCK8E0eZcb+y7SfcLc8348S1rgfG/GUnusO2hvxuemWu2a8pzeNw9tWzI
3uxYFmXusu+PlKr9Xtt2yHN6wryD5j8Z5M+JINqQ6VcL6fsG8CmcBPYkpfph
wD2+u9Qu4D5hbexx3I5ZDuWd8fxpuWfpP3nY6/SN8d7MNcPO5uqfbu+FtucV
e/R57wLuhKFSeX2uVC/RH8bwUlXzYqUqHTOeCewH2vxjTTFrOm6Mx4hzyvy3
/KbLPPSR/OOeAy8XqmHWMnuGcX+Uu6ZUL7AnLgbZ9HGundPxTuS+oB+UzTnN
WUn5Tc/Zf/OYaY4wR/S77Vk979naMPzZ+FYq+Q333G333W818XzuPdV2DKe9
Zw+7X9ctf8l7gj3Cuj7nGlg0zhwxNqc9V6mTvjW8i2j3Xtu87n8R7pA7noeM
c8d+bdQ0V94o1fsjrssDQXR+nw+a6dyTm+4F9hF7qtf7jjX+guNJ/8a8i2kX
53XD/xc95ifvmPnn/S9Cm/v+kwv4nvVSP2fSqu2j32ccH/qx3zvrH52pSX4=

         "]], PolygonBox[CompressedData["
1:eJwtldlLVVEUxve9Xs89955bkDQXVFB/QDRn0GD5lkFQD0UGRj0UFATNEZGJ
D5VvlQ2Wjdqcpj2kFpEZhqaC9tSMQVDZQ5NaVL+vtR8+WGfttfYa9rfWmVS0
ZfnmuHNuK0iAhsi5chQF2c5VZ5z7FTh3gYNccIqz12nnerKca8emJencCXQH
Ys59kA32A9ifli2I8Z3GPgWGgRzwCiyJ2x1vkEeHzg1HfohuP7770fXj24qu
DLmGO26DpcQpAFUZy62K81XEf5ly7gXoBe/BanS9+F/j/C7fFdxxGhShXwda
QQexDmPzw9+pu1eAlaCDHNZyVgja+C4hv4PgGDgOXhP/FegBz8FQdH+o/y+9
G4J8iVgXfUzFDog3gvMz5PwJ+yfoWkAn6AJ3OH+rXoCPfI/ijgHymw8OcPYU
dMYtZ+W+B8yKm8+ntNWk2tQD9aIS/7OgGlwB+cRckrGYit0EGkEdqAfN2DwC
90ADuEz9l0AFtZ8Bleo9uX8m3lS+y7A5AjpAJ8jivIz6ztKvbORacsnD/ik5
NiP/5q6LnJ0Hge+ZeqcYirUtadzJA3e4/yu6kpj5JLGrQ7c4YT35jm0tMWt8
zsr9BjVc9zWptiv4LCN+H/nOx3csuin41vM9HjmRsVzVU/W23vdiI/Im9Zr4
zzibgP1k9ZLvQd52Bj7lkb2R3ko1qtZzgb29fGZiPzG0t3sEJiFX4XM5spyV
e3FgZ+K8uL8AzEaeAxaGFlOxxUFx8TFv2gy6QQ94krTZe4dNHXJxZLOzQ3yJ
7M2rPWfF3XZ82lI2Q5qlfuSfKeOEuPGSeubEbSY1myv9LKin6m1+ZL0cJJ+j
fO/DZxG1z8R+d9JmXLOuHvWT7/fIZkc74RtyXsZ8xVlxVzOgWRBnknwPYHOE
87ngFvLPyGZTHNhO/o3c2RAYp8Vt2cg2wfnNyN5Eb6OcarhvdmRc1Q7RLrkf
Wa456B4gN2rmE7bjtOu6/Cyu5+4NoDCyt5jF/Wsim4n/sxFYLvOQp2fZTGu2
d4ZmOw3dLuRxob1FAbqxob1Zt38DvcUWdJtBG31oB1maIXx76N+vpO2YY37G
NGstgd2lnRrH/mRku1g964/sjja/k7SbNLMVnnPinmpa72Mqtjgj7ohz4p44
L+5rR2tXl6Zt92qHapeWpmzXagdoF5zjezz1XUV3S9xM26yLQ3uxb0rZ7pWN
bKtTZquZ1Gx+4bsPOPxiHpLFSXFzXNpmtRn/Umo/HJmsHXsIeQznfTGbac32
3NB6rzfJDW2HaJdoZ2h3aOdo9+gfpn9Zjv8XKQflop6r97rzN/LI0LgijtQG
9k/p9TOoWfwH0K0PXw==
         "]], 
        PolygonBox[{{2709, 1274, 3139, 2724, 2725}}]}]}, 
     {RGBColor[0.6343185941380055, 0.5266295378759764, 0.4461833184620032], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJw1ll1sVFUQx093L3vv7l19gAgibaUW6kcNRIMfaAKtIfQFCxgjJBIfwIBG
QhsiL5goBbGlaOsL4gcCJUJbEihdFR5oa2LYtsaWQBNqfCgQBSQGhaolrdbo
7585PPyzM+fMzJ0zn1uytuaFTQnn3IcgABMp5z4ocK6Fw0TWuYPw/3A+AP9E
5Fxvyu5mJJ27D/5LkANnQB6Uh869z90kMn9D/5Z27gT8t/B16M5HphZ6M9+Y
B303yHA/xMcfR/46mMpdwRTnlvP9Fu4PgnZwFCQy3IFx7E6AtdB59H9Cvxrd
y+hcAsPgB7AOmXv43hfI1EA3Y6MJnAPnwbv41JE0H+XrRTACroJroEUxAI/F
+AcO6Qx06F3gbMpiU4x+KfaS4F/4W7zhUfwZQ6cR354Cg9Dvcb8T7AUfg+ew
fZu7Begsgn4AnT74MfhR6E287w/4PuxvhW4GTaAeNICV6ATEahHyP8JvQycx
xc5WcPdOaLF0oBq+FX+PgP34ciC2M91JR7o7uGvlqA17PfAD8Kt5ywj348iW
Kg7c/Yo/c6B7+GY3+BqcBFXILAV90P3gc/S/Q34m8sW8dw1no4Hl7DXo/ZIB
6/jWq+AWMb2Zthwr16+nLXfL+P6n2D2HvVfwpxSb/fIXH4oD83kbd8c5q0S2
iLM67mJsZMBUMM3HTLF7Gbk1qlVkHkS2F/169CdCq92Qswb4A2BXwnpiHPoU
/pwE3aAnbT7Jtxv4OBdbM7H9FXQJKOO9w8hcAIOqFdAO2vSL3tGs1ZRq62mw
MLYab/c1olrRG/QWvXE7dB4fliSsZiqzFjPFbsTXbm1svqvH1GtvcXY4aT2g
XlAOlUvZOKPaBGWBxWA39KyMxUJvKMzYG/SWXeBhvjMrst5XjBXr2fCF8NPA
dvg61aCvUdWqal61r5wNQF+JrLYvwc9GvoKzxWApqIqtJ/b6HlWvqgZVi/pG
SWQ9pl77nrNBYpFDpzKwmaHZ8Tv3jUmbQeU+x8q1cqbcacZo1ujNjb4H1Aut
oC22GlGtqAZVi58oN4H18F+xzQTNhjzoVQ1wtpK7FaDb25CtnJ+Nnynf+HKv
5h/0dM7KCkznG+S6eUNXymacZl2Pry3NGM2aE8hUBPbGTugZkcX6Ijbu5y1X
4XckbWZodrwIfg7sm3vSVlOqLeVEuWnNmi/PSwa6KLZeVk+qN8tjq2XNHM2e
jdh7I7QeUi8tRKeuwHx6Jms+yJeHsDkWWo+r1/vh96VsBmgWnAdDGZuZHXd6
QD2BjUE/szW738zYrNMb9JYcZ52gGr+WgyPcH/YzQ7NjQ2yzTzNqPXQL35yX
tJ1yl99J2k2nQRf4CJ093oZsvY3ticB6vDO0HCqXOtsK/x8Yph92Y+8m+o+E
RqvGVGvqCfWGZv4k9NzIals75YavkbyfAZoFmlmaXfLxSWT/jK2WFdNRfG9G
pgnUg4a0zQjNCvWIeuVaZLtTOf8lsh2nXaeZrtley1lNZDFVbLeElhvV8LNZ
i6Fi+RJYBTYgu97rSHfI50pnuqvyvamYKXaLsTEW2EzXbNfO0u7SWUXWbMr2
MWSPexzzO0K74qyfhcqpctsVWy2qJ3Ip2+na7doh2iXa6drtmmFbOC+KrLa0
gwo1I2P7bzGJ/s7YYqbYaWdrd2cju9N/mDiyHaVdpZpWbXfdqY2U9eL/slpD
Yw==
         "]], PolygonBox[{{2433, 536, 1882, 2446, 2447}}]}]}, 
     {RGBColor[0.7955772719629276, 0.5833019166642877, 0.3513858848524643], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
Wc4GYmUXzv8FL1yXHg==
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{3220, 1355, 3225, 2838, 2839}}]}]}, 
     {RGBColor[0.9090792252057268, 0.642698063014317, 0.31814559813775306`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV21oVmUYPuf9OOfsPQc/Sbb5o5wWanM2DerH0h9KbWaFE8pmvNOZ1qYp
2UJRUisSckKRBpERERgllP2xUsiMfmj2o6R+7EvUSc1J4lxpSFO6Lq8r/HF2
P+9z7nM/98d1X/ezKW0bmtfngiCoDYMgD/kB/mzDxhg8b+FpxXM1kFyBZy3W
5SgIJmG9FeuF0F/p9aZCECzG70fxfFoMgr3Yrwn13T5/24T9fXm968G6G89T
0NkDm7XYvz8Jgm/SIKjD+8OQeexfsH493s3Eeg7kq/g9G89IIH9n4RnG+k/4
MAidPd6r8/63cRB8gvWRWDrj8no/D+tJecX6N/wIsR6C7Me57ZDVWRDsz+nb
XbBzPKezeW4CP7ohi5AvwNccbK1LZeNKKDs7QtlmDn8OZasL69G87L+P9SPI
wXv2+Uqi70PIuyFPQecz6MzAuhPrE1iPK8gO/RmfyG51rHMYC2s1MdH7VxDH
PKzrsddbQvypYr8jkaxznlqgtyAnvQ7GjmdJpDrucK63Qr8M+RfsPhlKfxFk
U6g6M88VsJtArwT5GJ5GrM/YFm3y2074cAtsiTDQW1SexiOuX/BcD4WFCqw3
4owN0D+PvfXMbUF5Zk7ejJSPG4j9+1i1WV7SWWXjjXnnel0gH8cYDwsrVMcv
8d1wLHtvMAd5YZp4boN/ZaxXQZ7Au+VYX8vkU2CcPB0pZyPukXLu9pmt9qGQ
CsNJqn3mkf6cw7lD+L0a+2dD9c1h1joRNqZDRng6ofN5fLtmX0N/iH7Tfqqc
MefMG79bkxOuaG+xbbJHedYPeL8pVa43p+pL1pJ+7ob82PVkjplr+jUQStIO
33dZpw2xN0fCADFSHyoPA46L8TFfzFtrIgw/bn+mFnU2uYFcQg5gzu817msh
x4ay+Qz2J8POYfhTCdmQ1zvuj5bU70Eq7K9w3pmDU+4v9i77hX3CfJx3LJWR
8sKc9OWlw/X0CvFgLWRrJL6jLus+5B7sTVTH7kS8wX1ywbVY+ZoKWV9UDukH
4x7wuU8k8oG4Hk7EFbNi6TF2+jw/FidMqJDtKz63oajanHWdhx3nbteE2J5j
nnwR9rdE4gHywcZUWHoJMsqLZ+j76rxqxHxei1TfP5DnFYn6cjiSv532nz20
zX1U79qztw7C5+1YP5RJl/miz2fg71HPFfY0e2ejuXm77ZBfdriPGC/9ZD5r
rUt7PeaJqz63xhhgrMQWz1oaCc+LzBf0exr8eidSj78WqWeXGbc1zhvtXHRP
sbc4lxaYB/Z6HtY4L8zPF/j+UCrOPgT9nlg93YOcnYyE55Op/J5hzDPW3a7R
PZmweC7S+V32gT0xP68YWGPi5wD2+0ri29eNk9AcyDN41k+w8yPWy7HfmKie
LQX1ylf/+2n+JC5pc1Gis5ogn8/Uk+2Z9miHPpxIZed4qnww94zzV/xux/5v
qfDBuqxM5B/97C9pdnN+sLY8c47PZZ25z3wSF5cKmkHkNs5m+ropFj54FzhS
UO9zbk7MnOdYM5T75Dxy9rSi+plzhjOMHLE2034HZDX2qiLNT9afGKLOlEx+
jcTqe+KVWD2X6k4zAHkM+5cLiuWBTLODM2TQPtP/O7H/HdaTjR/ilfm6kdc+
+WduUblgDVmbdvtJ3M31fod5daznS4tnDOtBfJOr6X+bMXwRed/JeZQIq7xf
Ea/N1qGdFuOe+pxBSzyLl/os2mxzX1C/2TOb+wt8P7j1bSRO5KyZVqGz7oI8
nagurA+5bqf5rtL8yT6qi8Vj5LzBTL3wj+8FzAX9ORCL47Zm4lZybH+iPPOe
RGy8nAlL+2PN1SbfNTkjyRvkuX8z8dpl2B5IVF/WmXEtdSzkVnLsmArNoLLj
2pVpnxy8zHkjL1U59kpjZ5n3WZvj5q6p5v8LOPOm42XcXeZZ9vjpvOYNZw3x
Wun8XPLdlVgi1hgb8Ub8jHouTPfdgPdTzvz7CvK9yn7RJnE+3vco3gHII4z/
3VT6H0ayRzyyp474bjwh0Qxkf9DOxZLi4t2Kvd9tPBP7x+wbz6E+Z0xfohru
i8QN7El+V/b9mhzBvjrqGPldlX1uKGn/QcjGkuwvhJybiEN/j2SX9h/G3uZY
eefdlnki18w2r3BNPHSkmpEzE/E++ZJ3vV73JnmT99Obzi3lDa85ozo97w9G
wioxO2od5o73jZqi7hzkIb5jPp9NVddVkM9l0lkD+bZn8Rb3XId7jH4wt8RA
qznquu8k/bZZGYsHqzLVnTWnzmBJOh/Fql2f9Xn/Om2M0V61bfJ+0egYOSMa
jEnWsdrcyHrx/yLW7D9flcab
         "]], PolygonBox[CompressedData["
1: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

         "]], PolygonBox[{{2628, 960, 3128, 1860, 1861}}]}]}, 
     {RGBColor[0.934839397382232, 0.70709849345558, 0.39800213188491906`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl1uMVVUShvc5vW999kbCRI2XZIJB8DLYjYo+mOmWRG1aElExxATjTBz1
RQI8qGC0kegIjmYSjSCKziReoj6QKDx4Q4JBiNrt28w0F0GEbmm80BJUGhWd
9v/4K/FhperUrlWrVl3+Wuecvy2Zt7iZJMmCRpK0iXZkSTIrT5KLRKs0SWqt
fskP6/dq8ZOld0OZJPOkPCo6pM2bJXtHa610UuksFn+Nvvdo/VN7p4jODv5a
0Tla68Xfor3vS3eR+BVt3rNc/M6G9daHfHHqbx34lduPNVpPa3UnPnOJ9mxK
rLMm5FB0Z+vbicr6P+j7ctmaFH7vk88P6vcW8f3hN35OEN+r9a343tT8deKT
Okme1e//y96bqe/P3qWp74XfazLLuNeYvi9s+k4HRBc0HSvO75LufPGrc8f4
cdFbS/u+TPQ/+n2bvp+iM6/X7+ulf1Cy/+rsOyTfIX5csnO1nteeTxqONf4j
mxLyHuKndY6+/6nNdogVd0LOHR+Rz3/XWtFwfDpT+/hxbh8/0pk74vvRiM+R
xDG5Sr5doT1/ER3LrXMkt3/4eVdtfXTYM7v03XtEvwif8Gdu6Rju17511ILO
b2l933C97U5Mbwp+rej9+l5q3Vha/rX2vqF1ivZkRZKslM8zIne/VK6F7bnr
caDhWPVp/2uZa7uZm5/etL/Tc+eDeHRF3UwUf3PTudkStU+uOf/J8I3vByLX
nQ3bIQYTFYuN2j+htg7fb6W/5P+A6AW174Cto/L3LXyW/tuiF5TO64WieyR7
OPO9yBv5487wyMnR1sgp8hXx7Wj0I7VCbazKHCN0xkVn6uy5kn+Quq/owYdD
h7M+L92Tp9eWrYr4To/eJFbEaH7ci/ttDr7Zrh7U3nHZ2F67/59TjqZm7r2+
xL0z1ua6+bpw77wqeqAyrhzI3UMHm475aOZ+JK/QZ7QOS35n03ckv9THM4Fd
PZl9eKrp/PeHDjlHhs69tfv2u8Iy9LEBDvUETg0WjtOltWtgKHL5j8pY9Kjo
kHTukPxF0Ym593He4abl8PsVi3/JzuTaNvraHK9JubEE3PhDnMWZ+7RGpPdZ
4Ti9H3EjliOBp+BeR+DkmO51TGtD6piMRlyONdxX1GohO1mbZfiBP98Uxv9W
ar2PK9c/vbstdX1QG2DCYOZ872rYX+QPSXdratk1gZ/gTxp7iRF0e/BTavN/
LJwLepIeJL/MHvL3jdZIm+WbRPdF/8/U3r36donoNK1+8efKTpaaPzmPAqPA
qq9a3vtlK2LddH0+lxufri7dh/RjszQOcSY4+WLkdKRlrBiJWvpzbZ/ObxnD
tkV88ItePRJ1iL/U57rc9FTZvzb1jDnZR03fnbOIO/EfiNnAjEhKx5i+oH+J
3ZKm8ZN9nTGz7qmt80phG1XM8Sz6Gv3dqX2+P/b1Rf3zPYu4MSvy0Kee0EOn
P3NcOIu3ws7Ak2P57/cDN7g7mPOp6ObA9C/iXviTx1nYv7cypjL3ngpcnxy4
tCHsvFE4Tsdz10QZ8RzI7BO1Rr3fHDml7npj9n2bOtYzov6peWL8o2yekP7x
wnaYl8wd4noi/O2NvdiZlhmz6LVN8nmO5O+K3lP5vXS3aF7aflb6PPaDn9iY
E3ZOziHuV3lWgcGv5+6ZsXgz/FQbb8HdRwNbhqRzqHAvj4h+Who3dovOincb
9zrUMtYclM6Htfv/pcI1R8yezY2BhwOLhjP3LecvlP5x8bfH/OkJn3kfku9P
Yu4tCBzeVptfljsuYBNy+oEam9oyduIDeMv344HzzEPyC8b9GHIwjXcBsadO
8I++64ucToiZTh8if6HwDKLH+YaNsbDDu3RX4NK8yDk9BT4RZ74NRo1RM6fV
focOy2ZX5lrFD7AUX6lR5s8tcXfej7wFt8SsnxA9yBvjvdQxPqMIWnsur4w5
fXZtnbNq1xvn0Av0yebAuotb5jtaxhNmNH21rnDMiT2zl/t3xpzfGvaZCedH
rW6MecA9V4YONTfWMo791PJdeBOTF2bxvnjLXhIYe3nt/sLObYHt9B33vS93
TJjti7TOk/zf8nGn6FfxdpyRuYaoH/IyHLl5IHdtUKfUIHLwB1/pf2qDXrwy
c4yGS+sNVY4Ns4FYcdaOmEecQa2CSxsCF8gv/Ytv5Hgo7AzHm2o83kjMXmYw
s/DkmyLeh8xwZvnyyBF3ByvIyd6oYbDnWMTnrspv9IW82SvX952il9WeCcyc
J3K/KZdWtjMeuAnGcBa1v6wwfnVp36Wle2Nm6VnZDLwkh/DEAdt7AnOIAXcB
T07UzsVfS7+fmQHgP2+n0Zizq+O+YBN0NHje5OA49wbbwBp6CRyaETntzh1f
4rMqd00/Vvk/5aT4XwlPDRDbz8qoudK57Yr8Undrog6xSRymRr2sjdrYU/q/
yl7RXblxErz8vPL/sf2V7WL/f+If17de7X2zsI/dYZP+5lwwIWt3XMp291RH
vGk5vzvy/nPlN9avlTEGPxfF/6yBmEHMUPwEc5YWxkDeCPMDa6hD8tUT705q
dmf0yGDUMHVI706L/sXH7vCT+HVGDDm3N+qQ3F0UOPBqvJ95CzADwPkzxZ/e
7lye2e6+GIyzyM+sqHnqeiBscjZxAkvvrn3uy7K3vLY/68X/BvEbK1A=
         "]], 
        PolygonBox[CompressedData["
1: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
p7vcoxioWJjjYodylHLVf5PG3s0=
         "]], 
        PolygonBox[{{2315, 522, 1855, 2322, 2323}}]}]}, 
     {RGBColor[0.9605995695587372, 0.7714989238968428, 0.47785866563208507`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmGuMVtUVhg/fzHfO55wzA4y92KRKvBQcrZdG0AZJrIn6sw61MZR4oZSq
KQKK0RkKUv9YRYtWW9vaRnsB+kcbE4wpiYgkKpLWXkRqhRYdlIvOoKnUC0Gl
fZ95X6M/dtb+9l5n7bXX5V1rf8fPX/KNxa2iKDZNKIou0VfbRXGLJi/o9/N1
UczTWn9TFN/tLoqrNJYUptdkvrjwHvMP9e0HGrW+Pabt9StZl5yfaf6R6DMa
l2j/2bIolornPo2V4tklJWqN9dp7RONirX1N41zp8i19+02tDXaK4lbN35aM
jr6vNHr0/cmi0zRWimeRfi/WeELzPeL7g2ScJP13af97WjtW842SsU3zu7R3
m+Tfot+DXdYFna7S3m7REY1Fmr9Sm45IxoracpDH/TiPO3Lm+Nman6j1YY2H
mTeevyr+E0SXaWzU+iu5O2f1aW1et+/89ATbEpv8RDotk01aGk90W290Rnfm
D8Q3+GhnZRnrNR7V/sTG8z7Rz2v8QDx7xHOobVnc4Q6N0zUajbOk34taP1N8
7+rcI5rP0rkvizbxzZG27f1mYT/hH3R+WXLna/9B0Yc1btB8RWM7rGj73r2i
y9vmx8Y35O5Luv17PAZk26X6vVO6DLS9x/qXJPNPmk9r/B38q7W+o7aMHeK/
rtvfYp/pbZ+L/T+rb/6o9c+J/qu2HbAH3y8JP/S6zPEFevZ22x7/jE0m5Qx4
98g+F4jnx7rn9zX/jXQ4TuMExWe31s6Wvlu1/6zGDO0/VZvnKcl4rXYM7K0d
c7M1/iz5Q13mvVl8F3Yc9xeI/kjfvK+1u8X/bmmfHdH8VJ2zReOUlu+PHX5X
2Vd8S77Mr+3LLbXjnPOIvRtr3/Om2nn+dssxdY3oQY3tmt8pmQdEt8pWY6It
fTsq+mZlngOi/62cX0PiubkxT0s6r9H+Q4mPv9fGi22iuzvGlhHNd9a2579r
yx2MHW5orM+YZD+j9dGWc2Kbfu/U/HnRQe7csvzZLa+DGasla1h0rLQ85HLf
ffLDXo2hCcah34qu0qjbxhFi+lDilvjtL+2j8bjVWKj9KyRnv/auFs9a0RmN
c+Ns0cnaP4ozC/NeG34waGHwoTc8yNsr3S7U73taztlHg3fQ9ZmTq8TqksY4
AV5gD2QvDL7BvyuYeahjvDgs2tf2edhkUWMbvlbZVo/EL+N4IXqF9r/QNl4/
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
cE2nSg==
         "]], PolygonBox[CompressedData["
1:eJw1l3mQz2Ucx7+7+9vv9/v7/b7tGucwEUnYtCSrcjTj6qBkqbUolqllHOvY
YmVCE7mKabcDhZxNjmZyFqpVUWQqJoREuXI1JXeh19vn8cdrvs/3OT7P9Xk+
z/up029o16JUz/NSUjwvxndswvNeglFQAjOSnneRshKYTvpy5HkH0z2vkP+f
fc+rz/82Gm6k7THKd5JXwH8GvMD/EcoPwz7YDzMCz8ulw71QgfQp32yfhrNJ
61N9d6csH3ZDF2xn0me+7MRpCztgJ2TSJgMqQWV4i/qVqFsRelB/QWBjLeZ/
C//bQ+ynMUfyvqCsNf85aZaXyn8ZVKDuPsa3k/R6xvIpDCU9DFbQ53JYga2P
oCF9NoBsaAxjYQBtB2L/JdJP0rYbdKLtYxobrEmxMfak/XBoRLqcvCqUVYfp
zHcE63eA9nfSth48QH4L8Emnw3+M4So8SLq1yqEFNMfer7RNMoampDNoswzb
EX3k8b8Tdrg90d70hgL6q055H9JX6fNt2k+hzRXSX2Jzk1sDrcXv9PkbnICT
0I7160H9lqxfB9LnZR9b79P+K9pvgfOUdeN/M+mnKE9S3oQ+pzK2k+z/KMou
QC7tSwPb6wzoTt0y+iyFafAa9I1srFrDAtIjk+ZrvbE3A1tXsFGmvWT+Z0Nb
U63t0/wfJH2I+uMpH0LeQdJDsTGOtlnYHEb6Gn1chRTKUpO2xlrrjpR1isyn
5FvyyText5A6C2AZLIc/aJtFX1vgBGmfvHSIQwI+oM19tD9L+RnS57D9T9z2
VHs7CvsrsJ1DnRLSF8m7AJfhCkzBxh3MdwN1XmW+g8kbBM9BIWRCBlSFavI9
6neFntALNtDXetgEX8ZtTbW2fRhLAUwLzFe0R9qrhyjrAA+R/zAsID0f+pMe
EJjPyffakG4Lf9PHxJjtqfZ2O2XfwS7YrS95AygvhB+p24O8fHdGdFZqYWOv
4g3ldel/E/XLYRF7uTi0OWquudTrGlgMUCxYQ921Oo+UNXBnRmfnNviE/f4J
e82o35w+c6AVtIb6gcWeXOocp58a5FWH2lAHtmF7q4s5ij2HfPMdjbEz4+mI
/UdvrhG0p0076AidYJ9vZ3kY7OP/AP0VsXf92P9fSbdizCdj5jMj+c+ij4Zw
N2RDHEL5IH1dhdtJ19G+0e51qEG6OiQhgubYiGGrJWzQWaLNKc/yKpBuS502
8DA8Ar58z/WhvhLOV9swl7bO5+R7d0GjhK2J1qYP6QI4pzOrs4+/vMx40rCR
CtfJ9+I2Zo1deSqr7GJ1Z9o+IX+n7Fna94RnQjtzOns5imUJsyFbr2B7Asxm
PaNUi3E5/D9O+WOQB93hfrgP3qCsNLI91d6Op/4Z7J6Sj9K+nP/akcV0xfYM
d3bk0/JtxTjFOvmYfK2E9Oi4nRGdFZ0hnSWdCZ0NranWVjFesb4X6ac1X6ik
ewoqxO1O0902k/Qstwfai6Zwr+oz10zGO4YxzmLs88ibCxNgIrSGVm6Omus4
GAuF0N/ZaOrqqG770GKz1kxrl+18qybUgr6ak1tDraXOsM6yfDDL+VTSzaGy
i/kn3JnQ2SiDUpgmn4xbzFXslU9cCC0mKjauJb0utDnPdHPS3KaSNwXehffg
I1jh8lS2I7C7WJphhG9r2suNWWMfGVmsVExVbC0mbwQMhiFuTQpdnsqKIov1
unPn6awEdle9yHj3hLbHJW5NxzkbsjWHdnNhEnOpG7MYPFn+RJtJaaaB6ikm
UTcX3qbuO5FpHGmdLjCd9C44QHoVfVYk3Ts039cdqru0movduhN0NyjmLXJr
orWpRl5Vd+ZruD3UXtaDO9WGtkfTLKbUTZjPyfcmMZbJkdWp52KIYslM3+4q
+Zx8T3eC7obFsAT+wsYRyk5gr+bNGA4DqTsIzsDkNIv5Xdweai9LdQ/DOd+0
hM74v0nLU9lPsAsOSwPQ/zraV4ksZil2fQ4bA/P5Cc7HypyPydcWUXex05TS
lkvpZxk8j83i0DSOtM73gWmNPdhvzP+cwGKv+hzibMiW7gTdDdJ00naK4Yrl
VSMb22bpBezeyv9nMdNo0mrH4HXS/bF3PLA7SHeR7lzdvY9LU8RMAw3yTUNI
S+hO1N34NXnzU0xz/Ze0M6+zP5W886R/SdrdIY2yn/QtkfnOSvIyI5uz5i4N
Ii2SEVmZNLi0+MLAxqaYVyw9EZh2KOb/EumakWlVzakW6R8C81VpRmlH+Yx8
R5pI2kgxWLFYmkTa5B7Su2N2xzQh/W5gWkt3vO76pqoD2dA4YWt4Yy3T7S3x
jW/aUJpR2nGJ871VsBqW0uZDpzkWOBuy1UraXdo2sLmkStNHphmlHaXhpeVH
+aYNB/P/VWR3lO4qnZGzCbsjdFfoDaG3hM64zro0vbT9ajeWG5o/bmdaZ1sa
QVphNn18xviLsPm1tCS0T7cz82fC7mjd1dKA0oJ5ob098nXnhaZJpE2kWS+F
ZkO2pBFKGHtqaHPbTp2G2ltsfuw0ubR5fmi21Kf6nk3eLLdmWjvNWXPXGGcF
9kbRW2U4ZSOgyLezJh+VrypvuHsD6i04UXvuNHiZu5Nz3JtDbw/FBMUGaaw6
pE8Hpm31Bhrr2x5prxSzFLvupY8DMYuBioV6o+itorxmkWmONk5TdXSa4y7n
Q/IlvYH0FpJmkXa5P7CzLR/MjkzjSutqjVY6jdLHaWRp5d99py1jFssVwwa6
mKHYoTes3rKjKT9Oeit538IXUB6aZpB20BviUGh7or1RDDwd2htTb03FhDG+
aZzOTuNK60qDSIvozjjmmwaVFp3g1rr8Zl++aV/dSbqb9EbVW/Vo0samN8KR
pN2pa90YNdbriiExiymKLZ2cFpVPyDeuJS22qI6nGJk0La434I6kaag8d4fp
LvsfswgO6g==
         "]], PolygonBox[{{2595, 1258, 3132, 2600, 2601}}]}]}, 
     {RGBColor[0.9863597417352423, 0.8358993543381057, 0.5577151993792511], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmGuMVtUVhs93O+eTc0JRGLDVaQuNxQttRSKOIj+c2vRHvQQQlALqDCag
IDOjFGU6oKOtvSlXLdrGotiEqlwkoRVE8NKISQUtIgxhqDaCIlVrHWxam/Sy
Ht53Yn/sb69vn7X3Xnutd132Ht7aNnFeOUmS0+KnEv3oNEnOi3ZK0P+Ofnkp
Sb5fT5L2IknOqSVJW/Tvl0XPjP7r1SRZG21l8C0OvptikUXR14NvRYwlWZK8
Frw9MT412n+8ZmfwjA+6Mb7dEmwPlTSXb5ti7Npo58X4M/F/M3sxJ/rfRhsc
48Niz6eDHhr98jxJFsb3ZdH/rqbxpcEzLtYvog0xH9+Wxfjqmmh4jsQZvhT0
tpg/JfafF60r6NWZzjcvzjHD8owO/gbWijYp6EPxfVjQm4J/Q6zfXJHeros5
X2BO9L8PmabEt78HPb3Q3J/H2ofL4rkm+r8Fzw+C51jIelb090TbFev05aLf
j/F/BN/Y4J8b/e2F6Nui/yDV2c8J+vHgXRrj4+L/2ky8C2L8lRi/O9qORHIg
z8sx766q9t2dyIZtFdlxZtCtVZ2R/gb+B91eky1aEuloTdBvB/1YTfSpMfZI
9I9Gmx30CyH/pJj7fC77Q387ZLo/F25WRn8keFdF+17wvxj/H46+K7CxPMZW
RHsv1v9WSf8HRN9SEz7ABt9XRnuwJKw9ZhnGpqIvDnqB198e/C0+F2dZFGOL
ox1OtAZrsc+1Xn9D0MdrlrMk3IG/ERXpaWJVmAVLjxhX3ei4Jtthx+eCPrOq
xjh6pn/OPHdGuym+dScaO8t2Pz+VHdHtvlTY/2Um3jnm35/Lb4YUGrvZ42Cd
c05MhPHVlu1RywlPt32A/Yem1kuiPZcZP6Osc/R/INf6PcF7ek1ydNjuv7ae
jxXy7+l1+USD/WJ6zJkRbULQ01L9h/4wl82PptqLb43oPPAxLubuC7o5xgZH
a6pJt3cZq3eb3mF9dnu8py4sVENXTTFvdrQLoh2LvTbG9zNCxl9YJs41yzxr
S+Lj/1di/Dtl0Ywjy4WWB+xyFtZ4N5X8nGOHbb/dcWxKKsx0xn4XxdzfZIpX
xKBfBU9ztPXx/ZuJsLnA+L/OcQbsrYm9VpWkK3SwKOZ2RTsI5mLeBseiIdbz
HI9j6/aSviPPuSHDgZg3utC5p/ns6JZzoZePa5IZ32GPRdYt3y8yT1/0V6ef
8V7tMz5RVdwBM/gKPkMMJR6AYzD8RqZYuTcTxhi/2Lbn3CNjvJzJduPDhi8R
4yrS88BUeQKskyvGG4PEa/oO62Gc4zzxHprYtS+Xb/TkmjfQc/9QKNZPjr2K
6BujrStrXoNjO7ZuqEj/dTAQ3zL8IZd+/pLLPpODpzP6q+qiJ9WVTxot4/PW
B/uRH0Y4R4DPC40xsAXGsRk4JN+MSISFGY5156bKzcxdVxV9DBxVla8Z+2+q
OEjuxTeJg/12GGudH/Naw8FQWXS/POzNvsgCDvox1GU8gENws9HYaLZvvkON
UBXu8Kcmn+torvF3c53jAvsXemzyXi+ErJNCjuWZzrDIMfnsquJhb9BbS8qT
E4IeGHz7g34t+udj7sSgb03lT9D41LPxbX3Q26J/LhOedoVdbgm+S+L7nhg7
I5Pc79fl09gbW/8r9n+1qpx6QyE7tkb/xWg7Yrwx+reCd7LlaYh1jgbdEeO9
ZZ0FGa6O/1cFvSJT/pxaVozFXtQK6HxzSTzI9ECqc4/JtP9ux7QzTR8Kuha8
T0V7IuZtNI0dBxXCbE/22bcRtu9G8+wsqZ5pT4R19PPlRN83mJ+YR+zDRp2x
50voP+bdk6nmeiX6Z2OvK4KnLZUdLi+rLvphphiwJcbnV6WrXfG/J75fGW1M
8OyN/jKv/3hJ6zD+TKF956aK0eDrk1jv8kIyzovxTyqqW8jRrHegLJujV2o4
fI1akboKvBzKNN4b/Vu2EbYqWD/W+VohfRy1TohLxDHiVV5RXKjEtyerinGc
7XHTdWrNTHgDg/jfetuUWHFSTfj/caZzcb5LPb9unPYaJ+CF2EgMfy1X7XUy
2Cm0zo9ijUGZcsLSTJjGdmMz1VO1mrB7X8jwT+qgWKMr6N34ZC77UTuSN24s
K78Sb7B55jhznmML/vf5THY7vdBZMtfb+CXfTw76mvj2ZszfH7xpWfqq2CcY
B9cfZdrrr9E/nUp/YOTlku4P4PHPmeL6zFjvu/arwZnsgz7xB2Jk3focVNde
n6srHrxlH0SnyIdsxFfOdorxiuzvDFCNc6LWSVRDNgR9PfkzFU2M7f8/xvgc
4nHmDfNcamDotpoa31qdH8mNXa4hyeX4RUdNc9otGzUk8lHv7XB92Gs/x8ep
BW5zPUCtQM1AXl/j9cnRp1ZVT/Cduw40dxnqrx7nTc40xGe8xGej7vi0phhH
fCPOQO92XTnQeZYcCU2d159T0R/4+tRzqaML51n0i56XpMp1fdYDNQI0dQL9
cdPov9V1DnK2OMcx1mJ5M9fbg52PyD1dxvuBijBPHh7sfIRNhtounAc5D7ku
Q6fbrStqYnR6m+su6u0FqeLIi4XqaXQANufYZ9B/R8zZUhV+8SXuVuj/RIwo
K6+2p4pN22ON+al8m/w2K+Ztrio+3Z/JT6bG+OJUa3yQKY7uc2wnLvY4Nk4p
FGfJexOQuaLa8BuF+F/NFFPfKAuzxJu9jrHItc5xvnCNg7zUWeRE6sCVmXIQ
+arBa5MHwWub66uWiCN98e36XDx95iMmH69offaC5o42J9UY8bsz111wYa7v
zCGG4xP4Bneb3lQ8w1wnzzeeb051tm2xzk+to8lBDygUlycWWvNJn3Gu89eu
TPEU7HIPQlb0Rr1GvX3ENQuYQY4Wx+FNrsnvzWQDct2oQn5ydqG4OKsk2WbY
v4mf3AV5u6D2P17oveOT6D8uVP/1FcLudtftL4Uuron/O33fpWbDr0+rKaYR
27APfoyNkItzINtpVWESbM4yptAhWKgZP+uMyYoxgW+Bhz/m5nV+YA3uCz32
J/Y7q/pZTMJ/p7jmX+IcRC4iFqAzZNqbKmeRu5anku/OXD524q0l0X26xf5+
3PYHJxX7zXDzHXTMu76QLloK5a+Dvs+gM2oAMPRhqrhfz1SnkOPg3ZOqzr6s
rnxL3iWnUysQ//Cp+Zl0Tr282fEZvWC/5bYF71PQvIEdGaDYPbKu+y619QrH
sf742u58gN9Qm0x0fYL+HvKa430/5Z56UiYMg+U76sIB7x/s+bD5yZMznSuJ
xXcm8sfb/ZaGvXLnS+oaYh4x+pD9ER2j3+663izuqqve3+CasMPxDEyjp0br
ineC2cYGMZHY+GCmNwOwjxyLcuWhxdEfzLXGwVR1GDK2Onc3+d60JFdNvzRX
fFnl/d7MhUVqFnx0sv2UOpj8f79rk3N938FvuWfgS08Z85yFtTotf7OxSW2Q
2g/g6XQ9w/mP5Kpx38lVs1zlumVPLr96Pdeb0IP2wU7Xwuz9ru81IwvltD7f
8d4eoNx0eIDu2RN8xsP2aerS91K9X3zEG1gh+Zt89+F81DDcR9c7dnOmLp+L
vXvtC/BiX/i/mumN78xCOtnoOEC+AkPYmFxNzsZ3p/nNhXPN9rsHd7PLPY+4
hs+vcR7/0G+JvCmC9zHWMb5D/CEW8MaQ2h6MbfV4by6cHcqVAw/7OzKBa7A0
1fU7mKHuW+fab0uhnLe1kLyNPi81y6fO8+QD5P6Z8yDxjlhXyXTfvTVT/uDb
TzLlfGoC8j71Efych7euUY5LN7pGXm0cNTv2Xmmfhp8743S/BU3xmzG2IvfD
d1+m90Xq0hP3Bb9R8177unMuuXeWdYEedjv2cu9Dj+n/YftSnx3fxA+7E8W8
ua7tqSeoKx6INT/wG8V7zr277cv7jB3ONdl4x0fm+662tN+uJcW0rc472LHN
+W2lx7Z6LvoaZdmoQa6wDciP2KH/nRb9Evf/lGsv7hmcqe65d+TKR2+mih9g
g1i6yrkaf+fNr9tvEQt9NmoHMEseHu2apdVxkjcKasd9jjedxhBvnNz3wAd1
LrUv8ZU3kvP9ZsK9v/+daZbts9S6aXZswdcbnDt3Ou7B9z+EHSI9
         "]], 
        PolygonBox[CompressedData["
1:eJw1mHtwVdUVh09ywzn33nOYBDUNAw1IsKABiRYLAgWntNYHQdskYAJYkuAU
La8EUyRRElCgigSFRKH4oBUVX4SZioVWB3kMbQWCghIYgjg1oRYiiEkUi1Pa
79e1+8c3d++z32uvvR53QPm8grmpnueNTPG8NH5L4p5XDHWR5y2Gt5Oe92eo
CDyvEvJDz5sA6/n2DFxHOQ/mU74f2uBYzPN69PC8v1P+D1yCVPrEYJ7veXew
4EfQzHzT+DYV/kCfN6GS9uvZx3TG72D91/n2GrwAG7UG7QWMPQYfBLaG1ipk
87uY53O+Pc/42bSfpfwhcxyGdjgV2R60lxGMGwl3cdbJMAWmQgHUIItJnKGI
8hf0OQfn4Ut4nzlbUm2P2uu1zLmFtduoP0V9Kxxl7PvsqYu2wrjNtQD2uzWm
OBlL1muYr4j5TkIx/Q9R/5Fn3w5TDtlrEsaz9o91fr79kP29yPzn6H8CWiUn
1n0Dsmi/l/bf036W76v4djnzvUX9PPXt1MfQ/iT1M9TT6L+OegP1Dup1tN/H
2n0502rKOaw9AEpZuww62PMp+rfT/yL9x9E2FpbRthwyKV8Bd1L+mfacYO9w
K9wGI1hvM/NnI48c5roAX0M3fAV59BkG/aA/rGUPvu6b/VzHejcyvgf1I5AX
2RiNXUL5YXiF9tHsbRRUU/8Xbd/ARfgW7uZbMWP70D6dcjPfFrKXvXx7l7FP
w3doy4SptHewhzOwD/bDUdoLPeszjfZfRDZXG+OPB7am1h4Dr1JPMiYB/2ad
S9InZPMIZ9kPg2ifg4xmwy9hJvyOvhtgGSyHPbAbXoZNsIs5dsIu5LIbvmXM
RRgK1ybtjDprJ3TBSOm6uyPd1ST6FEE+a0+ERsoNsBLqoTdkQTdrfSVUhoFw
lXsDegvZ0A8i5tiEPiQ4bxFn/01g5bjeJPVc1rzG2QjZCr0BvYWf076d9n3U
3/v/meImc8k+C9YyV1/20Aci6AlpEAMPUmAx1MFMuBf6skYfp7PSXd2B7qKL
+/mCcoHeSpq9gW2+6aR0czjcAOVQBhPhjoSdQWfRG1rO+HLq2dT7w7OSn29v
v5b6e7QtiMz2jKC+MDKdkG5sZc3LqJ+jf0nMdE66d8rZplb3lnPhIH2bmfPq
wN6I3koEI6lfH9lb0BsYFtk3tYWQQd+l1DNjZoM/5X6ujkzXdjBfB/JIj1tf
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
cWi2VzmTcqcul5t/7f77+C8M6Idm
         "]], 
        PolygonBox[{{2140, 857, 1774, 2134, 2135}}]}]}, 
     {RGBColor[1., 0.9087837245175917, 0.6727194834704845], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXuMVdUVxs8wc8+5955DxQriOIBFESgDrUnRUajYiMCMoDG8YTAqr2Gs
qAQGq7RCRwWNjxQYH7Ga2oJUU1sRlEdsI0hjrFoUsdL6qta31lfV1MZE+/1Y
3wT/2LPW3Wfttfde77Vn4NxLJl/cI0mSIfpTKzhLo0XjTI3DsiS5ryZJbhQ8
U9/3aWzS7/n6tltwnuDUIkme1Xwhmr9qDNLcJWmSPFoTNEv1u6fm7xF+neAz
GiM1t1Q0W+uS5FWt3a5vW0sBp+rbnCLmD2QxB75N8LeVJLlXh9xTifltpj9c
dJuFrxX8OE+SD4QPzeL7dK09QzRvVJPkH1r7sXjfofnBms8ETxds1pgsfLZo
dovmHMGHvBd7vqhxn/AnBcdo3Cl8pOBu7fW88NdE30e/bxXeU/AH+v2w8BGC
p2n8SXiT4BB9u134MYKfazwg/CjNT9R4RPhYwbQU5+FcF4j/J5o/T3Cjz4qu
nvR53hfcJhm+0yPkvaAmIDL/tcYDGps1dornDo160d6VBOT7zRp3a2w0zdGa
Xyv8C/FbrPGSeH0qeTUKPih9dZl2g8ZvNLZ4j95ad4TXrtVZRwhfJ7hQPCdq
3QLBT8TnDX2/JY19us+y/hv8rtCaPppfIbhHsnhKd9wqOF7fJmnduCTOxNlY
+1hdnPVlzS1Pwx5fzOJu0EHDN3Dk8HfxfVz4kaJZUhPfmF8u+JbGI0nYMfb8
VBb2e26P4Mv+Z6Vhb0vrgk9nEnN8myZ8tf1kiu66Mo39P8xCf+hxp+YvL+L8
92j+Kt9/nUaX7vm4aFYLrtR4TPhSwYvqDun2cUP2fb6cJPtZJyiS5Pya8N/T
bcvYSSb7yISM1l7/E12N8BOFf1AEr77CF5XiDpz/KNFXRDNG8/001z+NvRo1
31PzYzU/Vvhh+Izwdq09Oz3E42zL5y/iv0L8u/itw7XrYKfp9yKt3SB8VSX8
Ez8dJtpKEfZdzsI38JHvV8LH8LUWwbM17hI+V/CKIvT+mei19cGY1C2Duy2H
vAi8KppZIppZiliG7rk7MnhSMukl2inlsIUvbPPoDz2usT7h35tYJx5TShHL
VmrNRWzke2BDe/Xzx7Uxz31bi4g/t4hmPwcU/rXmj5Vet4tmQDV4t/SI8/9X
PNdq/lPBr9KQ20/LcY+vfa9lacSz/VnMwfNNgZmWD3JaLL5/Fn6B4BPYos78
H8Fllj96eKE24iF7r6mLO3D+On3r0vxX2rdL+CZsshI+gSyQw7vidYN4fiY4
VXRTRTO5HAN8WjnOtMJ2+EEaOHaxrTZkROwlFhAT1ss/fq41w8gDmtsk/HRi
mfD7NGrxYa29NI3cQQ4hFhDfkcXiNPIO+We1z3xXJXx6if26Nou4/574XFkX
+l7ieEn8xNevTiLG4ZOriVWOkbN11wnaY3ASsexM4SclAYlvJ5Iz0/h9oudb
TDM+jbXHk2NNB5++/nakYD/tPVYjJV+J/zj8sRTjDNOMTQPvkwQc6/knJKtl
uu+OcvgkvjmhGns2e9/WUuDcIzOv1PuO0XhN+LmS17e19iwRXCG8N3EMGxOv
Sfp+neTWS3q6EPkIr9e6UzUOw//qwubR6+1a21drZ2WRY7dZ19D/SONt0V+p
sy7S/Ipy3GWc7/VHrW0g72ltL+07UPiSLGTTz+d8XTQDNN+exR3Hd8vTNCWN
f5EzRHO1aI7V9+PSsO3Guvj9tPCBaeDM7/Jv7IS5gaap+NxvJXH2et93eF3w
hF9DGrGy03mQmHmE8yHzxPgxPhtnzCTDVs3dhD8msZ58DW2D6U/1Xuz/vuhX
itfQIuoCbJj43j+Jcw3QeDaJe+/DB/B98lUROZvcvSuPugd/vykNnwcnXnZI
B+cRs8pxxtQy/FR8vic+nUXEGPz3Te/5tvelHnzBMaTkta9abtB9S+Mj8TlG
cBUxW/ipwq8pInbBj5i21rmSnDlTcJFGWxJ1JjJCPls19mg8Sk7NI96+m0b9
sds63GyIHvtbL+hhi9ft9jx66rTO95qemgW9vpyED95fCptsTuJMM5Koi2f5
N/XxbP++TGONY8bLtrNXkqhlersuov7iLOt8xmeSsLGpustDgtuLqK0e9F2P
s302eg31EXXNNY5JxKkPi/CxpVncDzvABsaJ5ybB+4u4U6PvtcG8t1gW+3yO
Kb4vea1Ja2/Fp4v4hj7/6bMCudcw0Vwr+KsiarwtpYh75NjNzrOtxo+3Pn9i
OaFP4ix23uH78Hu55XeNfaLTekdmyG6tbeIy0y407LBu2jy3wHPLrJt27/+3
PGqnA+mhfmNuTdQ9C2xr07/Bo2RbRkbkh3OdI9ALMt1rne702Yh/1Drk/Y15
5Cxy13jzZZ95lhW9ygSfm2/kOfLdbvngu3nkp/fyyIXkxJ+Vowea7j6I+nmn
63lqMOovatR6ywp72ZvH/Z5zfUpdRs58Po+a8kAea5ED33q6f2kQHC69Po3d
FFGLUJN8KXiK6L6L/m2v2O1+0Y/yXKPGaMPhGj80HJHEmTvsC6/kgb9i+ZAn
m5Kw/y7bNzY52T44wd9PTiJvMV+yfWPnf6iEvWK3N1bCLrHPiyvR38CPXL6j
iHqPuu+OLHQ6t4i+i/4rzyOfkJvJKcgamSEfcjH5FnseqnEU8vbdiMXEQ9aR
X8X+oP2Tb0faFufbrtAHerkti7qc+nyI9r81C/1SM8JXR0+qSfjldPsmOZXc
enk1cjM5uk340abV8Q/WGH19vv4+33DLk/qV+m2cawnuRJ4gX3xVCR9dZJ9Z
4D6y0/64zD57te/TYV9s8xrseqFtu9s/+XZvFv0OfU+HZcA36gnqisMr4fMd
9mdyAzmiRvO/o36VXn5ZjdgyzfGEGuwk2/O/nR/Jk9R74NR1a3w+7oTfIn/u
Q31PHCVXNNumsOuXbA/YxcnW8UFb1947dYZB1dDFFNskeQc+xGXi6nrbbov5
4ROrfSfOsdX97Jw87HeKdXEbPSH60X0/sqyQWUMe83yvdw5gP+oG6ofjKqHj
sm0Fn2vQ6KdRGPL75jR6jxGaXCXixTpDp2BP2wd0TX6jqM3DhliHTRH3BpRC
LuSxpc6b5Pvz3XPNL4JmXhE5H57k/RF+A/myGu8jvJO8blsdZtmSP8mjEzWu
9RsRb0X0I0+7J3nOfoF/DHDf9In7JmIAMqRGpFZ8uBq2RUwltg7OwiY+ysMW
mSN3j3ddjD9Pt10Nsh3znbxBjZyZBpudZr70z/TR36mGHolH2EO979QdG4ba
F6lTqVc3VIN3s22kr78P9rp6y7zd+8+2Hhotr1/4jYu3LuZz6xmfwx/OsOx7
Wv7DbIPYYncsHv0N+4DuYH9iP0I2E3y+YT5Lg9f2M+9JjtfdshjvNTf4nZD3
whb3QNyrVxFvfIe753rMfRfvC7wznCCZ7Hc8JF/xvsA7w+hq5DT2wW/pSehN
plVDVtzpZJ9ruGVEz0DvcGM1vjX7bIPsv59XI9e1O++Ptt1hf/XuS95KDuWw
UdYhvJo8JvjOo7yuxTpssixP8Rx70yPRK51SiRiB/xIj3sQPdYb9RdQDs107
NbtP5Dc1B/VZd81KrOmuYYHUcCvzyKmr8qizZjo2AmfZnomDxDnq211J4PC6
yDX/gWqsbXXNtsO95O/p8ywr6greIdr8psEbT7trhortFnun16LnOt/vfm3O
BZltHT8qm5bf8EXH6BeeZ/kdiX6RfpJeknsSW7vrYiD5fI7PPNI6HG373pdG
XBqijd5Jo0egV9iexrvq5CJqZOS4xzoc5fV7LFf2We43A2o8egRkR/3LnnMs
q6wa77e841btL8gC+x9ie6BPo1/L3NfPcB6fZn2hI3LxdOcUdI/fYA/UmGtc
Z2Ibrdbve36/3pEeqsup06nxwanPK1m8p/GuRv9GH/c570h10XfXeM0u2xc2
1Z3H6Ola/OY12TmKOEt8Ic4QK3hT401qUjlyMzl6Uh5vl7xhjsnDtudbR7np
eZO7U2suFc315fCH7pri4HuT5quVqPmvss90+Ts1wgzXQsiNfnSj35fYZ57t
baLfYRbYfi+0vzfZV/Hpm82P/NyqfWdo3xllD3J0OfpV+tZZ5cgF6IdY/6pl
h49u8b7oC/9Avsi2zbUQMlvmdxB6tb7urbHBC/xGd2we77y8956QR53Kuahf
rres7i9Hzb7Nb8GzvS+yPcf/s+iTx90X+jxdeeR6cv7/AWPB4Ng=
         "]], 
        PolygonBox[CompressedData["
1:eJwlln9olWUUx59777zv+7zvG83YSBpYWmlsVoJBRGRgv2t/6S1/TbJprMSp
sSlsmncFpYELb90yJGGgDiW1RHTalJyKyDLEbrlqJpIaW2VrqWRIrs/h+8eB
73nOec45z/n1vuPql05fknbOrYXKoOe8c5syzt3K4RPgRyPnbgEf4uxx8PrY
uUko3g8VwCtD515DthX+vyzniXMl8EjKuQQcBs5tAa+ELiOfzll2lHPTsBmB
78JmCtyFjfHgB/G5MSOfNeAqaAO8hx/jZdNsb4VibA8QwxvgPD7/AHdjYxy6
J7lzFDw50t1u+CngT7hTj/4iYjiCrancOYFsA29/GDwZOp5RPqrBL3LnNu73
cDYHPBEK4A/AV4OLWb3NcTYF2zfIRyGjN/0LrsVGL3wnKk+Bn4mU2684ewFc
QwyniH2NxY+tdq9YOpEXvc5MZjm33L8P/yOyn6BLkcjwaWx+jf8WdCrQrYRa
wbu8fG9HZy/4XvwdR7YaGkTex/2XkR1D5xt7HzHPT8nHRfglXrnYDN8MbkXe
AH4dukksdfAzwevI5yC224lhB/fr4A/BH8ZHDfwZdHrAdbFqsxebOXAmVm/V
wo/gbzM0Nq2cfQaujJX7RcjLwTci1fIx+OvganxcTimHk8Dj0TmGvAV5FbhA
PF8gbyCenkQ1slpZj35E/KfQ6UqpJ0rw+6FPwc+i8w66caxazeVaAF6K/B7w
bOwdxF5ETooZ9UQAvhDprU/D/wJuQv8h9Beifxj9VaFyl8P/kVg1s9o9D70L
HkR/RUpv+gt5yStXO7jTD16AjbHYGkD/vPUy/Ly0zhaCF3O/wnIL/2WiHrde
X8DZCuvVWL1RgF8F34eN89zfw1l5ojt2dxv+1yIb7VUbm8FK8AHkw+ByzvaD
3+Q91SntgNXgIlRCtgx+E/hD/F2Eb7R+jlUDq8WTnDXj/2/4/CjpDIM/iLVb
foZvt/jgF8O/io/vYysCvM0TZ2GiHFgu9sFXwKe8esNqUgY+ifzbtHJiufkY
/qW03lyH/t1etbWdMxH8J/IOixf5ELgUKFa78x24CZqQVo9kwPcl2j2/wk8I
1DPWO7bjuvA3w6sXO7A/C9xDTqah2wzfC+4PVBur4VnwNc4ecNoh/4TqGesd
6+H1yLcFiu061Ipsfqxes5q8Am6D7ijTGwr4/y3WrNuOtF1ZG2p32oyfRn4t
0i4zn1ci9bT1ts3wukA9Yr2yHBvnuF/v9RbbifPAVxPNvs34lUQ1sdrsQ2eE
u21eu6PC4vXa+bb77Zvgsd8QSWYz2whugW5PawfnDaNzAt0mbPZjr8NrN5rO
RvDboXrLevAt8O9es2I75AL4ptdu220zir12qCqtnV8EH/XajXZ20OsbZt8y
23G264YjfZvuxMYQeEwkW/aNKQe/F2hWZpKDbt7Wl1WvWsw/kK+dsWqdgd8C
PpsIt6F/KVHPWu9aj5+x7w0+cxnNRC+yGaFmzc5y4NmhYrGdOxd8LqvaWM3z
sXJkubJvgH0LRieabdtxtuuuBuod+wbYt6CUKBb7BiwPtZNsN9mM5eE/DzXL
1rOdod5ob7Ud2JjVjrddbztuGfxQrFmwHTYA/4jX7rZ/iqngNYF2nc1kLlGP
WK/YTDUj+x8hdiHY
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV02tojmEcB+BHZLYRK0Mp58PCskKSmg9LyEjb5DRhFIqhjdocNmKIyZhD
DlHkkNMHZE618clmDo1NTXIs52GEZFz3h8vvvv/373neeZ/n7Z2zLCO3VRRF
E/1T2jaKdsVHURk7+Wg/uH0UDWEQSTFR9MX8nfln+VY2yQHmSc4/hGvCnPeh
R3/z784L5SlZIE/LJj5T5B5lFOsW8cz6mVwjV8tCCmi076r/yfVd5BOzBrPH
Iamns7PnzubLBeRwyP4pjazSv2W23/qR9T3X1Mn7MsG8Ew3OsuVeOUvuC13q
yNetMiuzTmAnlfZ55g+sl8ub9qXWHdnODftl5rXWS+V1+63WHdjCNfsl5net
25Nlv1lmyhJZw5u4KNqh88XstfXAdlH00D5dxjmPN48P18tk9jgbZl8u79h/
ku3sY61jZZzM4Ir5JvsK+d6+tXVeeC7W+fJfuM46Cs/JZ90Kz0W2mBfKv+EZ
yXWs5aL9ermBYsr1d7PX/Kv7fKOaqc4yyCKTGirMrzJHfx5z2ehzX/r/vuIF
VWaVXHK/5vBe8Y5s109jFjPCZ5s16X+lB33oxQj3++38D8385Ef4e/Wbnf+g
H4PCd8xo/ZhY3xctem1kKzbp/3L+h2SGkUKqfjfn3elAIgls1f/nvLW/faQc
E+5Nmv5g50PpyUD6skM/RjeeNL2JjGO8fprzCQwnlVHsDu+ubiJT9GYylUn6
s53nMJnpZLJfv7tun/Bd6y1lIZnhd+q8mEXkk8uR8PvXTSFPr4gCZugfcH6U
Esop5YT+SN1USvTKKWVe+D04v81JLnOeC/pjddM5qHeGYyzWf+X8AzU0UscV
/SzdbC7q3eY6K/Q7yW7hWerFyBaZrl9r3cASz3EldWZveMpZ79Nx9zpHhbNq
qsL7bn5CXmAbh8M7TT3/AbQXuVQ=
         "]]},
       RowBox[{"-", "0.1`"}]],
      Annotation[#, -0.1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV03loznEcB/Cvo7FZthwNGW3YIm2uRmr+WEKO1Bybe/YHaswcOYotRYmh
jOTIika5/pAo5NhyNseeQj2zFLOVmTRnq8nr+eO19/f7+bx/v3r2bGnFG/NL
u4UQBvlRGRfCkT4hHOYQbe4d8qB8mhhCZq8QWp3bzVpkp1lb7xBGmWc6t5i3
8onPNDPS/If9drmDbVx0b+cr5d5TrrebXTS5p+oMYyiDdZrMo+ZR+Z5GUuya
7TbKMkqpdt8kB8oP7PTMI/fTzm+cX3suQgP9zKPmK+UqVrCaIvqbL5XH5RJ5
TL6l0PmoLJBVMkIDm737vtkR52QOc899k/kr574sdj8oF8kD8iXZzlNklhzP
OE54JsnvNJnJdukyR97hLqX28/RKZLHP8ZhHPHH/ZV7nXOfc5txT/53nc+nu
XC/vyxfym85iuZRCKvS/JYTwnVTSGM4k/b/2nXTwm5/s0e+w/8kIRpPBVP24
+BDi6dLrIQN79f/YdzKWCWSTq59iP4REBpDMfv1/9t19nhw5LfZu8vTH2Gcx
jAzSOaQfp5tAnt5sZjBTP89+FhPJZQpH9ZN0BzBfbwkLmau/3H418yggnxP6
Q3TTKNJbzxryY39n9hWsZQsbOKs/WjebzXrl7KBQ/6R9NfuoopIa/RzdXPbp
VVFJUey7t6/lAje4yjX96bpzOKV3iXOs0/9o/4XnRIlwU3+B7jKu69VymzL9
JJkS+y714mSXnKNf7/yWEt/jViKx/zkauezv57x3XeGW3TMe8NC8Rl7jAGeo
4g3/AUidl3k=
         "]]},
       RowBox[{"-", "0.2`"}]],
      Annotation[#, -0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0l9MzWEcB+C3tihRm9LWRVasTTOZiNmOi5aYWFM2jJHZsBFNrbKRG01a
NtOFFatNckF1YcbGjZpmzFWmrWxUbMifjfkbJc+5ePZ53/f7eX/n7PxO1v7K
smMxIYQvLJ8dQml8CB9mhfA1MYSt1p/5RM7cEGJlvezWOyV75G9+cdadJnfO
0chr+8U6C80WyQxZ4v6Y81HzMcajezLNP5pXy2uySnbJd7zlpDuPnHVaj1iP
uDssJ52Nup8mF/DG/KhslxWyQ77iJSf0B5xdtk6ljYf2dc6HrWvkBWo9u4Zn
1knmycxjvs4QK61Xkcdq8qPP1F3vexRRyF72UMdfz/pu/kdOM8WA/YwM7v6T
P+zbSNVvlX0+Z2JOCO+ptY7oLbHOZq19XEII8Uzpx8oZeUbnp/kkS1lBLhH9
NJ10EkkhmUb9afMYn58v10WfTYF+jvkyMsgmi/P6cboJFOhtoogN+gXmG8kj
whou6ifpplCit5NtbNbfbb6PLWynlEv66bqZlOsd4QCl0XdnfpqDVFFBe/Q3
0c3luF49dezQbzXvoIEWmumKvivdCA16LTRTrn/fvJ/r3KaHXv1C3WLa9G5w
lUP64+YTPGGEQe7ol+nu4pZeP/eo1E+SaXzTi5NTslj/qfUQh72/agaj/2Fe
cNP/oNOzurlr9pgH9Dnvkr00cYUWnvMfzs+CHQ==
         "]]},
       RowBox[{"-", "0.3`"}]],
      Annotation[#, -0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0ktIlFEYBuATeJkyWxhCNyhByqIW0RCBRUOUZRGZUFELhdKgGRjLLDe1
EiKmTUNE0QUSK7pYSnTRFuXOoZWglHajmVCrTeCiFrbo+RcP7znne/8zzPxT
dbStMT0nhPCBWCyEYkp4UhpCe1kIp+koi4YhZEpCuELcegOT1vtkm3maas+s
nB9C3nnevsB38wJVzmfMz8h7skPel7/4SUo3yRrd1dTw2T1L9JayKKK3WE7K
6Xkh3JFTslsWyNPqjhaOkdJN8t49o/ZjfHXvFxY6n9CfsP7IePR5fOKmfp3c
Sc4zw+Sc/fFMs7NZ+TvaM2X9VBa7q09O2/+VffZbrDvlgOcHeU2l51/Jl7yI
mGf0tsqKuSEs4IL9P98rmMflZjaR0KkxX8syqlnBJf0i3RgJvV1sZ4d+wryO
9dSykcv65boV7NU7RCO79Y+YN7OHAzRwNfrtdZfTpJekhQb9TvPztHKKFLf0
V+mu46TeOc5yUP+a+W26yJKhRz+uW0uXXpYMTfqD5kPc5RmP6dXfplvPdb0H
0X+B4/rfzH+QY5wRnuvv1z1Mv94QA6T1y2UlM3pFclbW67+zHuOE99XOiLNC
9J/hoffb7a5H0fszG+YNb533yF4ucoMso/wHs3Z2qQ==
         "]]},
       RowBox[{"-", "0.4`"}]],
      Annotation[#, -0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwN0UFoznEYB/BnKbN5L0PJVrRWLkYvEu1gqal3szWESBOb2fvKNjtgGZdX
0nvyJiYRmgO2g4k10SwXeuewmgOxWkphp3cXSpHP4dP393ue7//31lbd3ru3
pyQiXlG6JKKEBdaXRhTlBvmPv+QWR/QtjdhkvpEk38x+ynl+UKP3i2oGEhHD
8pRvurmsW3TPymvU6q9jzrlFZnTSVOms8W2lrDBfxkvnCS7qLnc/L/P0658j
aVduXsZd8xtmu5zfO085T8nf3jxmVnQ+KjtoZ9R9lTxh30UnGdKM2TXaNZGi
4K2C2Wx5xCW/+UV+Zrtdv/th5zdyXo7KhrKIrd7ZRoN7vftOktSxhat2Ce9W
0Oy7A+yhUf+Q/RGa2Ecr1/VX6q6mTS9DB636Z+0vcJzTnOS2/lrdWnr1BjjD
fv1B+ztkyZNjSH+zbh1ZvTw52vRf2E/ygKcMM6K/QzfFTb2H3KNTf87+O+/4
yDTP9HfrHuSJ3iTjdOsn5AoW9BbJPzKlX3D+QNrfuY9ps6984pH/x31vPea5
3VsmeG0+JEe4wi3yzPAfDgFkjA==
         "]]},
       RowBox[{"-", "0.5`"}]],
      Annotation[#, -0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0T9IlGEcB/CnEC3PLXA6pTxdlBIFBxssW9w0I3BxssgEUQcdrEEFPW67
KbM/VuegeUP4B2wpB9EUsgMdlJYQLG1IU1rSRT83fPj+3uf5vs9773vX2rrv
dV0IIaTIuRTCWV4If2W5PJQV8pQTErkh9ERCqLR+g+vsWtuT+/yiRO+YKD9d
X5Vl8s/lEFYLQhjWPzAPybizRhimSq9AL8I7ezVyxVrGHDN/k//0juWofE6t
824yY55ljt/uabI2IBvloLwrm/me77mu2/Ue8ZV15/23t2xeMdeb71DHbW4x
br3Yb3gtl9xfZI7Sb465r5QoL3QLZRGtnvWYNhr1+rzzUx7QTQcv9ct0K+jS
e0Iv9/Wf2X+V/U4kSZDSr86+N0N6SRK06n+0v8gEM0yTzr6DbgOjepO84aH+
D/t7fGGLDHP6TbotfNBbZIFO/Yi8wpHeRXkiG/TXzJu0+x49ZKztsM2U7/XW
We+Zz/6ffOKz9ZRME2eMJBucA3kZXJ4=
         "]]},
       RowBox[{"-", "0.6`"}]],
      Annotation[#, -0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0DsohWEYB/D3UO4MBrejOCWlLAxSBpvRYDCwURbFZDG4JoXOJgw4BrcB
uS7OYXEbnBwDm0xmC0UMfoZf/+d9n//3db4T6xvuGoqEEMZpzA0hOy+EH/lL
A/XOlQUhVFFNlNmcEBYKQ5hnjma9Er1iNuxa5J27jLnO/CDv9dJ88sEKbUUh
jOgdm0/+d+Yayj0zJWtljAvztHdUmCfktO4Uk+zbRd1XcWOX5Z3fMiK/5DrL
eod6Y+5GZcr5gkvKPHekkzSfs6OzTY9ePN+3knBusmtlwvfH//8DenXO7FNs
cMAOu/rtuh0s6m2ySr/+i/0b1zyR5lC/U7ebPb0UpwzqF8hS3vUi8kt26N+a
Hxnw+4dJu3vlmS3fs+Zd2xzZXXFO0n1C7jLDEnEy/AHv6EpH
         "]]},
       RowBox[{"-", "0.7`"}]],
      Annotation[#, -0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzzsvBFEYBuBPMLuLxk/wN9jELUqNRGmLTTSK1Qmh1GoVLtEgCndbodvN
CtmEgo6l0Lk0EutWeKZ48p5zvnfmzPQUp8dKLRFRYC+J2O+MOOCbL1ZY5dcs
6Yr4kxn5IWeyEU2zTy4zEVe0mbXTyk/adfZqnci8fh+9zDHLW0fEhOcLDNkP
MkBZ/4IajzpPNHig33zBedW6kibHvNifpPfJeTns3k3rNYr297mIZ6rcUudQ
Z9Td4+zqnVNmSj8nu3nXC9mUI/o16xsmfUeJurMGd2z553Xv2ubIrMIpZ843
5A6LLLPENf+XZz2m
         "]]},
       RowBox[{"-", "0.8`"}]],
      Annotation[#, -0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1721, 1793, 3304, 1713, 1977, 1718, 2079, 1974, 1976, 3311, 
         1975, 1699, 2105, 1698, 2104, 2103, 1778, 2776, 1918, 2766, 1917, 
         2568, 1906, 2559, 2550, 3140, 2757, 2767, 2148, 2157, 3275, 3293, 
         3284, 1700, 2972, 2981, 2224, 2242, 2233, 1722, 2206, 2215, 2179, 
         2197, 2188, 2254}]},
       RowBox[{"-", "0.9`"}]],
      Annotation[#, -0.9, "Tooltip"]& ], {}, {}}, {InsetBox[
      RowBox[{"-", "0.9`"}], 3324], InsetBox[
      RowBox[{"-", "0.8`"}], 3325], InsetBox[
      RowBox[{"-", "0.7`"}], 3326], InsetBox[
      RowBox[{"-", "0.6`"}], 3327], InsetBox[
      RowBox[{"-", "0.5`"}], 3328], InsetBox[
      RowBox[{"-", "0.4`"}], 3329], InsetBox[
      RowBox[{"-", "0.3`"}], 3330], InsetBox[
      RowBox[{"-", "0.2`"}], 3331], InsetBox[
      RowBox[{"-", "0.1`"}], 3332]}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {1, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704867752704619*^9, 
  3.704867807056201*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQV0ldfS9ikR3CW4u0NwSSCBJIQYlgRJIIYEiEFICMFiuLu7uxW3FkqB
CtQptKUtpe2t99729sp359/PnHde9gkQOIeu39btWlAIydnzzMyePbp3YNTE
0XHjoyaOiYmq7ZsSlTR6TMyE2j6JKepLTi9ZLC+NVr/ia1vwZ7JY5Df+bwx+
M/7yjD+X4f+Votu3b1NWVhZNnz6d9u7dS//zP//D3zZy5Ei6f/8+//kJ39OO
f7zYM398//79NGrUKCeKj4+3OFF2djYZ/1na8u9FnvURTvxtTnT37l2aNWsW
/62dHcS/9dZbNGPGDMrIyKBVq1bRr7/++rw//p///IdefvllyszM5B9fvXr1
ox934m/Ht+JvhQwwz2DbS1bml+b/labffvuNJk6cSD/88AN/2uLFi+natWv8
019//TX985//fNr3WNz5M0o812eAkry8PPx7B/6xos/zY5Ynsd7dDtJ/+eUX
mjx5Mv3444/My8OHD9O6devs+gyID1rz+++/82ccOnSI1q5daylICM9gnY0Q
XOnGjRusGPIf/r5ixQqngv/Z/Xl+2plJ3rJlC82fP5++/fbb9s+35saNG2nS
pEnMPABQmwd/fq41Xenq1au0fv1685+/+uorO34aDIag5L8HDx7QlClTnsRv
54I/MR+fT58+Tbt37za/6969e5STk+NU8D+7F/zPVhJcmM9YFhw7duwY/m55
xo86GT8Kjdu0aRP/k6HphnY9k2YYB8hHSZYZc+DAATDiuRZ2pY8//phVW5kU
/mnYiF27dhXE6ad8Yj5Onzlz5rHvUtvfqeB/di/4n10Nsv744w9asmQJsFue
8SPOBu3YAFBKg7vtCv4pIfPcuXPQIl5MrO/PP//8XGu6sBKog4cSExPZCP/7
3/9+os1wLvjj8nH25s2bTJP8d/36dQjcqeB/dn++n37nnXdsdt4nn3wC/XjG
TwuT//GPf7CRvnz5ss7kZ6x569YtWrRokfnPMJtKH5+T4u+++46Sk5Pp+++/
5/VhBJSKuht8vnPnDi+geK0kUuAn5uOzWO6HDx/Sv/71L5o3bx62t1PB/+z+
fD/95Zdf0oQJE/hYAF7s2jVr1jzjp10MUDhc8M+6mXjGgvgSzDn0X+khbd68
GZv9OcmF+U5KSqKffvqJ/xn7QKmJMPn8+fOUm5trw+SnfKLBZKvr58JewbRp
0yg9PV38E4tzAf/W7jl+7rXXXmN/B6svXboUG7bAnxOrAjWw9e4KXgcynDNn
jrmOQvxcP3f27FlKS0vjnwMjlVthmgVocGpqqvGdT/8sg42svnZ43PqfS1uV
X8lsMH6z0X4nsU38N+cnfK3kE75W6r/f93/s+3invvRfQf4//33/FeT/J9/n
sCA9/zd87bmIsx5ARejo0aPUqlUratq0KaWkpLD/YP0pC3ypQsaP4pQ30kDW
g8b7+TlQlF0LNzc3+vzzz3kBHx8f2rp1K3/Thx9+yKeknSvxQuJc79y5k/r1
6yfrIsqh4OBgl6d9ZE/zE55AvJOTE34pgvB7MdqzZw//0LxpkZQQ608P31lH
N0/PoY2Lx1KzRjXopztb6D/f7Fdc/2Y/Fnuwx7qY+hvh9+74zfX52VWS5k+P
pMhBnjQzNYy2zR1GeckBVLdGeZqfFkx5k4fwyqd2Z9J7lxfRD3c2S4Lum/0e
di5VhnavSaYg3/a0Zek42r8kipcL6dWC/v3+Qvr1jdn08akpdHnbeJo6xoeG
h7RnZPvXT6TrJ2fRt+9t4FW72rmqK7OsbJkSlJXQh368nkfd29WjHfMinLGs
4viiyf2obbPqvNibBybQoeUxtDA9hPmyb90E5v53H2zkxTvavbj6fpZjvRoV
qGaVspQU6Ul/vDPfhRd3ol/fnE1VKpbivxXi34vQD6/n0psHJ9KBpdG0QBGy
YMZwOrAxld4+N49+ubuNCXG3kxDWF1o5O44evjLTUtZY6bvXcuj63mTavXA4
zZ4QSMvzYunkrkz6+LVl9M8v9/BKrV5opQrGSv96bwF9eWkGXdo6jjbkDqac
pL60WWkBJCuYmju00uLsKPruWo6lsrHS77fm0QcnJtPBZdGMafWMUHrlcDZv
JLVxeKXGDq00b1oE/XxzlqWahunu6Uw6vjqOlWjOxEBe9cNXl5jca+DQSrMy
htLf3pprqcUrFaa/KDm9tiuJNs8aQrmKczvmR9A7FxfSH1/ssm7Fug4ts2t1
Mh3cmGqpayzz29tz6e1Dqfzxucl9aeeqJFa63+/vtC5Ty85lnHmZW4dTmWol
pfrGShDS7SOTWPHy1EpbZg+lm/sn0G+fGStVdwjQjPF+9MXF6ZbGxjJ/3J5H
7x5Loz2LrMvsWZvCuv0/X++zLlPFoWXWLRhNZ/dOszTjZVyZb9hGa7PCWAlO
755KX91exyu4OcQyxXHKSR9Mf31zTgtjkW+vZtP5TfG0JKM/Lc7oRxcPzlRm
aRMvUsG+RQoZhwfM8YENE3mBVsYyD9QmPbluFM2fFExr5o2iN8/MpX98uZuX
KevYMv/+ai/v9RPbMyxtjGWwdz58eTJtnxdBeSkBdHRVLH3z7npepvTTl3l0
Dls/3BmipCNb0mnFtIHQKnfj82Hnwa15gDEzlN46O8+EUQK/OZsf90yRuLBI
/qlOWpxXUNXfb821dMiHBJtmlkJyfPtkUy7FHBL+N+9u4APon+8u6MKLuMDs
0MUt41i7sCs/vbHSqsBFHFJgrLB86gBLdwODOpDo5r4UWprZn1ZNH8S25d8P
9/IKLg6t8ODWWlo1Y5ClhwEAHNqkrBfU6tUj2fS3T3dYATg59PGfXF+BY8Ti
ZXz8V5dn8nGJTX50azp9/+Em68e/ZPfHK8p4f13dlWjpZXw8TmloE+QLW6KW
s/zH7k/+/M3VfBrhM32MT4YhfHVHAs1NDWLt+uz8NMu/7f7kXz/ZTgtnjoDx
tvgZn/wPJdPX9ySzJm3ICac7JzMs/7T7k3/8aDPThk/2Nz5Z6SW9pfwTWCKc
5fcvTLP8Yfcn31F2GHsJnxmgffINpYfQkp3zI+F2WX63+5N//ngr+0zvHE2z
BBmfjJMAniU8gsOb0/A9lr/Z/cnwQbEF753JtIQYnwzjf87QjRNrRrJm/+oQ
NyB/fGZ/0TrlEeMT8cnQEbUjLT/b/clw23cvjOTPHMi/O9NfruYw77Hf1Vb6
6Ykf6mp8gFH05pp3If7dRa9883/qp8zvh/HYu3gELxVqLPj+8XR2kXYtiATr
fyhwQa2+a37tSciwEHYjlggTOSuth6GEnC8fzqJ/fbXX8l0Bqz1W03QpYEGY
dbhm2EqDDWQ/vJ7HRCzKiqI7V5f+5YlrFeb/Pbmu5/TUBUvQ3deX8/6F/Fo2
qkpN67lR8nBP+se78zlmQsgCx2NCVE8qVOglJyrs6qw+qnUTdlG1reXMjirM
Gj5KmYtvnkhnUYMWvSrG9Lngm6wxc0nm+8a8weRWviR9em4qU9O7SyP2TrHs
e0rYynGhwytiqH2Lmvh3U6chH+wWyAfW6T/KE3sIWgqZy9jI56l1pKezzSqn
If26k2+3xkZQ5YSAj4K8mmuBljObm6j+HcmzfX0cUAOML3/9ahatyw7jXw9f
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
kP+ffN+TBUn4wmDtq/y1MdY/W176XwdxuYs=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"muc0DB", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "7"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.704867485745336*^9, 3.7048675008761177`*^9}, 
   3.704867597451518*^9}],

Cell[BoxData[
 RowBox[{"-", "0.043478260869565216`"}]], "Output",
 CellChangeTimes->{{3.704867490444565*^9, 3.7048675012180347`*^9}, 
   3.7048675980022783`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704867479573784*^9, 3.704867479967554*^9}}],

Cell["When does it vanish? and what is its sign?", "Text",
 CellChangeTimes->{{3.704865625824401*^9, 3.704865634619472*^9}, {
  3.704865673598404*^9, 3.704865677057641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solmDB", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dcb", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7048656790408783`*^9, 3.704865688524707*^9}, {
  3.7048657188788157`*^9, 3.704865719905298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}], "+", 
           RowBox[{"c", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"d", " ", 
               SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
              RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Mu]", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}], "+", 
           RowBox[{"c", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"d", " ", 
               SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
              RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Mu]", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048657048711977`*^9, 3.7048657311804867`*^9}, 
   3.704868549928376*^9, 3.705054616550846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mcDB", "=", 
   RowBox[{"m", "/.", 
    RowBox[{
    "solmDB", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"mcDB", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704868617991662*^9, 3.704868644329208*^9}, {
  3.704869153829677*^9, 3.7048691585263367`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.704869162442628*^9, 3.7050546198895082`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"mcDB", ",", 
   RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"%", ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", "FullSimplify"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"mcDB", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.705054627133232*^9, 3.7050546649391108`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "-", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}], " ", "n", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Mu]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "n"}], "-", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}], ")"}]}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "c"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   "\[Mu]"}]]], "Output",
 CellChangeTimes->{{3.7050546247205763`*^9, 3.705054665574242*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"b", "-", "c", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "c"}], ")"}], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{"b", "-", 
        RowBox[{"c", " ", "n"}]}], ")"}]}]]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.7050546247205763`*^9, 3.705054665642083*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7050546247205763`*^9, 3.705054665645061*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7050546247205763`*^9, 3.7050546656477833`*^9}}]
}, Open  ]],

Cell["Find the admissible solution", "Text",
 CellChangeTimes->{{3.704865728333063*^9, 3.704865737261786*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prms", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "3"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solmDB", "/.", "prms"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"combined", "/.", "prms"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prms", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "4.3"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solmDB", "/.", "prms"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"combined", "/.", "prms"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prms", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "5"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solmDB", "/.", "prms"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"combined", "/.", "prms"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7048657457818832`*^9, 3.704865834577841*^9}, {
   3.7048660197920647`*^9, 3.7048660603075314`*^9}, {3.704866151321759*^9, 
   3.704866151550867*^9}, {3.704866227820838*^9, 3.704866263675219*^9}, {
   3.704866424034274*^9, 3.704866437371395*^9}, 3.704868597962164*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.15879851143009036`"}], "+", 
      RowBox[{"0.3322712089294644`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.15879851143009036`"}], "-", 
      RowBox[{"0.3322712089294644`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.704868598185781*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVy3k41AkYwHFXZVOuVEboUdSiKEVF9dYqpJSr2kqSo6SWSEq1j2Yj91Hr
LETESgxjyP2KSc4cM8y4xvyGNM6fWsdise0f3+fz11fN0cPaRUxERMTmR/9r
7iJsqxo+e7irLGd5+GkOShgr3e6n7IWOo7JxCo05uOdVfGIB5RjEXJwIlpTJ
xZPNHHoSxRb0hOwai9hcPO88W/Gc4gztH9bonXtNwz7dQONwijdUVDZrWnHz
MGX9machFH/QMEqNlGfTkSpZsD2YEg13VZhyEUFFqGX6LIh+OxpObGccPJpZ
hO0BHsM9n6LhXVVgTd/HIlQX35Gt4xMDfvGPXVhi77F2MV2H3R4LKpoyXoyH
73HN37H6m8MSIMMmPdP1RjHG9z0wLlxKBpP7K7+76JfirxdSaZPf0iF2BV3G
O6YCpZapdqaqNEhUjdFfTPqAGlYTwppQBpiu11UMlGHivc8HIH6qBNxyEmMs
3GtxI0OOJyqK4HPJLbLYow6LBMZNLQergTfZQXNxb8Bqt6RNF8aYIMUe33D9
cBNObzskk/PbJ/ieoN8yxGpGsbls2U0aDUC/6/2Q79WCBssORTa5TcDbpBR1
2bMVm/z3fq7VagEdRlbNgEobbo4ancuaaAXOlDH1RVsbjs728zp2tcPqji2H
DO+0Y/pIWYN0BAu6UhSe5CuzUFolkxwcZEOKkt0HkUoWht0ovJai3gnz5474
PLBk48yR7EFXPw58VPzTNnCUjd56TMaGGi5MkWN0Gd8O7M9lhrapdYOJ/tJD
W5lOXHBjv9R80APljHCqbEonah9dtXStrBfqtmX0cNQ5aPpa7Xr+Rh6kZZ+j
xtM5eE/lyhbCrh/47ppfZPW5uGPsrBTHgg//GGbYXing4jqZSUnmPB+0skwD
qg27UAJf0rYmEmCZszuY/r4Lb+4t6/rppABkbc2cGIe6MfuEY0rljACyz9xg
zmA3To8qyQ7FDoDOgs280/4eLLQxFY8+NggOX+f8hkt60M8s4BVjaBCyCs0u
Cnb3olqfOTct4At0V6u65Wb0ouE+/2iK3hB4zlCinqv3oZ1qy5woawgMpNc2
mif04XRDuOA29Suo7Vkold/Iw3gJe29rdSH0IG+oL5SH63iFr8WYQnBr8PBp
XOThit+ptgc8hwHaQt4x7/ejSJY9TSA/Ai/sj6uJjfaj1wtauHz1CLSvo6ao
7eFjhXaQpJz7KMhJ9oU6ePBRztxrxx/SY6DXeFzWLpOPvTtbWb7lYxAsqlzR
OcDHvGRQH7QfB8uIrfVKygRephnIqSyNw4VT2mMbbAh8HJBK7X07AVzFaKfI
CAJzhCovpU+R0Drp+mrgI4FBSQEOvNMkPIv3s+2uJdDZelwj14oEx7jYlW2f
CFQuL8+zOE+C5dW6q5X1BIZEXqoNcyRBIez0VHwzga4GCd9W+5KgW+wXYtFB
4BZ/BbNVGSQItA8/ZgwSuLT/0VrOXySMqDM6334hsGt8oD0jm4RqkyNaqUME
Rp0vuGyS/+PPT6oLFxK4rGV9J6CchNhGP8G1MQJ72yKTxVkklFfdDVWcIrD4
6awTq4OEUqnkAulpAqONrmimcUnYRvnKlZgh8OQbHcYvPBLeKPGUvs0SWHq/
uZ46TEKipNej+gUCY3fqR1qNkfC5mB6O/xLoKUi0VSNJmHOmJBYuEvjzqVv9
VVMkGJpfyktdJlBClJ0eNUuCTcu+ojgRAfILjdwc5km4KTxYEi4qwHK3NN1d
iySsMLpZ8kRMgHGbpaaXl0nwulVT5CsuwP8A+I/YhA==
       "]]},
     Annotation[#, "Charting`Private`Tag$1393542#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.5629242486569537, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.704868598241331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.08236212601148839`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.2352348968486923`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.7048685982444696`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVy3k4FHgYwHEiR7m1eUaOVUSljUJRem2ylGsd5VjicVXUFmsXtZ7MrumS
Y61EKVexUg3TsJXRW0iO3COEMX4mDYaf2uShXXb3j+/z+etrEHLKM3yFlJSU
63/978FwcdeziUN79e3F7oc/VaKsvfbpEYYFiCeDokKXKnFHfk7eQ8Z+SHVJ
n4iR46BzWx/nJsMbSi4rSuWu5aBP2HxtJiMMchRzLaR3cnB42wX7VEYsOLt5
tO6N52DBF+7nLzOSYbe3ZbTv3xxkKjw0vsTIgh1MQ8WIVVz09Stkz76/DfV5
fEvx8WpcvcwMcNRjwx4zEihd/QiNPGbE9SlcEG7MGjZeWYNx7daQ8/ExjDUY
WX3IrEUtrrpAWhohWi3/5OElxGpi/6pjTx2EXU/SafZ8jnWRN9f5SRpAaXn2
bHxxHc5ttFW9f/IlfPBvqp8YqccVC+Vq64xaICbP57Gl9Qu0Wg6u9nrwCrzW
5Wk5JDbiq2SL9sbNHZBhEpXwLe8l6mdMLZTNdAKw6GyTVjNOzY8Ies26IcOp
0FYtsAVvT9a0qKT1gJ2M5k+lT1tRRbeUikR88DZdk16m3YZXjldFFBi+hsgq
ERUHteMnu3LRsXN9oM27Eu/zvANjtzdw19b3g/jsPSsRqxNHHjSkdBm8gXKf
zrtm1l34OZJ/Y9OZQXh22OND3EQXbvlafimiZgjEoyfP66Z1o2ORwdFKLQEk
K/xY32XXg3G6QetHA0agxNEAet/1oKnk0Oo+VyEEeCVIuCl81FSdVWhYFEJa
BB0qsO1FWbzB3pA3Cm0bFk43j/VilEXNgKIzgWwZ/0tL115j+YGQgqefCMhU
m1+QO9CHc1PaauPZYxBlwg6wnenDKi9Hmaz9IjDXbTJKKuzHc06sfO64CHy3
0egppwE0GD7YX8x6C5Yez/k60wNoszM5i7F9HCbNrcz8899ggF7HgnTPOKif
kM/702EQ51pSyWnmOxjLaqkxWBzEHNkjsZ6GYjA5PtFWWjSEmoKqohUNYsjK
fKE07TiMKxOZ3tbRExCiY+cPn4dRquwIm2hMQqL7uKS0SIAx19mpGnWTUGNz
3U7PdwRrt1xUUP9+CkRHnZ+YrBSi+sEY019UJNBdpWrs7CvEoa2dPQk8CRgn
mVbEcoRYcQsMRUemodWNNXNHbhQD2VbqukvTYMRvD9zhN4pJrELm0N0ZuJRb
ZtLEGcX7Yt0bKi4UxPvTlEPlCF68yQoWuFE482VKeL88wTDPaaMHHhTKZVpr
XRUJ6vB4Fa4+FLqKNE/tUiJ4Of27xishFH7PbOQraxA8ZpX7flUCBf6TO/ce
6RJcn7zGSb6EgrGtIFXFkuDSrp+V+/6gwPPUm/nViuDA9Fh3STkFi4v5bgs7
CWb4PAz8ppKCsla4msiG4PJmzx9YvP/+DZ+zH9sRHOpKvyXTQ6FtwaEizIXg
o/PzoT29FBLX/rbmjSvBrN1Bm4r7KehH6CS4uxN0vvMVd5+AwtXQv/bZeBJ8
Et/WzJygsGBbOKDqSzB7q2W6h4RCta8EWH4Eo0metwGlkGMeV7LoT9DE5cTI
s48U6sacY98GEpSV5t/OmKegVHB10D+IoLBqd2TwIgWmUM++M5ggL7J4m9k/
FNjZ7+46hBC8pr96bnmZggmXatSEEvwX4pST4A==
       "]]},
     Annotation[#, "Charting`Private`Tag$1393580#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.704868598305636*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0.033918128654970715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.35151515151515145`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.7048685983090963`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HhJJ4f8DtjiFZw==
       "]]},
     Annotation[#, "Charting`Private`Tag$1393619#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048657602966433`*^9, 3.704865835102276*^9}, {
   3.704866029395296*^9, 3.70486606048808*^9}, 3.7048661521027117`*^9, {
   3.704866228498188*^9, 3.704866264041091*^9}, {3.7048664256313133`*^9, 
   3.70486643768006*^9}, 3.704868553420876*^9, 3.704868598360434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mcDB", "/.", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"c", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704868663008719*^9, 3.704868675211419*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "-", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["c", "2"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "+", "d", "-", 
             RowBox[{"2", " ", "n"}]}], ")"}], " ", "n"}]}], ")"}], " ", 
        "\[Mu]"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"d", " ", "n"}]}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "2"]}], "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], "2"], " ", "n", " ", 
        SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]]}], 
  RowBox[{"c", " ", "d", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.704868664089176*^9, 3.7048686786524563`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"dcb", ",", "m"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704866274067004*^9, 3.704866290911223*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}]}], "+", 
     RowBox[{"c", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
        RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                  "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.7048662880224533`*^9, 3.704866292241722*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqrtm", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "n"}], ")"}]}], "+", 
      RowBox[{"c", " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
         RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Mu]", "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                   "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704866114520481*^9, 3.704866116663661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"sqrtm", "\[Equal]", "0"}], ",", "b"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", "prms"}]}], "Input",
 CellChangeTimes->{{3.7048661183829*^9, 3.704866128338039*^9}, {
  3.704866218309959*^9, 3.704866219972259*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", "\[Rule]", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
          RowBox[{"n", " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                  "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7048661255081377`*^9, 3.704866128938353*^9}, 
   3.704866220406725*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[Rule]", "4.1956034904373345`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7048661255081377`*^9, 3.704866128938353*^9}, 
   3.704866220409054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solmuDB", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dcb", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70486304367234*^9, 3.70486304412615*^9}, {
   3.704863075518086*^9, 3.7048631016097393`*^9}, 3.7048633127324743`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "b"}], "+", "c", "+", 
        RowBox[{"2", " ", "b", " ", "d"}], "-", 
        RowBox[{"2", " ", "c", " ", "d"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"]}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"]}], "-", 
        RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
        RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["d", "2"], " ", "m"}], "-", 
        RowBox[{"2", " ", "c", " ", 
         SuperscriptBox["d", "2"], " ", "m"}], "-", 
        RowBox[{"b", " ", "d", " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", "d", " ", 
         SuperscriptBox["m", "2"]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", "n"}], "-", 
        RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", "n"}], "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", "n"}], "-", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", "n"}], "-", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "b"}], " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"c", " ", "d", " ", 
               SuperscriptBox["m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", "c", "+", 
              RowBox[{"2", " ", "b", " ", "d"}], "-", 
              RowBox[{"2", " ", "c", " ", "d"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"]}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"]}], "-", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "-", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", "b", " ", "n"}], "-", 
              RowBox[{"c", " ", "n"}], "-", 
              RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "+", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"b", "-", "c", "-", 
              RowBox[{"2", " ", "b", " ", "d"}], "+", 
              RowBox[{"2", " ", "c", " ", "d"}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"]}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"]}], "+", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "-", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "-", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "+", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "+", 
              RowBox[{"b", " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}]}], ")"}], "2"]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "c", "+", 
          RowBox[{"2", " ", "b", " ", "d"}], "-", 
          RowBox[{"2", " ", "c", " ", "d"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"]}], "-", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"2", " ", "b", " ", "n"}], "-", 
          RowBox[{"c", " ", "n"}], "-", 
          RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "b"}], "+", "c", "+", 
        RowBox[{"2", " ", "b", " ", "d"}], "-", 
        RowBox[{"2", " ", "c", " ", "d"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"]}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"]}], "-", 
        RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
        RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["d", "2"], " ", "m"}], "-", 
        RowBox[{"2", " ", "c", " ", 
         SuperscriptBox["d", "2"], " ", "m"}], "-", 
        RowBox[{"b", " ", "d", " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", "d", " ", 
         SuperscriptBox["m", "2"]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{"c", " ", "n"}], "-", 
        RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", "n"}], "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", "n"}], "-", 
        RowBox[{"c", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", "n"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "b"}], " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"c", " ", "d", " ", 
               SuperscriptBox["m", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", "c", "+", 
              RowBox[{"2", " ", "b", " ", "d"}], "-", 
              RowBox[{"2", " ", "c", " ", "d"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"]}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"]}], "-", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "-", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", "b", " ", "n"}], "-", 
              RowBox[{"c", " ", "n"}], "-", 
              RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "+", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"b", "-", "c", "-", 
              RowBox[{"2", " ", "b", " ", "d"}], "+", 
              RowBox[{"2", " ", "c", " ", "d"}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"]}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"]}], "+", 
              RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "-", 
              RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "-", 
              RowBox[{"2", " ", "b", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "+", 
              RowBox[{"2", " ", "c", " ", 
               SuperscriptBox["d", "2"], " ", "m"}], "+", 
              RowBox[{"b", " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", "d", " ", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"]}], "-", 
              RowBox[{"c", " ", "n"}], "+", 
              RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "-", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", "n"}], "-", 
              RowBox[{"b", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}], "+", 
              RowBox[{"c", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["m", "2"], " ", "n"}]}], ")"}], "2"]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "c", "+", 
          RowBox[{"2", " ", "b", " ", "d"}], "-", 
          RowBox[{"2", " ", "c", " ", "d"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"]}], "-", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"2", " ", "b", " ", "n"}], "-", 
          RowBox[{"c", " ", "n"}], "-", 
          RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704863073152227*^9, 3.704863086936699*^9}, {
  3.704863308518814*^9, 3.704863323039667*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solmuDB", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"b", "\[Rule]", "4"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"m", "\[Rule]", "0.1"}], ",", 
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704863373390438*^9, 3.7048633900977573`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", "0.0006184780370668651`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0.07447211160922652`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704863384656908*^9, 3.704863390409855*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mucDB", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b"}], "+", "c", "+", 
     RowBox[{"2", " ", "b", " ", "d"}], "-", 
     RowBox[{"2", " ", "c", " ", "d"}], "-", 
     RowBox[{"b", " ", 
      SuperscriptBox["d", "2"]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["d", "2"]}], "-", 
     RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
     RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
     RowBox[{"2", " ", "b", " ", 
      SuperscriptBox["d", "2"], " ", "m"}], "-", 
     RowBox[{"2", " ", "c", " ", 
      SuperscriptBox["d", "2"], " ", "m"}], "-", 
     RowBox[{"b", " ", "d", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"c", " ", "d", " ", 
      SuperscriptBox["m", "2"]}], "-", 
     RowBox[{"b", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"c", " ", "n"}], "-", 
     RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["d", "2"], " ", "n"}], "+", 
     RowBox[{"b", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["m", "2"], " ", "n"}], "-", 
     RowBox[{"c", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["m", "2"], " ", "n"}], "+", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], " ", "d", " ", 
            SuperscriptBox["m", "2"]}], "+", 
           RowBox[{"c", " ", "d", " ", 
            SuperscriptBox["m", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "b"}], "+", "c", "+", 
           RowBox[{"2", " ", "b", " ", "d"}], "-", 
           RowBox[{"2", " ", "c", " ", "d"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"]}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"]}], "-", 
           RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
           RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", "m"}], "-", 
           RowBox[{"2", " ", "c", " ", 
            SuperscriptBox["d", "2"], " ", "m"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"]}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"]}], "+", 
           RowBox[{"2", " ", "b", " ", "n"}], "-", 
           RowBox[{"c", " ", "n"}], "-", 
           RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
           RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", "n"}], "-", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", "n"}], "+", 
           RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
           RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
           RowBox[{"2", " ", "c", " ", 
            SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", "n"}], "-", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"b", "-", "c", "-", 
           RowBox[{"2", " ", "b", " ", "d"}], "+", 
           RowBox[{"2", " ", "c", " ", "d"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"]}], "-", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"]}], "+", 
           RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "-", 
           RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "-", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["d", "2"], " ", "m"}], "+", 
           RowBox[{"2", " ", "c", " ", 
            SuperscriptBox["d", "2"], " ", "m"}], "+", 
           RowBox[{"b", " ", "d", " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"c", " ", "d", " ", 
            SuperscriptBox["m", "2"]}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"]}], "-", 
           RowBox[{"c", " ", "n"}], "+", 
           RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "-", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", "n"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", "n"}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", "n"}]}], ")"}], "2"]}], ")"}]}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "b"}], "+", "c", "+", 
       RowBox[{"2", " ", "b", " ", "d"}], "-", 
       RowBox[{"2", " ", "c", " ", "d"}], "-", 
       RowBox[{"b", " ", 
        SuperscriptBox["d", "2"]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox["d", "2"]}], "-", 
       RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
       RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["d", "2"], " ", "m"}], "-", 
       RowBox[{"2", " ", "c", " ", 
        SuperscriptBox["d", "2"], " ", "m"}], "-", 
       RowBox[{"b", " ", 
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"2", " ", "b", " ", "n"}], "-", 
       RowBox[{"c", " ", "n"}], "-", 
       RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
       RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["d", "2"], " ", "n"}], "-", 
       RowBox[{"c", " ", 
        SuperscriptBox["d", "2"], " ", "n"}], "+", 
       RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
       RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
       RowBox[{"2", " ", "c", " ", 
        SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["m", "2"], " ", "n"}], "-", 
       RowBox[{"c", " ", 
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.704863463078857*^9, 3.704863471217979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "b"}], "+", "c", "+", 
    RowBox[{"2", " ", "b", " ", "d"}], "-", 
    RowBox[{"2", " ", "c", " ", "d"}], "-", 
    RowBox[{"b", " ", 
     SuperscriptBox["d", "2"]}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["d", "2"]}], "-", 
    RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
    RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
    RowBox[{"2", " ", "b", " ", 
     SuperscriptBox["d", "2"], " ", "m"}], "-", 
    RowBox[{"2", " ", "c", " ", 
     SuperscriptBox["d", "2"], " ", "m"}], "-", 
    RowBox[{"b", " ", "d", " ", 
     SuperscriptBox["m", "2"]}], "+", 
    RowBox[{"c", " ", "d", " ", 
     SuperscriptBox["m", "2"]}], "-", 
    RowBox[{"b", " ", 
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["m", "2"]}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["m", "2"]}], "+", 
    RowBox[{"c", " ", "n"}], "-", 
    RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["d", "2"], " ", "n"}], "+", 
    RowBox[{"b", " ", 
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["m", "2"], " ", "n"}], "-", 
    RowBox[{"c", " ", 
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["m", "2"], " ", "n"}], "+", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", "d", " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"c", " ", "d", " ", 
           SuperscriptBox["m", "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "b"}], "+", "c", "+", 
          RowBox[{"2", " ", "b", " ", "d"}], "-", 
          RowBox[{"2", " ", "c", " ", "d"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"]}], "-", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"2", " ", "b", " ", "n"}], "-", 
          RowBox[{"c", " ", "n"}], "-", 
          RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "+", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"b", "-", "c", "-", 
          RowBox[{"2", " ", "b", " ", "d"}], "+", 
          RowBox[{"2", " ", "c", " ", "d"}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"]}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"]}], "+", 
          RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "-", 
          RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "-", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "+", 
          RowBox[{"2", " ", "c", " ", 
           SuperscriptBox["d", "2"], " ", "m"}], "+", 
          RowBox[{"b", " ", "d", " ", 
           SuperscriptBox["m", "2"]}], "-", 
          RowBox[{"c", " ", "d", " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"]}], "-", 
          RowBox[{"c", " ", "n"}], "+", 
          RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "-", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", "n"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}], "+", 
          RowBox[{"c", " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", "n"}]}], ")"}], "2"]}], ")"}]}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "c", "+", 
      RowBox[{"2", " ", "b", " ", "d"}], "-", 
      RowBox[{"2", " ", "c", " ", "d"}], "-", 
      RowBox[{"b", " ", 
       SuperscriptBox["d", "2"]}], "+", 
      RowBox[{"c", " ", 
       SuperscriptBox["d", "2"]}], "-", 
      RowBox[{"2", " ", "b", " ", "d", " ", "m"}], "+", 
      RowBox[{"2", " ", "c", " ", "d", " ", "m"}], "+", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["d", "2"], " ", "m"}], "-", 
      RowBox[{"2", " ", "c", " ", 
       SuperscriptBox["d", "2"], " ", "m"}], "-", 
      RowBox[{"b", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{"c", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{"2", " ", "b", " ", "n"}], "-", 
      RowBox[{"c", " ", "n"}], "-", 
      RowBox[{"4", " ", "b", " ", "d", " ", "n"}], "+", 
      RowBox[{"2", " ", "c", " ", "d", " ", "n"}], "+", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["d", "2"], " ", "n"}], "-", 
      RowBox[{"c", " ", 
       SuperscriptBox["d", "2"], " ", "n"}], "+", 
      RowBox[{"2", " ", "b", " ", "d", " ", "m", " ", "n"}], "-", 
      RowBox[{"2", " ", "c", " ", "d", " ", "m", " ", "n"}], "-", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
      RowBox[{"2", " ", "c", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n"}], "+", 
      RowBox[{"b", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n"}], "-", 
      RowBox[{"c", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.704863467287973*^9, 3.704863471895308*^9}}]
}, Open  ]],

Cell[BoxData["mucDB"], "Input",
 CellChangeTimes->{{3.7048634746868963`*^9, 3.704863475975636*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dcb", "\[Equal]", "0"}], ",", "b"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704862769699608*^9, 3.704862786954298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "n", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "m"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "n"}], ")"}]}], "-", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"m", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", "n"}], 
                ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", 
       SuperscriptBox["m", "2"]}], "+", "\[Mu]", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "m"}], ")"}]}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"m", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m", "-", 
               RowBox[{"m", " ", "n"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["d", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], 
              ")"}]}]}], ")"}], " ", "n"}]}], ")"}], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7048627851358757`*^9, 3.704862788538672*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dcb", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704859511862611*^9, 3.704859538923152*^9}, {
  3.704859576229148*^9, 3.704859576694881*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}], "+", 
           RowBox[{"c", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"d", " ", 
               SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
              RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Mu]", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"b", "-", "c"}], ")"}]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}], "+", 
           RowBox[{"c", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"d", " ", 
               SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
              RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Mu]", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704859528007326*^9, 3.704859534846784*^9}, {
  3.704859567108342*^9, 3.70485957781989*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"b", "\[Rule]", "10"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"d", "\[Rule]", "30"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7048595785819073`*^9, 3.704859600073277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0.45100815972242325`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "1.672060791301371`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704859590726598*^9, 3.704859600701766*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mcDB", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "c"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "n"}], ")"}]}], "+", 
          RowBox[{"c", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"d", " ", 
              SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
             RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"b", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", "\[Mu]", "+", 
                RowBox[{"n", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]], 
    "//", "FullSimplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704859633211409*^9, 3.704859635650446*^9}, {
  3.704862634933125*^9, 3.70486263720531*^9}}],

Cell[CellGroupData[{

Cell[BoxData["mcDB"], "Input",
 CellChangeTimes->{{3.704862648809698*^9, 3.70486264987947*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "b"}], "+", "c"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}]}], "+", 
       RowBox[{"c", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
          RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Mu]", "+", 
             RowBox[{"n", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "c"}], ")"}], " ", "d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{3.704862650193706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"mcDB", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704862655772498*^9, 3.704862662767064*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.704862663233281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"mcDB", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7048615047166777`*^9, 3.7048615235887012`*^9}, {
  3.7048635475995007`*^9, 3.704863548874786*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.704861521338914*^9, 3.704861611003311*^9, 
  3.704865696945405*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"dcb", ",", 
    RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"%", "\[Equal]", "0"}], ",", "b"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704861439925565*^9, 3.704861448634903*^9}, {
  3.704861630245942*^9, 3.704861643218329*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
        RowBox[{"2", " ", "n", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
   "2"]]], "Output",
 CellChangeTimes->{{3.704861445555463*^9, 3.704861449101761*^9}, {
  3.7048616383077507`*^9, 3.704861643562406*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704861445555463*^9, 3.704861449101761*^9}, {
  3.7048616383077507`*^9, 3.704861643578586*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bc", "=", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}]]}], 
  StyleBox[";",
   FontWeight->"Plain"]}]], "Input",
 CellChangeTimes->{{3.704861860725024*^9, 3.704861862921473*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"bc", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7048625801051598`*^9, 3.704862583702634*^9}}],

Cell[BoxData[
 RowBox[{"c", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.7048625842163057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mcDB", "/.", 
   RowBox[{"b", "->", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}]]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704861651046908*^9, 3.70486166791544*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["c", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], " ", 
       SuperscriptBox["\[Mu]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
         RowBox[{"2", " ", "n", " ", "\[Mu]"}]}], ")"}], "2"]]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
      RowBox[{"2", " ", "n", " ", "\[Mu]"}]}], ")"}]}]}], 
  RowBox[{"c", " ", "d", " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.704861657065398*^9, 3.704861673401305*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddcb", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"dcb", ",", "m"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7048616938797197`*^9, 3.704861715521266*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}]}], "+", 
     RowBox[{"c", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox["n", "2"]}], "+", "\[Mu]", "-", 
        RowBox[{"n", " ", "\[Mu]"}]}], ")"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                  "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.70486169778041*^9, 3.7048617160486727`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ddcb", "\[Equal]", "0"}], ",", "b"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704861717258237*^9, 3.70486172856668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"n", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]", "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                 "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.70486172606885*^9, 3.704861729054203*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bcc", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"n", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
        RowBox[{"n", " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "\[Mu]", "+", 
         RowBox[{"n", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}],
               ")"}]}]}], ")"}]}]}], ")"}]}]}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70486175839697*^9, 3.7048617601567287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"mcDB", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704859654291629*^9, 3.704859664545835*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.70485966847033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"mcDB", "\[Equal]", "0"}], ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.704859676192781*^9, 3.704859682105991*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7048597147555304`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bc", ",", "bcc"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"d", "\[Rule]", "1000"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704861771866126*^9, 3.704861776787264*^9}, {
  3.704861867074747*^9, 3.704861869321609*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.968222442899703`", ",", "4.174567856220529`"}], "}"}]], "Output",\

 CellChangeTimes->{3.704861777337428*^9, 3.704861869803206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc", "-", "bcc"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704861871617577*^9, 3.704861900029056*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"c", " ", "d", " ", "n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    "2"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Mu]", "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.704861872932774*^9, 3.7048619004840612`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704861872932774*^9, 3.704861900520413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dcb", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "4.2"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"d", "\[Rule]", "1000"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7048597213146048`*^9, 3.704859783904778*^9}, {
  3.704861315002249*^9, 3.704861374493009*^9}, {3.704861423385467*^9, 
  3.704861435750722*^9}, {3.704861781441781*^9, 3.704861784991654*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$289433#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704859735394786*^9, 3.704859784338169*^9}, {
  3.704861315843549*^9, 3.704861375116784*^9}, {3.704861423739008*^9, 
  3.7048614361610622`*^9}, {3.704861782652254*^9, 3.704861785402019*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"combined", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "7"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.000001"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"d", "\[Rule]", "1000"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704862280674306*^9, 3.704862342926003*^9}, {
  3.704862610606309*^9, 3.7048626143475533`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$308205#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{938., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704862282549138*^9, 3.7048623434602337`*^9}, {
  3.704862611143079*^9, 3.704862614828149*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"exdb", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"EXDB", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Idself", "\[Rule]", "1"}], ",", 
     RowBox[{"Ieself", "\[Rule]", "0"}], ",", 
     RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.705054960257365*^9, 3.705055036437071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"exdb", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "\[Rule]", "15"}], ",", 
       RowBox[{"c", "\[Rule]", "1"}], ",", 
       RowBox[{"n", "\[Rule]", "4"}], ",", 
       RowBox[{"d", "\[Rule]", "30000000000"}], ",", 
       RowBox[{"\[Delta]", "\[Rule]", "0.005"}], ",", 
       RowBox[{"p", "\[Rule]", "0.45"}], ",", 
       RowBox[{"\[Mu]", "\[Rule]", "0.0000001"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.705054960257365*^9, 3.705055120798046*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Oja3YWmbVv9cWuJBs/lLBcr2Nux/ZA6Daw==
       "]]},
     Annotation[#, "Charting`Private`Tag$274715#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-12373.516654644973`, 11496.675905187785`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.705054961824959*^9, 3.705055121162385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"combined", "\[Equal]", "0"}], ",", "b"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"bcpos", "=", 
  RowBox[{"b", "/.", 
   RowBox[{
   "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.70486192808606*^9, 3.7048619891455584`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"b", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d", "-", 
         RowBox[{"d", " ", "m"}]}], ")"}], " ", "\[Mu]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704861980258401*^9, 3.704861989468048*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"c", " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d", "-", 
      RowBox[{"d", " ", "m"}]}], ")"}], " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.704861980258401*^9, 3.704861989471389*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcpos", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"d", "\[Rule]", "1000"}], ",", 
    RowBox[{"m", "\[Rule]", "0.01"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704862222070471*^9, 3.7048622443299522`*^9}}],

Cell[BoxData["5.943875829490496`"], "Output",
 CellChangeTimes->{{3.704862227921214*^9, 3.7048622448268003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dbb", "=", 
  RowBox[{
   RowBox[{"bc", "-", "bcpos"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "0"}], ",", "d"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704861990571619*^9, 3.704862016479104*^9}, {
  3.704862062197825*^9, 3.704862063147235*^9}}],

Cell[BoxData[
 RowBox[{"c", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n", "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
      "n"}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d", "-", 
         RowBox[{"d", " ", "m"}]}], ")"}], " ", "\[Mu]"}]}]], "+", 
    FractionBox[
     RowBox[{"1", "+", "n", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.704861992835924*^9, 3.704862016852975*^9}, 
   3.704862063611363*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "m"}], "+", "\[Mu]", "+", 
         RowBox[{"m", " ", "\[Mu]"}], "-", 
         SuperscriptBox["\[Mu]", "2"], "+", 
         RowBox[{"n", " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["m", "2"]}], "-", 
       RowBox[{"2", " ", "\[Mu]"}], "+", 
       RowBox[{"2", " ", "m", " ", "\[Mu]"}], "+", 
       RowBox[{
        SuperscriptBox["m", "2"], " ", "\[Mu]"}], "-", 
       RowBox[{"2", " ", "m", " ", "n", " ", "\[Mu]"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Mu]", "2"]}], "-", 
       RowBox[{"2", " ", "m", " ", 
        SuperscriptBox["\[Mu]", "2"]}], "-", 
       RowBox[{"2", " ", "n", " ", 
        SuperscriptBox["\[Mu]", "2"]}], "+", 
       RowBox[{"2", " ", "m", " ", "n", " ", 
        SuperscriptBox["\[Mu]", "2"]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.704861992835924*^9, 3.704862016852975*^9}, 
   3.704862063614909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"dbb", ",", 
    RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704862158590241*^9, 3.704862167490786*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "c", " ", "n", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "n"}]}], ")"}], " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.7048621647672987`*^9, 3.7048621678568993`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"dbb", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"ContourLabels", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704862064651376*^9, 3.704862098201436*^9}, {
  3.704862154971422*^9, 3.7048621554141407`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
z19W1yek0AV7K/VDXQbZWPm8WDQphaKP3Fp1q0wm9VsyQ73DK426X9nctnFh
H2rTtXP3Rw+9aezIsDP/zgmhidMnBzp0DKbKa2Yknbijo2ZDfaoE2QXT+8mp
eWPPR9C4jjSxx54IGt+k07q47rHU9Uf5aoNLxVKLpdc/dfqWSP8O8k3ZvCqR
ylT0/7mivppUkYuL1HqaSLtKm71pXSeLem7I2XHhu4rCfpx3r3lER1/6tU6f
V09Nl5/MbP7BgL0LfhjRw/C7wiGZzuNdUqmPe1e7bgZ9dU3ZQXs6GHCIbbzr
FAPevHtts/47dORb9fyqmJupVNNpUPLeATqyXvnb6WxBg3ys87zxvZd6Rt+z
r82Y09ONY72+4mozRz3TNypcaDhhyV2OG5e+0rvvLT2To21Xlh607j7H432T
YwdM09H+AS0P928WQV+G1VzqOFJHNrTx2I6KkTQuIS+oSqbx/czNjjqdPWzQ
X1zG1hhv94x/fwp0M6b7e+ez99TU7J9/Frm58POh1SuXHH3HjcdHNt28IWvH
B+PvV/f/XXiU6pmG8b0S4U6d75XVUMbGMZryh/WSvZJCnW3rpQ520tKCqof3
vhzA71nG77eal+j9ez+/R3/Yo5zRKw+mUM3lXyJXNuTnocG37i+anHVxSypd
fpc8ftVAfn8N+F3V8LPfYo8Y5NsNlzu1v+uZn2BIzTirmb84jnmwMDRoO7+f
2iR38z23DnqKzPJZ7TrpNp06lpa2v5Se9pYslxNIr2lJm6OmPUroaf7uYZ/G
LnWlYzad9DZJOlrfekVsm1K+lOfsH/u0pZ6q2i0aeuBaJNUvN2fiz9Z6epjc
aUTRy5HU58+L9LQ/n9/1zccH8/Gt0Cftq/dIozGtBgSkuKtpZPXsoDxbPc0e
nZexcaKairtNGNvZXE+urSxMHXK1NONmytKbP3SUYmCJmY1TqM+t8MFT+uup
R5EWvnNsT9LLtGtZw0bn0IekkF1f6x+lyts1bwoOzqGhlwpf37fBkXzO+X9Z
XM9Q31PT9t38nclhnY9qTd8cWlDmTbMCzs40/oFzsfB+ObS72HLTbx+dafbL
FpFPLHPo4XnrD3frutJ29dDu4b1y6Fx6zZGrvV7T0EqTi8R1y6FK5eJ0taZ6
UnXTNyP0XXLo693NrRoFe5Lbgvn92rTNoe3bHDfO3uFHvyabH2zcPocKrBjV
/mKIL53aZbtnY7Mc2jv7fP9u3YPIe3Zsi/aNcuhE0urCF3q/oZOnJ2/8UTaH
0i7a3Zv3PYzmurXzySmWQxabzlrXywunYVuauK0/o6FIv4Wz33xRU9WxVe9s
LJ9KLXuanq9olkKWjj2CnYfo6cVY9zaDHmno0wzbs2aWeprXvUvx3E8aKl3r
Y/NaGj3Tp/ZH7vP2eMdx/7o1S3cbzs9flhr2aVLXvXpm14Stcxw69AzH8VeG
Hjum5faGk+m9S23K6ehUxhXXi8nRtLymjal7ET2NrHRrx3TXaLqWOXDxHBM9
Pbs7sO81D4N+FV4yPuNFNjlvskgYHRxHF6jdp8Xh2RR89c7mH7mxZGMyacqF
QA2TH7AD9l15VOtzcRWlH3r6+eVjYzvc60zRvnen8e9/HsnNejZiDver3qq5
cu/MrRyHdZ/eZfAeNekzT5Wbdk7L9MgWS0sMfXmcY6y/Tw0euL4x2G0zN7Tp
O6ptGqvHzLz6/cSWHEO/a/qy74oxpzlODCjksuWilvpm5BZrZpVGx99sCj9g
zuMHSkQ93DhuTgrD3p9WvMmen8L0hdG+Cf+sjEulRs5fKlV4qmf6VeC2I1GH
n3H8/o1/bPI4fn7VJ+t8hZHr9Uzfz6plWt9sN8f3I+1Th/Tn9xl3uO5SqNkF
PdP/6z7RDp5yi2PHhgfJthGPP4U87jahYt+a7xPoXWXPNbnr+feA4GfvuKmw
bk5X7nd/5LHccgJp2PhcsBz4YIOXmh72c03ffy6L6tddO27+aBWNTmvg/atU
Krm6xVvEeWjolaUVnSmdSi1qlLvzj6eGJtadlPyifyo5JF2v0+ephmrnvC2U
2C+VksuX+VnvGa8/vspzm8WmqUxf6ncqtNOLuSkMr5778GevRSn0eleiaeTM
DHqf9vP2aRt+z333vc0XnjicRrNerClXiiIYf1XGLYKyd5oEdd7Pv5d69+B4
p8MnIsj24Meo1tFRrBzkWp36pVpWXxNFDUd7XWq3H/6qeBoUVW/1IWuOIQcy
Bt6tdOUKxwtd3trUco2nu980J2oY7IhPHx4v/9/zFtrjvhUNeOPAhdY8nk9N
IeoNrce7JTM8bM7x3ZuiDfpQD6+Zzybq2Hprvcem7M5pHF8PcfK0n5bN6Lv+
maiI9zM4Xn/CLeZlYBZ5Nk6rO/Ktlp5dtb5n9iaLinQ8+eX6Oy1t2NYqePp4
4+++/FP/xr4TLdIpYcahVJtYT1rS9uTsKkM8acPB4R+1bkE0o2nttDDHICr4
sViobqOKFr11CCj4MoGsRq3SWV7XU/l9fbadLa+i76nbLv4+paeY87k2zkXV
9PF17/eDDfbRpz9pCl2x0W3r9ljH6LfJh62bz1bJoarvH61w2BlK1YofTz9Q
K4emWD17Pys4hD4MPrLAMkRN1w81cbt6k+9fbe/d5vGUkcms/YtGdVysDlZR
VvU9I3qvymL8CH6HEqblxrcao6bHvi4qvz2Z+SmPF1jq/v2r6SI1daauT+rV
1JFDtbcNf4Wr6ddV692Ta+loyZYmHztGqunZl1Kv2pbTsXlLTT5VpW5FjtNn
vb1zfHI6vR2zsWW9Cil04p/R245ZpVOf3tUn1TdPoe8tcroWKcXjB3p3X/d0
YYtMeuaxu//J8DSiLtP61Kuqo7CpNyL7z0qj/lEf8kqv0zG+l7DmvOXcotnM
TtveJP2XtlgWeSzsMfhujXSynri4R2Ye//72tvWNfSJ8+fe3MX7zpzWydrmt
YvjNlZS+2kcqOtHTp+6jLho2ftW9Pl3ub8Fx1HXfElMGZdOTzVv3+P5Oow73
Up0eXsyiSV/WRv9ok04HnTvubrLNldLs7N7e/fmKkmsf1/xu5kcPijy+16CW
H0X/erHC3Il/jxv+Ws0Hq+mbmqdTiIO18/0d4ZTmvbDAy/HhNNUrY4RNuxi6
0rXy/V1B0bTY4oNqcqyOyb+bye/mLm7H76d3De2xRP+Dfy+7ee22vpnJ/HvZ
sC8Hb11Z4ruBv5Vv1mn3VctMJl+QX6dtQMu4kDQaHWryLqBtKFmO6X15YuVQ
KmpvMbVcXCRFmnfd7HAsksa3fH7A/lAcBVaPPuVQOI5enP7qMN/A/8uM7656
/zKR+sZX/rnWoG/PW3oh0uFNEh2v/vvEkK/8exrv8+ZvmVmJfw9igcuLu6HV
OT5x4vssf3/+vQ2MV0o9m1oPPZMZvy/9rr3joSxuj63ucqc86TTkdv7Jjz0n
spkc7r3Csvb3MxyfNR/2MCpdx/ToO52c9n5YqqeedTvFthzoT5XU04qZLTPY
bxt2aB4O8KcNb2Onrxqmp0cjD68ZuyaUdrZ8X3PQCD35+bq9+20TSput1h+Y
N1xP9U5eMN34MZRa9zFb02qknl67L+6sextK86LCCq99FUgjTxV/+KmGP629
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
nNUxfrGpy5n7qosc/9KXa7lvmGFeyueGrXZSU2KXxk3HXNOwdR/U9Inlj4sc
D/1y/c0UH/4drPlPXFbW8+Z4XqOCVx0PZlFEwSfldvdNIdWiPs86H8qi4f2/
NTbvl8L8ObpqMU+9i3Hc90rH7XVKpFCzxn4ZT8pnsfqs9r8zT6rAca+05UGU
raOQaUVSyn+Po2X9p5vWM9hPzWtrp0cViKfUmcdrFXynZ3FK9VJeusR/49i+
wMcR3foa9OtTgb5L+j+niJ5JNyy76Nl+s6XF7WN92+uobbHdh1NWRtGJ0qY3
1/3SUXfXyzWznsaT9c3XT3wMeMe+Tj+GGPB3nwcOpxaAbtV098jFakvmcYzz
o5U2V0vzjOe4nPm7no4palq6uLfqVlw8PU4c0feSSwzV3HZrUuwwHdX+k6ro
ybSsi1+H6+jZn1TF7My2NaZaHLt/nwq8SWv9YuEDaf/+Pn0aNaeCn+Mdunjm
y3I7F4P9XXPkuQJD39CS1XXXF5jCz28tbKo9v+sdjwPC+f7+6vaPg3VJ9PHL
7/Kd1qvJ6nKDhg3a8Lih8VWiFnW1TaJlte6Prrifn/+3PL5d47Y1lTSPyvTe
XV5LS07Mnx1osKedHzZz22jO479b/B58dsMUjj/+E6uuNVNLH25X9my+O5XR
+btrDRt12s7x1JOnL7afz7+rrYvTmmydyzH895/GvKiUWlJDy6buDuhuoNeC
tiFTZ5Yz2D3v3gVF3EynRxkel0zKaFgc6bj1BUq8qc7joTvdfL79SA01+Vhb
lx/hkcXs4uq9Pqza6sUx4i1amJ/Rd+iQwrB6SPm+pzqlUE/L4rs7u6hpTcvw
1h3+d3/utDnJ51fg3iIVOURULj99AccY/0/qqAEjx3LcpfvKbZ0mq+jubtML
4QY7KCLkglsNg/3Wb1Ha1vmGdVawSU/fZioV8/P8TnroO6ukmsJnqko1W6mm
0zZRMx70VdGW9RbVBq9Qk27G9jFH+6sotZ3zgbbxasYvwl+X/Fnn/+DFs7R9
FnZNZ/1VV3q7zb8Lx4hPsTc5Fuag5ri5uv+y7Rotlbh1p8xIXx29Le73Zfyv
BPpuap9bMEBHEW8ePHtWOJFarL+8xz1Gx/STuO+r3o2M5Th9gfWt0MO4Lyme
8YHNC7qZPTTh8fZHno18ZWaY7zL+bbJaGdZL38T3XxxaRZL3kt8Wzj0zyNdl
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
NnEM+6zUHsv4K6+4vTaq4oUdY/1iKehoHbOV4bFk2nCYb9+zsbTlXUqr7Zm8
f/WDOloWDuYY9bp8fFB4lEcsXQ1e0fRgd/6d+WIPO3V9WpZ/P/7K61vDHrdJ
oMmW450GB/N4rxvdLlzqMDWOYW3vStPXroyj5f9uPdvcNJH1s9ysujHBnxIY
ztyZOSzycoK0/5lEHj1t/CY5xlHtmqVGjJuZSCuK9egTnJ5Abxs1Cy8eYfx9
+mZJ7wt5bUmg/qsiSx61TWLtOO1cc3uHJRyj/naZhevYDeC4zK5i1W7NSaDk
iJJWNj7JFHE6ZOoHs2SySCr1akZ9FbP3mN33b2v3MjeTqMroqoE7jiVR8c/r
Jnr+SqSSVSeMsDBNZvU+K10s7slmFS3qtn/wETMV/b63zuW8B/++fUr60sW2
nirmpx9f1O7crWcq6V4OFV2sbfWzQMVkhufXmrzvZctkmh24TB1fTU0lyg48
8PucilrPsQq9NE/NyrH0xCQX/XQVkzeZo5YcuPw9kNwXFRyaPiaHzB9MKhD+
dQclmrbyKDU6hzqVSbvbbN7/I+vL46mKvvaTKUIyRKXMmVIZMlUWypQMKako
iUITUSEyhFRUUkRRmed5JvM8z/N0J/MdmpQUfud93+895/383r/O57nn3HPP
3WfvtZ6199rreQPTM2dPnUPioX+hy9G+we/hS0fIBtNJTO/+z8jAGe4NrH2Y
ZR88EVnGsK9/+V9HBTyEiQ68N5+dBsdsDebp/XiobO4Pvk6bhrkdWZyXvMjw
9MPhPqm+aXja+ftJxiMytG9pb2gYmoZoc7x0rAsZyAndfVx507Daahe96y4S
rxe1fePNnQYzqcObZWLIaHvrfLmz43sshs1NLBhOpJDBws5izT1vCnLtTBeX
UskQrWYrJ509BXkkm9u9n8iQZUUSP2w/BaLvbvUfjyfDi5o12k6nKXhDnA/e
vTiA+oH8l9IHDW8PANN0frDEHayu0u71h2ZiWcMo5mmR2K4/MAwP3O6YfVoY
Qe2VtLDRz6ONGD7VQImx2jKF9n+jG98LWKiTKI40Ff/d93EScnUYzKuDxoG6
/OJDUdgknI+JzJp4Mw7rAb9D01gpIH3B5TwttwYe1/rpsWzF9ifQ/VxreApz
27se4FLlGZzU7kP9Id1/EFjg7yWlQRS74/vZf5oMApM6rvZi3xBqv8OyN9Kc
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
2teGoQJWR98EPttNgcyz6bdHbpXBD9A97iOJ6bNnCkmWiAlj+utl2pG/HFio
8CBgP6WbYwBqdO06algxvfV/FkctgnWR8aMZ++NzziDkJpWRa2ex+bjCUlOz
CQqGfaZnQJ+FgsTBj3gij47Aucdn4wZZkXhd+LOpp/oIaA0HhERspYBAv1ma
6ZURsP5rF32PC4kHd29v5Lw+ApnqjrLivBTgx2dsLWQYBSayvurBHRRo1L0p
2cE6CucT5B6d3UYBBqnALw1fRoB5I+lC43YKpDi/YiSWjMAZ1axFh51I+xjw
ssxpjMIxTSsfK6Q9LmqUTG2ojAK34EnRewjeNMew91PiKDxiXV95tQcZz41O
nUOpoyBAxj+spmDzyYpdD7R/rWDYQHBVIRiJfx5utSt8PJUPpLEvpk5dFLgg
4hn/hrkAHqtPlDUg8ZXTeYf69cUCkLw8Z8uO2K+zSlwBvS0FMFxDPGHVjWCd
e2t3BIphxZe8hwWxX0aGBw4LrhYh/uO8ZhkSv3nUx6SpahfB1oXIsUO9iD0s
Dg/5aV8EnmXuXo+SyCg/Ux27K2qWg4zf/Avpz0y7wft9ZdaLbEy/nd6/tsr0
l63cpOsc4kFF4J3Tx/JJ8Ped8Z6Sx8NkkdqgW+skFKYapUWb4KH092ov//Ik
Om+xETYo4Sc2Bc+lZHcnnMX03Gn6kvxLp/GweMegqX03Dl7Kdn19jHzfKPTT
opIw4o/2fRd98IA+T4IDN72z9kP3MKyZH9puc5AK6yqdvX46zeCSJV9MOUAF
P/HwVxLvmsHHeFVN8iCmjx6Jn95puYrN5+xem7p6/ie2/0XUO+rxKycSMHT+
iSuTJsAlEduEBQcSNEor+NvIEsDNyzXuZjIJ+nfkp+zz+a96vf8oDAkkoLpI
W4X5Y/ouGnv3nHhkRcL0Ey5tJK5fJkEgm2x5wSsyaj/4Fz8QnoZh+PHStrTZ
6TngVFdfOIY8h1Zbna8ygk0vPuH5iuBXWZFWMWWYPih9PYVhKmR3ZTsJcsWj
F1xwM3BX8o/GSB4J1JdvyNtvofe/Gkj7M2OO18L0w6fzKduEz2D6bo1/MwOj
dJH2e+X2Oi27EHrCIw4y6WJ6PXR+MGzQH0HMmoZZssh5jXQCeJYSovb0TMMG
bBj9m0F4pLnkWoQmAdSCnu846UAE73mzz+LIe9vUEKDy2p4IhWmWfhPIe00K
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
C4tI3FMMFVpymL0ddWU+OqqXek91GwZp7Wc7/EZfgJf79oebTakrz+tt+Pen
Z/ygggr7jnKZhAHQevDacdMMFRh/bdIWfD4AUqv3yEUi14yt716VOABs3unz
q2epENTFcm4CGfu+9b0nsk7V4mRr0gCM6JTELNos76dOgBSfQcPrdrgv5i6y
TdnjFiNtrr54GTeFR9VnyBF3Ud+u5osBVLBzsjIhcxBgPaRxZyJzsH5e9wzZ
OXmL8TRybrJTiwlyM8uzx4q3qWAEM8FrkXc68Q36IM/0eWrWsxPgSdDJ60uB
VGC7yE3pBwJUOhfNGwWh61nX8dIeZQJMmK/3TkM239fw2R95rYoz3QLyTWEJ
x15kBalmf4N7VEhluv1t5xEC3Lp3l/mOAfp7slH2WBABiNXyU0XIHanJtQXI
yqtGOyaQrznMkPyR4w5GvdloSIUNezUWDJAX3NTidZGLZqL5NiMzGO2Yp7ca
gdA24RjRERK09QQ23r4wAu91yqvjkONPj8YzI3+rOT+9cZQEl4mqV4PPj8BW
VaZNMcgHrJ9rcCIbv0vV3jBG+q//HYH9QdybeUXIK54m3vh9lMYv9493e9L4
fKRRXhaNBanvQgnI4V2rrYmGI//dT0gg++Ip82sad12XybhDY7ejtbrmNBbg
t/i6g8b/3ssggtX40z/P9QgrLrtZRpin8XqBwQ8G+rgdXv1OS6dxtdbG0FUG
BJi3MjnTpzYGuruaJ4uHyRAR3OaRgfx6tVHLKLJUnk60N7IQoSdvPYGM+sma
PD1k/zeno1WQTy2ptIgiT0YQPa4g/3u/ZwzMO9ZEXBakrJhw35gthcY2x5IC
Bmn8henbAs9G3G4Vh920kf99TxJdf9IpVz6Qh1YsGOx6aILGEqPqrJwU3ApH
NvTI0Fj96WiSKbJwjUto0iJ15f4pR1Dw3jFGXVm/rXI1N+j+OG791ZLR3yZw
W8Q8Tzwxidthp2BOERV3e849S4vVGEx8kG27dLAXpLamS2YiK32aPdx4oBdu
RddMzyMHzb3JlEbuZxktPboGg7613oJR+3tBxpvxdhSypJRy4LwSqs+WEoVy
NnS/tH27KsWyF9Lm777VY0f3Yz5zjg/neoGzzVh1GDn34w9+8vleuJq2tc6R
AwMv1zAxeqte6PP9dnwR+ajYTmnRi73Aq2d6VZ8Hg3G2e8846ftgbrtm5Thy
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
7pw=
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwtm3u8zWX2x79yCXvvs/c+57DP3XGSUtNFmlCodCGF0FRGFIl+1TRo0kU3
odD8pNRMNNVUGilU8iv5ZSpdaDJCJZNMxehujHEbkeb9ts4fz2uv57ae9X2u
a33W2q2H/br/tYckSZJrmCSN+G3cKkl2FCXJA9kkuayQJN0qk+SJdJI8nkuS
Ta2TpGt1knyVSZLVtPmghvYtk+RP0HNITaBbUv8R9ZfS518VSdIbPi3hfc+h
SdIH+hz4zafuN7S5pypJ2tUlyUp4/4XUBvrq8iQ5KpUkv6Dti8gyl9QPui9p
NvRCeJ5F/xsZ7+sWSXJSLWXUbaNsMbwPJ02DPhIeI+D1M/je2DRJ3kaGrpQv
QcYa2t9K/RvUN0eOJo2TZAvpU+oHwu9N6ldRX8RY1yLjMNq0IzWGbl+WJBcx
UXPg2QH6XWS6nvY9aD8Wfi8wZ2dR16VJkjwPvZM+b9D3ddL20pBJ2fwmv609
8/UFdZtIJ0A/XpIkD8F/PPJcAf+bSFczd30puxH6U2S6CDmvof1t8B5XGrI3
Ycya4iQ5g++fnY41c+0uYc0udA7IH0r+c8afyvh/YPwc37oMGQZB3wa/2fBb
TP4i8gNJS6EPp+9oeK9vkCRX0a8taz6Eue8Ev82M1w9+zSg/k/azaH8F37Ab
XrtIl0E/QP0g6r/zexlvOm1Ogz6UsvOoa0HZo+QfIjWBfojvawvvVoxbQPZZ
yHQzvHZQtqwy1sy1+4Cy/5TGnnBvfEl6jP4v078HbcuQ8Xj2xyrqb6AuS9nV
FVFm3eekzuyFbfCsgtcK2lxO/1rSHOhJtM9T9798QxFtV1L2K+ougUcj6ra5
P8mPIa2C/gvpSugLSG9Av4eMzWhbRloL/Q5lQ2qDh7zsY9+ByFcNvRKej7D2
pczvQMa7mJSF7kJ9S+pbkDpC/18m9tYZrMlc6G15Di37owGpN9/zOTI3obwR
5WM5T1l4bmXvf8D+6cN8tSP/E/0PkM6l/W54/hbeFbR/gPbDoWfA66VmzAf0
RmTYgCxb4Xkec7GUb3nzkOD5B+gGjHc9svdlvdLsz08Yo0OTGMOxVsBzQD7O
iGclS5uL6X8n8uegG9BmAvQzyDcXeiT8lqRjD7oXpzD+g95HpMnQGfqcz1gn
kI5kfwxmfwzMxJnwbNzAnK6mbzfSPZ5Nz1g2zrRnewLy/YvzspUxp8JrIjyu
hNd+vqUn/R+kzSbapshfWB57yr31D/c39ALS1mzsAffCcfAvcv+S714Se8K9
cT39X6V/f9ok1H3j/UXdCvJ9yU/je27jey5G/guRf39z5oB5upo5/oH847Sv
pP3/UH8Z+TNIp1TFGfIsyVPep5XF/foQa3Z6WdwJ3g2/oP5j6m8vxP1WBP8U
8kyn/+f0/wH5zqB+mOvdINbctT+Gsi+oW+/80bY3+QOuMzw3sDaTMnE/7aP9
n2hzSjbup62I1Dkb3+S3LYE+i/7zGL8rc92e/fApc58g3xHwGEIaDt2XNq95
15B6QY9iPS5lPYaSrof+mvLz6T+dMVYgx+G0mZuNM+pZPZHxLme8vXzfLOfP
PUHfD6kf7/li/PuhuzMf8/iWE7izXoTPc5S1p/4u0jrotaRb3B/Mf1P4vUT+
NPKnkBZl443xrZGnvO1j3zG0/4lvaUCfm6A38o39kfd5vnc6d80/yf+Z+qWk
76EvJV0F/TIy/ob1moFMbZCtmnwxst8AjwRe8+F/HPxbUTef9X2G1Ae5b6DP
Etq+QhoLPYX+td535Ju2DhmU5QHGeIqxbqe+0reRNIz1O5b5Gkr9g9QvoH4a
e/Y16u6j/0r674V+lfV9gT3TAnqR+45vmc/81zC/5fT/Jf1Pom4jc3kmaTFy
/d01ZK6vZ7wCdbW0ncnZP5P2I2n/R++Y2pBJ2bzjvOvG0ucpzw88WsLrSfbo
cOhDkWcL7Sczhx359j+RpkA/g7zrmd91pKv4/qdpP5L2FbTPIP/T1M9tFG1+
Rf1a9tgjjPdzUg10JTwaM/YLjDmZsRcjb0/knUjZGOTpSZ974fVb0nvw20f9
ldTXUT+avm+XxF3ajfmY7VvNfNd4PyJDx4o4U54t7xDvkpvhMVx+zgnz/xj3
xdnU9aHPAfqOzYUuoU4xEhl30qeIsjztR3kWkXmOd697nPYz+d4h8C+lzYHa
eIN9iwdT37om3gzfDtfItVpOfXPqX4DH1/A6QP+36H8B9Rnqi0gXQbcn3dwi
1tS1HUS+grqPWcfjaX82v4fQdzxz9hiyNkPmO6EnM1+vIcso+E+C/8Ws+ffk
H4bHiXzvaN9s6JmUrWIu7vSOpO8UeMyA7qBOxtpOZ78tT8Ub7Fvsm+nb6Zvq
23oN/afRfykyvYZsw+i3i/oqytpQdzz5dcXxxvrWrqZ/CfX/z5ydQPs2lF3B
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
1H+H/i+ZCQ50
         "]], PolygonBox[CompressedData["
1:eJwllFlIlGEUho+VlTnO/M6MzthiOZqaFGXSRZagBCUWTstN0EJqiyWYFpV2
EZEKrWqmVtaF0YpFC91kCgmpCW20WS6VFuiFFxUlRJr1fJyLA9/3/u95z/p/
Udm71+aPExE/FojtDRO5NFFktl2kNVhkLEIkxSNyb5JIqUOkBFvK/WmUyElL
pBxrnCxS5hKxO0Wq8SkJEfmC2AG3yHuwQr7PhheDTccvfZrIdZvIDSx7gsgu
eJ2hIneJux39bVjHTHg+kU/4fMRGya2PGJ3E3oVePL5R4G+5P0fzDOezWDvf
KuG9BM/iHArmJ5/V0+GBbQazwBLBwog7CH6Lc6xd6250Ktf4rMPuUcdKeGVg
BdzLHNqLfvK9DVYKdg1sBMyD7yKwVLALmAe9EnhN4OXjRY6Rcw/cRvIoBc/G
J8GhfOMXB34OLBcsiT4W0PvlXu3vKXKOBtsGdhy98+S1Cb+NWA6+nWAL0J8J
5z5xq5njE3q4Ba3D+N5H4wh9CcOGyaWQenPAfejb0YyYQj7ktA+NAObzkFx6
8f2NXia+zdwTZ4ncAbvtUI1DM+gb/nV8341WPnaGWQTCq4VTg40GiPxE1wc+
j+8p6Lfh648UKXLrnvSAT6aOXnIrBjvPTryB9worI5cV7EEXnG5sjFg98N6T
Tx7naEt3zuzeV3LZEyTyAr+rxN4PZxgrgjcXXgI2gzwWwrsOtp/7duIW0b8H
+NfTtxj60gA2AJZI/5zodGPL4N/xaP/NHKrxbQPLRKvCpecaS/fQ7OOQU+tc
glYemhmRum9m79zk18C3cLfur9njOTat5wP3MPr6Fl4wcZ3sQ6pL/znz77XA
ewJvDXHTplIfuUTbNfc9zLwFzYv4Fli6Xz/C2Wev+pyztB5TVy64xbnOpvOL
82rNpvabWBJ6XW7tv5nDZ3zH09t6eCswPzM6AVaBpXP/Qy474MXim8tMI9Af
Jef5lvbA9OI7PclA8y7fbaYH2EFq88KrItcsh+6r2dvH4K+JUYjvIzSOEuMZ
fT3NuQprNf8EnAHibrDpv2D+iWT0mzy6sx/RWgweT12X2aFY9jAnVHc9mfyu
gMVzj8Na2NNi9PpdWmefpW+PeYN+ohfLOQ47gO4vj8Yx8TrQb8dGiDHRrbU/
Zh5byWnM1EucMXr5167vjHlvfOTczdxs5Oei7h1wXNS33vyn5u2kV0HksTNc
35C6EJ2VmdkQMZq5/0NP8F0F1hSuezIFTiT2kLvfq29hraVvrXlzB52af7zZ
DfyT2MlMuAH4VsJ5hO439NNcmleIQ/fQ7KPpoemlz9L39x09+A87id0R
         "]]}]}, 
     {RGBColor[0.36114090635463875`, 0.4306245996773491, 0.6067733969033434], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFm3m4lVXZxvcZ9tl7H0Ddw9nvyyyYOZUTUPk5JSAgCg7gl13WlwqEgllU
KqZWInOgoEAJTiUCakmKmIJ0JVZikqIgKJBMgoI5AA6AIN/9O/fj5R/vtdZZ
e631PmutZ7ife72n0xU/vuia2kwmc2l9JlOn8s8qXy2orsbxaSbzbj6Tea6c
yezIu76kJpOZqPa/6/dbK5nMM/r7moZM5myN/WZTJvNT1SeVMpn7VI7QM1zt
r2m+VQX/Rrmy4N9uymYy72vOzXrnQJUf6+mted/R3ztV36ryttT1ySr/0iaT
WaZxH+g9t+Uymd1qHy+hp6Su/1tyfhLznCm5hmv+j/Ker6D6rY2ZzDlqHyX5
punvkyX/HMkyWu0PqvyP5umv+Vtp/mX6fZnGna1nst61UuOm6nlPY7qrz6Bq
JvOG5nlS9Znqf5ne8wM9L6jPj9R/r8ZNqXHboqgP1ju6qv8Uyfy65v+Z2n+q
5xE996ntWq29p8pn1XeOnoH6ex7zaQ8v0Tx7NO88PRtZq8Yv17jlZe/TJMm+
Rs+9qj+otmXq06PO+/nfvM/vev29Peqc46Ba/019ncbs0djenTOZtzT3hZLz
bv09U3MeUJ/X9Xv28Eymj9o/1R6crbKXnj0a+1HF9d0q10i+w/T01t87ch57
CYqltR9UfW/G+9Nc1/z3pG5bUHSfWj371F7V+Ev03C8Z70vd/mbZ4zLR56UG
y3Gq5n9EfS5W/UidydtZ12erz1SNGa/yZfSoaHkbOqqUrOeoz7OtpRcaP0b1
3+u34xu9J9ep/vW829HtbugJZ63249R+K7qs9ms175v6++ep+8xp8G/oD+3o
0Ht67yqt+XuJ+jRaRyeq/aT2kkvvbqsyK7mP1FpHtpM95KyHp+nvYpPPoq1+
/0l796Hv/HrLv1zja9Snr+pr1X6g4vreimUfG+vqJNkOL1iPn5QMC/VcpWdo
vfXsXLUPqHUdfaN+cbSjr9QPqr2X5jhbzza1FbS3Y7WWcmqdQV9m6emv51L9
fobGLK31XMy5Wv3q1W+rxn1Tc+zVOufqOUFt/dB9vWu3+lyp8Terz4F66/AF
+m2qZJ2i58OCZRkQ8nSPsdS3aa6/qn56rXUZOc5UfRM2o+cuzZWXvLm8/Vd3
+ZPz0X+dy2rNs0r9h+k5WmdwvGRZrPYLVL9cc7+s+jvqM1e/z9HTR7L01tNP
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
pjm2Rm7ZJrWutiz7nfQhbuIb9gaW3hlcxkey4x9rTx7JWedOaDQXQB5AXkC+
TLy+KnJncoRhjc6laTstcTw+XeUNZfs4chRwMrkJfmRh9Geez0vO/Rsqzk03
hU7+Isb2rfj3Kap3qjVnNk5ja7XHr0Qdjg6ftiziAjiaHAQ7PzLvOAIuJP4R
B1cXHatvbHRe3RQ28m/JPK3JNoWdrdSYIVnrKz4a/gQ+6nP5n9vhrdR3kPbr
NOJ6yTze5shhOrexrzixo/N18nZ8BfwL87wlGYZonhvUp1caOV/o1ak5415s
b0bB+vqzyKWIVcSpRfgQ9VtcNZ75eeg/+zE+9uSEjt6332ovnylYbwZknEuT
U19VdUwjVjIe7IgffEpr+WmTbecsreMnkvMu9TuKvLLqdbE+OEzexZk0tbdf
PKtsDAN+YW8ZR650bWCta8M2ib/oNnkI2IX1pYmxL1h1dNG5ETh8bOTz5PVz
gs8kh+8Z8Yy41rdq2bEl7Ghj1I8MrAIOIXebHXgB3uFzva+vysFl8xnwBL3U
J5t1fCUePVR2vYZ1aY2rVW9zuOZrckw+pIPzFfwGc4JTtgT/8lbZczZoP8/o
4HdN1Fq7NjmnPrnJnMSU0I3H894j/Fe+av0rVI3H4WXpO6atY+sN0tmq+jfl
jas/a2Mc0Eb9j9FvU+EO9N73K8bcH6jcUzJXWMO5p+bf7lC5PjW/Ac9BjCRW
ng9PWLDewhmcV3VMJDbuLjo2ZLUPSwrWLbgNuISXas0tMIZ1wXdRLg3ui9yI
HAk/3EXvmCMZTlLZOXIluJi79Pfb6KfOp33JPhRONxMy7JAMp5YcJ9eCFXPm
WcAZ7FM+a77jqJJx2Nyy4y7x9xRsPTGOH5nYDoi/6BkxAb9ybK3jCvFlU9kY
DZvFByxptN/Bt2Bbx4Zfuj/1uXA+R+fN8YNliA+XBgdC/o8eo8Nwz9uDi15b
dqzZk9ongRnBTqyffRim8u7UfO+9qeMWMmLv+KqRgQGOiLwTfmd50f6on/qn
WvPNqrdWebHm+qf678JflW2HcI1tg4PFH5NbkmP+Sv1b6LlG9ZYV89QrgrM6
qaMx7wXgmpLz5/bcg7S3XWAf8A3Z4BwuTB0XiA/9U/s9/B8cFVwV/NjJYRff
aPIahoYukcvh926XXP0T5wvbSs5VyFkeV//1FeeQf9TvH6r9Bu3tftXHJMbx
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
         "]], 
        PolygonBox[CompressedData["
1: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
Xxfupxmk/5sNW1mb8ONs6PTq9u5x97pvlm/Xb7S9uyI4FbmVp5H1GXArZfvL
b7AWh4AlfDucsbYBn1CvG3mnVIaOqK5YxhysJS9N/4NyMcfOdQllcsmd4t0y
A8wEt4PbKuON9a29Qk4KeVuA47Q1abMAPMscTJCLYj5HF8Qd1Njv1H0GvARe
9v1kTMeUxZ5172rza/u3I699Zdyh3qXK+Ju2Gm2eXRo2vLa8d6Z35ya5qop4
k/dMdFJ1U21WbdfHSI+sDJtb27uEPnLVoUOoS3yBnGvBQaRHyl8h8/rkm3nO
6a2Jzqzu/BvzuhvcSLpfMie3Jzre/gnHJNfkHDgX61mLDTWhM6o7yoHJhbmG
rqU2iraKY3AsP4ItYBLfnq+MO9+7X5mVXY5Prm85WFYad4B3wW7fNG0m0nO0
BRj7OjCG9Niq4NDk0mooUwsOYg1vYO3KuJ/+Rnpfyu5TFpyQ3JBvlmdhBfNf
VBI6vrq+Z9KzqY6yObFxtHW8A70LH0KmIZ4J6l9VNziVU0ifSpkeVWFDaUut
JL0CLAFLbYu+vysLHUtdq4p0JXiavGfAm+zRbuzVHqBDWXBSclMjfdPVz7Jx
93vnefdtpcwWdQDqviw/iOwXeodR5ylwFt/O9N1Altbp4BDlEj8Dn/su0V9/
xj+JNpeSv522tpWFTq9u34o76GDQVm4HHJ+Js+AbeGVJ2Oja6hPJew7cS3uF
yH4+Ol9VOjgNuQ05g43UfZT3ZTv5xzJfH/J7M2NYQv4IvlXnw+bW9t5Em9+B
HqS7N0veKPA+bZ5TFDbsntR/ljr1eK9StP806QXIPD/hXORe3qf/npSfTB9H
kF6Qi77P4ttC0v1ou6+cHG3fCa4j3adZvHm+fb6hvqUrwffIWoc9ngKvqYOA
b5ChQYPgtIo5y2WUv4n5me4YkWdLNu7iVdS/iLzZ7M23wWtgGriHNbi7KjgK
uYqL6PvCZnHHeteeyrceCccj19M+H217p3q3Hsfv1/n9MOO/lLm5jd9ri0Ln
U/frnw/dcAG/G9Luj8XBtyvPxdR/AxlmJjIp2358u7lutHl8PjgruSvfSN/K
HdnQXbTxtPVGVYWto341knSGOThD/ZA20k3DJtc2d4+VULcPa3JtZXBGckeN
yG/HXvkaea7KBccg17BOe4v0E8hwDm1v5Pdo0vOY7+9obxN4MB8caNOEw5TL
XEqdXizRJeR/SPonxrQ14RTlFtvx7RXams0crGMuNoKFpK+g/ArydiHTzprg
oOSilqcjT45BrmFP70vqL5Yzo/9a8Cjp/yDj2eRfKhdbEGUuI92ItvYEn7CW
n4J/Z2JumrNn3qXuquLg5g/l92J+zykOXaoZv//XtcsFlydHuDYXnJbcljqI
usilpHs3C5tV2/V/qPMb8vR0PbQvqZPi9xp+fy1XSX6qQeisT+aDQ5NLG8BY
B+rH4FsR5d9jTa7MBycoN/iy9gDreQS4nnRLbdJ8cCpyK3KEU8jrhUyXlMae
cm8Npsxm118OmLam8O1luRxkvUr7mj2xm/nYBT7LBAcuNyZn87v8dEnYKtqQ
TUj3QcZrwY/IvKUmdHx1fc+sZ7dBSdzl6jhyH/ZhX29wl89KbDptO3VudW99
CH/5Evj2fnVwdnJ3zplzp09B30IRe7tBVXDycvOvgkebhs2g7TCSNkaBgnzY
unKge5CezFgngXFgfG3oGDMSHUFdYQ5jmA2WgeXgMnApyDPG0rKwibSN5JDk
kqrTcbe6Rv/MhU6vbn8Pbd/rfcKZvLsidEx1zbbIMIWyb7On+jPeOszPknqh
IxZkYw+7lyeAg/PB+VYnPgZ9DYOaxto3J39kLjhwuXA5K7mrEU1jLg4EK2jv
dsr8wX74HdyWizPqWXUPvEf/HyD/r/XjTvZuVmdQd9gEvquJPehe9Ax6FhfL
X4G1YJ26D2NrWBGcvNy8Npy23LnMzXlV4XPR99IM7FMbHIBcgByoXOgw0o+A
AvLq6iNBvgeKQof7tiI4fbn9X+Sy5CeRMUd+CRhMegZjeIu9WsH+fyUfnJHc
kTq7uvtZctCgAX001A9DmYFFcSd4N7iHihIdUl1yS6ILecefmsyBc7EKrAbP
0sYz2n/Ivrs6OGC54E3qUtqCtDFMG5P0AO1BxtSiNu5Y79r7s3GWHcMQ+p9P
3n/Au2Bubdhk2ma+Ob49rRLu2DZsyz7s60ewBVxGX5dWBccs1/xQwo9pYx+b
DY5drl0fir6UYYz/Z+7+9eQvygSHLpf+LHkTwJJc3NW9va/1FTYNbkOOQ27z
aeosJ28Xe6Y/ZSvo49uC+HY5bX/F/TNNXya/Pya/JW3czHh7sD4f5+NMejbl
XOReLi0J/s/2e5M+PBdc+Fh+tyGdR6Zcbfj89P25xq61b8pA+upbGb6K5vRx
A+mV9FdZED4xfWP96esW8DJ1p4B3kLekXvg47i8Ojl2u/QTkfYXyp7o/CuJN
Oi0fnK/c79zE96OPTV+bd+QXmdiz7l05c7lzfXz6+p7QJwD6uPbgPvbOP0EJ
aArqgfo1wSHJJakzqzuvp88bGwRn9wd9fZ389j3bmo4707tzttxzdfiQ9CVd
QN0Ly8JHrq/cNX4gGxy+XH4Lxt4SLGXMI8h/hPFW+F7nwvfot1wubDBtMXVY
dVl9rPpaPaOe1en0Na0mOAS5hKUJF+Ub4FuQQcZTWIuTkHllPvaAe0GfxpfF
cad7t8shySWdR1vn1oQPWV/yZ/qxkeUf1PmcukeCpwriW1vSL+oDahacgdxB
25LgNuUkv/V9BG1IP0d/bzOO1yk7Hayi7GrwUzrm0jl1rvXZ6Lu5nb7vKAsd
QF2gG/fzO8URs2DsghyMXIw6q7rrINZnBHm9+PYhsl7DfM+g/F1VoV96n99J
+hXantosOAy5DHUKdYsjKDOcszVUnxXYypz8JF+dC93fM3RsLnwq+laWJbbX
p4zpEzCO9HiwWv2Z+b5ancL9ko22X0fmr0g/xdyOB2PAWPBSLmxzfa4v5sLn
ou9FG1dbt5xvI+uHzqzu7Bq4Fnczvk8Z30A5NLk05qoL2D8X3Ko6qrrqJfJV
dWNOepMupEzdsriDvYvnMca51eHT0bdTy7caUMzcpMHD1NlK3V/AiHzo6OrG
6shb5Btycff08A5Nhw2kLdRaHy1YbIxJUcSMGDsyhDZ+KAofzyLqD83H3Wcf
j5BuQplBBVFnOL/XIcta9UPfMnAJ+asT/0FhdejoyuMan8Lea69tADqo84Ez
aOMD7QH6GJmJbx0Sm03brRNjPsn7xLmoCZ1Q3fB36ozJh86l7rUHe2R8PubA
ubgW+Wci/2P5aFubbWQ+3gDfAn32+u7b8e018vqq7+cipsTYEn2sg+RP9L8X
xZ3t3X1NLnR5df7GyHIZ+cuKYg1dyz5gNb9f5Pc1pNdkQlZjVoxdWZ7oSvpE
9Y3qk1b/VF+sw/6+Tl2wPObIufo8E2NT5/1XPs6cZ08fsr7kvtTfWj/uEO+S
BbQ5P9HJ1M0OV79pED6Q9sz/g3x7IPFp6tscAYbXhE9R3+JbtHdwnbDh3yb9
lvdTUcRUGFvhnXxf0oZt3eN7Vhhvlm/XE5Q5gLLj6W9IOmIQjEXQ56fvryPp
DrURQ2MsjXeed58+/6cY633ZiDVSR1FXeY85mJf4ePT1GFNgbIE6hbrFLxXB
9f+KzFtZ79fpf/+i2KPTcxFTYmzJJtc1F2+kb6Ucq1zrq7l4y3zDpqVjj81N
5tC57F4SvjbPU7eS4FjlWq9gb18px079vYsiJmcg6SdzEbtxIks2uDg4Q7lD
OYWZtL+B3+uTmBdjXzamg8u6xTOcixgkY5GMwTEWRx3gL12AMpP1h+bDl2T5
PX1vcxFLsZL+Hi0OzkjuyDvHu8c7ojiJKTC2wJgsY7N8868hPZY29nH+9PFl
IkbNWDV9+EeT3zYd/KH2yG73O3PQpH7EOBnrdGs26nqn9s+Gz1Hf45f6umvj
jvau3iwXBb4ujrdgJX1cmw0OSi5KDkMu4wraXFwYHMCt+YgRM1ZMm0DbYAQY
XhE+D30fwzIRG6PPuDvlp/J7Wt2IuWmYDk5Xbtc30LfQGA9jPfSh6UszRiqb
+OT0zf1lg9RGTJuxbWdmw1fgHDgXxggZK2SMlbFW+Vz4GtYYP5ELTuS1REdV
V32FNqeq7yPrNrAfbTxP+W8of7fxdLQ1DOwkb1dp+Lz0fW2k7je1oZOqm86i
/BnyzdlI64PRFzOUPTqkJmIAjQUcS90x+iFJdywNn37nxCd3QuJj1Nd4LehT
HXeed99Q2suQvk0fYWHYQNpC+gz0Hejj1NepTadtp09G38w8xjOKuR7AHhpB
+gzyTgcTyJuojYssP5aHTahtuAWZftTfydj6gmW50J3lMOQyBlYEtyFHMoj1
7EfdvmAJZZfWBqcit6LN04C1vokynxeFz1LfpRyRXJHfbiYvmwluTo7ujFzE
UHpfaEP+irx5MIbyH1G/TzY4RblFOXi5+L2qQjcyBtFYxNJsxKK9b3yWsRPI
NBqMBKPUbWlvWN3EnshETICxAcZAGAtxOjItLIo373F+n1AV51l9TF+5MSbG
mrimrq0+Vn2t+gT1DXYnrxv4hDn5FLxVGbEN6nDqctqQ5yacqdzpPoktKacr
tzugOnRl9Tl1ZWNkjJVpwby3rAgfir4UfVj6sowRMlbImJm/YmeywUUbE9Am
Gz4NfRve6d7tbRLdwjfbt/tR5mMc83US5S/ORAyJsSRy2HLZ+qT1TXsHTSqO
O3pTckd6VxqjaaxmN9ruXhsxCMYi2GYH6i4ujr2rzqLuok6pbvm7d0AmYu6M
vdOGLc6Hz0i+XP5vZzpi3ox9cw88mwmdT91PG11bXR1CXUKO9pl8xDgZ6+Qe
di87Z87dRYzp4qrQ+dT91AGuzQcnKzerj1pf9d7eT4URozo/EzaGtoYxFMZS
yAnJDXlmPDvGCBoraIynsZ7bEttejkquSp+BvgM5eLn4FPizNDgquSo5VblV
dZxj8hEjZqzYGH3w6YjhM5bPmKV9E5+3vm99vvp+PcOeZfece8+YY2OPjak1
tlbOXu5en4a+jaWJr8AYZWOVjSFRF/TNaJeJO8+7z5jO/dMRE2psqG/ovung
4OXi9QHoC7g+G3erOvaHxXGHepc+pE3TLN5g3+JqvtUkd6h3qXeud+99tHEv
WMEYV4KLMrEXfSN8K7wjvSvlIOUijek0tlMOuEJ9IBuxgPqM9R3r89X324U2
uyY2kraSMU/GPvmm+bbpU77NeM3ieJv14fzJ7x6U7V4eb5hv2fiEW/ObedpQ
2lLuke7Z8KHqSzVmz9i9m5LYEmOIjCXSRtdWNwbIWCBjIIyF0IbXljcGyVgk
bSptK2OijY025rMyHTbx7MTG0NaQY5NrM+b0mmxwLHIt6qTqpsa0Gdvmm+Xb
5Z3p3akP6U7nB/kvqRtvwtx0cECrEhtBW+GD2ojtepP17pwPn5C+ocnkvVAT
HJVclT4JfRPGpBibYoyrsa76hPQNGWNlrJUx78a+++b59s2jzNzEh6IvJZUJ
7tg317dXH7C+4GXkLU84ubWJjaitOD8XvhV9NPpqjLEx1uYb9OhvwbpM3C2+
kU8hf6d8jEWdRd3lUH4/x+9JoE8mfED6gvQB9Uj2rHvXmExjM7+ijL4fYy4n
5CMGy1gsYxCNRSzXfqkXMVeNM8FByEXoM9Z3LKcpt2mM40DkfSETtoc6+XX5
iNGUjzZG+2PXIx2xw8b0r6Pu1SUROyjHI9ejjayt7Bw6l75xvnW+Wb5d+mj1
1RrTbmy7Op66nmfMs/Y56c/AGvAx+L0kYku0UQ7JB4cjl6NPQd+Ca+BarAKr
E6xKOFO506spcxV4RC4OzPA9SeJ3jGUfmo7YAW0ObQ91po2Jz0TfiT5Wfa36
BPUNGoM/K7EptC3kOOU6L6DshbXxpvq2yoHIhajTqNsYs2zscm/K9KqNGCVj
lbTpte2HJ7ZUEXXrl0dMlbFVjxuzUy9iuo3tbt00bAN9EG2aRkyosaHa/Nr+
rfLBZZ9sTHYudGZ1Z3UgdSFtKm0rbZzHc8GZyp0eVxP/S/Fy4rvXJ61v+spc
+Kb0qazKxBgdqzIqq3fiimTNPk/WzLUzxs1YN326+nb1+er77ZPojuo8YxId
Tl3uZnBLbfhU9K1oc2p7jkp0I2MIjCXYkNg7+vC35kKnU7fzzfLteqskYivV
t41d2Jv2BhRFDLax2LNz4Vueg71xAr8XpuMtc46da300+mqmUuaofHC0crX6
MPRlVGQitt095F6Sc5R7lDOVOzUm0thIYy6NvTSm0dhGObfzkjvKu0odV13X
Pene9H9s/F8bfQb6DuQMnslETKKxiXKacpvXU/c60A/cWBM+bX3b/g/KYcm3
fsmed+//HRmOSmKMjDUy5sLYC33y+uZ/yoUt6Jz2IP1z8lud8prKiEEyFklO
S25LH4e+Du+UcengQOVC5SjlKnelQzdSh1WX/TThdozpMrbLO827Tc7jUuZ3
f2TYrypiSo0tPSwf3LJ3YOt8xMgZK6ePWF/xrZlYG306+nZ8Q31L5fTk9lbl
gpuTg/iIdDF9N0k4YLlgY+SbJxyYXJg+bH3ZnsneiY6orrg9ieXR56DvIVUT
vm9jQowNMebJ2Cd9mvo2jdE2VtuYHGNzHJNj+znhP/WRNstHDK6xuMaUGFvi
GfWs6uN9LB1nwLNgTL+x/cbQGUunj0Nfx7Rc/O+N8Q/GbhrTaWynMXfG3u2V
D1vfPd+E9CS+PV8WPgt9F/pU9a3K8d6RCZ1T3dMyljXmy9gv58y5M2bI2CFj
xMs5j42of19RxATUMVYkHdygPq1bcnGmPFtyPrNy8eb59vk/Yv6v2E/FwbXI
8cn1+T8b/u+Ge9q9fUBtxBrYR2P6+j/U1lC+
         "]], 
        PolygonBox[{{5976, 5975, 4885, 2194, 6177}, {7750, 7749, 4841, 963, 
         5580}, {5978, 5977, 6828, 2171, 6144}, {6141, 2169, 4848, 5968, 
         5969}, {6143, 2171, 6145, 4739, 4740}, {5580, 963, 4840, 7737, 
         7738}, {7696, 7695, 7705, 1428, 5166}, {5980, 2004, 5979, 5977, 
         5978}, {5616, 1736, 6839, 5424, 5425}, {4740, 4739, 6140, 2169, 
         6139}, {5170, 1428, 7705, 4829, 4830}, {6176, 2193, 4884, 5975, 
         5976}, {5969, 5968, 5970, 1998, 5972}, {5166, 1428, 7725, 7720, 
         7721}, {5425, 5424, 5689, 1778, 5691}}]}]}, 
     {RGBColor[0.6667142660889769, 0.5380145983060303, 0.42713921737900407`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3mU1cWVx3/vNQ39HtDQ773u99CobLKNjmyi4IBsyUEzR4HBTAaXoGKC
imxCNAgJsqhscUGECMiIeoxxn1FRx6COcw6LNCiCsozIYkxAZdXRgMh8P32/
ffCPom7Xq1/Vrbq37vKtotV1Y4eOSSdJsrxBkpSpviiXJI+r4apCkrRUfTyV
JIfVflUmSa5UuU5tS1W+d/un2STZq7JTpagySX3O0u/rRb+q0kmDnqu+X6hv
D5XFHvNz0d9priX6+0LV2xomyUfqu0FlGQypHFHVVPV5Ks31zRCN/Z5+/17t
f1a9WWWP2lPVQV9bTJIX1fcFf9u5LPrRZ4J42VQW411QHeO8UZMkj6i9s9o2
qf8B8XB/g+h3r8oqfXevSmvz842qDqrbp4OHTarfV9kmeqHqY+q7X3SVxrwj
HfNO05gLNNZlKk+p7Y8q29XnDHjU7/tEzxV9VPQe0U+L/lM66OfEyzp996D+
bqySNZ/fqv4gCXmt1p6saZQkPdXWV/Pu1t8DRT+qklb5Vn3aqm5j+nuN2c6/
PavyTDpkcaZ5gP/fit6bijmqTG8V3Uzj36jxh2jikuh3Ne/hhiEzZIdOZCXL
Xvrm+XyS/K9+/9BynVuRJHNUbhC9Uf1GqO6PHmi8/SpN9dt/6ZuRyF9jPFae
JFc0iH7Pie4ieqboDwoxxv2S4cWqf61yVLw1zwfdWzLtUxZ979H4P9G4M8XH
DJVP1OcFtQ+UngxS+91qu0vlbf29QnxO1JjPa67rG4T8vxBfy1RfrfHv0e+v
iB4h+q/5oC/Vd+O0D8+JXqe5HtD3L4veIv5/kjWt9tHq938a82bVd2pv9qdC
Z/LZ0Ns3VNqfmSRfqe7cMklq1F6t8qb+3pWL+nT9PlA8/F7jrNXfU8T/w+K1
tiy+e0vls1Tsda1lcX159EXHarMhJ9ora4I+kQvdWuc+f9ffh1Q/XyXdLET7
UdWLNU47zdvHenu26PPQjXzYgzb67nLt4+/EX3/99mIq6sWpkAOy45yP1Pp3
qt/1qkeoHqv+7RuEraDukYq1f+W1TNa809Q+B1n6vOzWvDPR2VSco9dVn6Py
DyrjVDqpdGAt1uUuKm+q/0Mq3UTf7TPXWWWs6I4q7UXv0O+LfBYmqu1C1iD6
hO1cX5XN7GEq9PY26cbETOjYUtVjVL4SryX1a6k2LTGZlo5zeZb+Ptvt7VSP
V91ZpbvoFmVhR+iDLs5S+bHaqnwm8tqDbvqtayrs5wTVXVTOx/Zqvr0qc/X3
YPWfoHEGicag91Pdl/1UPw2ZaKiku9pL8Gb+aNNnyU30U2ki+kn1kVgSiT1p
LD6m2tY0UZ1Phf1pUhZjSt2TKWovR5dVbtTv1SqNRY9SXcAeiJ6tPm1Vd8XO
qOG3mvRujZGyTRqscjIVNrufSi/RPVUG4I/YJ5WBosc1jDPOuc+VxZ4i0zHI
3Hs7JxV2+nL2VqVVKmTSzjSynoZNT8Xv28TLTNFt/H0Hy+ou6xJ7jpw6es/b
m6Zv/3TIET1prnWN1VjDxdck8zxU7beaZi3btUlfS14fqe6bjrkYe4bnYuzX
UsEP+sz5aZaqcz1JC+s8+l+yDdkl+gGfD3zkYdGHGsR5+I0EdLvKRenQS3zw
BUn8fq7Hp5zrNb6VDp5YzwatY5O+vTsdfrub+7D+LuYZ/Sl4b9EPdAN/dIf1
RCYkGW2/1dw6h+6drvYFUpihxAUq72rf1qksUVmp3++0LGZYRpzlrOdCV9Gt
auvVnR6XMTkf3awnd/m8wG9/88z+d9N8bd1/eyZk39Z6X2O9LXl8dKObeO+a
jjmm+YycZpl29VzsO/vPGtenwm8QM+Dv8fvNrMuD0qHn6Pwl6Tibg0zTzpnl
7yGi92Tsp9JxLgakwx4dl+yGNYj2Or1Lx3nh3N/qs0/bALfTB5kir5vtg7ai
g9r/Iw1CX96wjcK/Y5s/VrmiLHSzr20mssF2NE1iP9iXJrYnXX/Q3t17hT3p
ZvpC84QcOun8LrTsN6eC518kYW+etB3B3hJfYnNvz4SdxXfMSUecRFxEDEV/
bNQVhfAvP81HfIgdJH4dVx025pVcxDrEQ9cgu2zEahcn4dPwf33sF6DxDYWy
8AXYq8X2C9j/g5nw+xPdttj+4gX7F/ac2Hax+xNPwXMX+yPm3e/x82XxzY5M
6CIx03HLoiU6QCyXDZ+zSuVL9bk0Hb4Cn6Fl1dkp7CC2lf2pKgtb27ws6Db8
7v74l7ztJjKF/4J5yJkf1rsvFXEqvnU6si0LO0/dxHQj+wDkxlzNzAO+ppn7
4A+J/b9wW3PzM0NjVpbF2PW88i0xLf7mA4/NfAXPW2kaHgvm89Fs6MllSawh
73VtTod+0L9WaxnrMzVb/celwyZjV0fbLhHLc36I5+k7xv2px9qPDnI7Z/Yt
jdNf5e6GEQswZn/r8gTrM3HjVpXxtn/MhQ2v1T8jVf4pFeOOdP8nzTM+lHNx
A2eYc5SL+Gqq6nnZaL8tFfNemw4/U2uaMfdlwj9e5/Ge8pjYEHIq/CuMQF9u
W8S5wAdX6/AVymNe4vwrRZ9TFn5teHnIcrDKVeVht3OZiFH4Bp+Gj7nA/BOz
YIuWZSI2+to+hz7ow8l8jLNATqK/BPUL0X8Qvbo8aOw0cSuxLvEm+Rh5Wb2t
neYYc6iM9VzRC/MRp0Njg3tJQZs2iu+Ji68uj1xwXkWskzWW5SJPPab6b43C
Jh5V/x9rvYuwJ+mwl197XUdtL/GtDbSmkw0il9rrGhvzTXnYaOxzu4aRw2Cv
ycuoyXvWaL7zVb+h9f636BaiXxc9RWPewX6Jz/HkFA0jr0hlYqzjnuek8zfq
VHnQh8wbfLLPh0yfYxo/z+9H3L68PNYGfU8haHKUO4ox5pRiyDXvvVpaivl3
ap8nN4q9YGz2trNj9ZXlEYsgI/ZwYDbyt0qfZc47MQv5TyvbGWjyIHLoKdbV
w6mI9Ylzqmw3sBNH3E7cPisVsQnxz+iGQZOPkG8Tf1Q5HoEmXj2m+u+e4xnb
HWzIXPuVLp4LGhtFzEsOjC0i94XG3mKbp9k+0zbV7Xm3Y2OPuV1Lr4vXyFVa
JxEXkFeCKZDfT0+fsoczbW+J49En/NQh6erBiojxf1+Kv+eVImf9zDE/v9fr
4G7t/z7rP79/6j6bS6HPeTHaLhc2iY3+WP3/6nN0VyG+qZbc27vPbzmX6jdM
fD+QCzvW2TYTmc6wjcV/ES90TCLnx49do3qUxvqLeG2SC3wHHz6sED73Ofvd
rwpBP52PPZjhvSImyXk/0ZNtwXKd3JE5+tNUDfO1/tO1vrVgICp9pQsPl0K/
H8TvlyJPLivFWslRyUvpD27xt1TEI6ttc8C8iB1et336yLYO24N+o9ucIcbn
7LDf4AXIlj3u3SjsBnuKj2GvGHeY407wJnCnZ/JhD7AP4Bvk9b1sr9gL9mSk
+rYS3++r/efFyPXBQciniXWIed4Rv9fWhK0bURPfQ5Ofn6VvFor+UTHySvQG
fWhWDDykUvV04yKz1X5OIeLycwthe/gW+4NOoBuFYuQUnH/OPv5hWXn4BPCx
6R5nciZocrAnPP7jyLEUe36h+OydDz34uhC8VjaK8wtuwTrBb8DZZpnnWcZp
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
WC7EUfCOvuAD4AVssKf7Y8v/H4fb6J8=
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwlkU0rRHEUxp+8rs01l9Xc8AWUEgsWYiEKkxFTNj4AeytZoIYYjZGXZEOZ
WFFWExtklCnKBhvJLMRn8DvO4tc9nfP8n/N0bsvMXHK2SlIT1MJuo5StkXYC
qSeSeiHXIE0z/Eb0BRV4CKUSPKKrmJ76Ii6dw1tMKlZLh9SL9BeYZ9BlqFdh
Db+Reume+gZuoWxe8ALv7FpC3079Wyd18M3jtQ3HcARncc9k2dLN0hTs82aT
XaehvzefHPUGZEPPY7leyXdCXYA8/S3LFXhOy3uH5zxvJ/EchxSMcYdRSMMl
s070K2iXYT10vb2z3ZbhgHkK7UTkt7Eblek9UT/DMP0h2Av83nb3K/Jck++T
fK0JqS3he2zfINp+GIBu6IK+yO/zfyf+yQ98xNzDvP4AuO1NIg==
         "]]}]}, 
     {RGBColor[0.9115475440612324, 0.6488688601530811, 0.3257973865898205], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmge0ldWVx793X+M9Z+l4v3svTxSQLgKW2LFrVFSsIIJdwGjG3isKWLBQ
1GQs0eCsEVAQ0aCiKGDsWKJJHHvUyRo1k5k4alRMUZz/z///LbPWPeuc79z9
nbPP7nufr9/E0w89rVIUxTvNRaFfcVNrURzTXhT9W4pi386iOEjtCM1vornB
aju2eO7gzI9XP0HtAy0yTc/nqp2ntr/m9gvMg2qTmoriAfWnlYLXGr+pFcWJ
hfc4qfCajCdkbr/M31HxWqwzVH2X3l2jublqhwQGWGCYGyIcVwnmIs2P6TR+
0zWe0iiKTfXfmdr/QcEdGvjRnV7nx4XxHxN45g7N/FS9O0LvnqN3h7d7/FPN
b9bu591aTAP2Ol/zH1b8zHhWR1HMVtte4zmaG5v5f694DK32qBfFxW1Fsbf6
q/V8sdolwWF0zghdRwce+q1UO13jo2sePyzcLtD7d2qdp3tqfeG8vXCbp36u
2nYa/5v68YJdrjZR796qdq3adWqnaO1T1X4qIbhFz9fkv9Va913B392lc+l5
iPg4XP27GQ9T/7OsMVPtjIbp/4jeO73L/DhdY4TrSK1/o879F9HjCI2/6rBM
AQO/DtDcgZ2mzZzQE37cWrF8IBv/UTM+4HVnxfDwiP6AjK8J/aYUpgv0uVB4
3aTnGYVp/FBpOvxY6y2tWJ5vjTwcEDo/KJhHBHOB3h3abvm5qjDfxgSmn96f
IZ0ZXy2KZXpeoHaX2mK129V+rvYG51H7SOM31d+g9geNB2qNDTX+RHRcrXX6
infPqx+q9TZVux5cM/5vwfUVfIN3m0x7eAAvemfcm2fBDlObW5gH8OI08aGX
3vu4yTj8T8VwwFyrfp9Wz7EmPIanH0iWjtP8HesXxQ91/okaL9B4lMaTNV6i
8dPNhtlG/daa/0T4/1H96mbDj1S/Su0YjbdU36qz7aa+n/B6SHvMD70O1vP2
wvNG/f+U1t1M67ym8e1NPhvnqlc87qPx6xrPqhjXewufd4n6K3PG9zQe3Go6
QsOKzrK/1mxRf1vkdJbaKP0/IvTaRzhshl5o35N1hq00PkBzFT1vq/+/1Pg6
9ZtBk8I0hbbLNb9Ia58m3szT2dZKppvVf4Q97PC7I1q8D+9+pvlh7ZanXVrM
2xnBs1N77a13B5WGHZG97o0czc25hoR3pwrPbbDHpf8fnHlkhbPPie2dF1pv
knfZC1zR9wdFr0WyF+fqeXzD/28SeRgWHKDttsL3X9SmYXcEN1L9mNI0HB48
/9owzFfqr8w67HVzdA69ZM9Tsu+4FuvX2PCun+b/pPkX9fyY2gq1I0WTX8JL
0Xtep2HgL7LRR+11jY9BbtATwbyg50fz/uPiyz/3kC5qj5ey3srCOofuoYPP
qy3PO4M6PY8+sk//4IMMI78faDxHtOrUenvrjDO1zj56b4fCetk3uN1Us6wc
I5uwQHODsxe6z3iN1jlBz2ernRX/hS/Czg9oMR7gcKP22lD7HqS9+ml+407r
/iTBnYmtVTu2zTYCnk/OevwHbN/Az+/089Za62vBzVYbJZiJmjtebRU6ofUH
dNrvv4nfF+ytTdZx9Bs61Co+HzbnHsFcL/n+geC/iF0ZWVgnd4gNeTc9+vsq
vlt4viP4A9XvpOcN1P9Oz++1GIdnC9vQhwvbgM9abevX0z47Cn5d9Xd0+F3W
OkHyN1r/n1Gzj52jtkzPJ2r+YPXnNYzjDWp7a83DBbcCW63+rk7Teftmn7l/
6EM/IHw/QnCPI8ddtgc/iKz+SO2c8I+1b1R7GJ+EzY08fdlknu9Y2B5iC+H7
jcFnDL6ndH++8Hwu5+b9GeL7vZr/SPbqCsGOFQ7btdhOXxNdO67Nths9PU74
HksMhL5rrV2lg0vVH5N5/ObswvENsc1ivXtUD9sA/PalapcVlgVk4leF9eX4
jC9rcvz2VGGeXNr+Pc+AWRl7OjV7zMx6PF/canzmtxiX4+Jn39P8Dpqfrvnx
hXGdEJmcpPZlxf3EyOdPKo4fdsL2Nuy78eE/QWe11gC1ozQ+Wu1twT7VwzEP
9oo4ZkrOyf/Ada93VGKSXs3+j/lpbbZ3e+rdmzuN23569+6GcV6g/mehOzTf
pNm4gue+hc9zePoTIy/o/ZDo/tOxy/hA5jbJPLZknNph2Ev5wV7C48ma4xFi
IuKNgS1+B7m9q9V2Bnl4QXAbC/7FxNXnRkaJtYib1yS2YR47Qxw9NHSe1WIc
WPt6yd4/EfvrjM8Ex2U5D+fAbuHn+4m+Xc2WC86CbMxJrHtweA2fJ+RMvId9
GlCzDB9Z9TmZw56Nyh7ArtV711dMS+JG+AP9kdmb2i23X6vtrLak4nyBM0+I
HEF34JHTzdssq8MT50Cr8Zof1277A9/XabHMHNzweJjk6qtm0wE+k9t83mHd
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
         "]], 
        PolygonBox[CompressedData["
1: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
z6ZvIH0LqQ+pL5krirfW5jTMbfw/ibfdhw==
         "]], 
        PolygonBox[{{6084, 1699, 5495, 6078, 6079}}]}]}, 
     {RGBColor[0.960361179801542, 0.7709029495038551, 0.4771196573847803], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3m0VcWVxu97744Pp3fOnR7gU0CNA4OzGI2AEQSBoCigggwOoAKCiIoC
D+wYV6/VxixRUNPpjpjEOIHGxnQUFWVGjVNiJyIIDonaohgQ5479/fg2K/mj
Vu1bp05VnV279vDtul0unDb8isZMJpPLZTJN1IVM5hqVbEMm87webFN5TqVD
cybTrHJKMZM5r5TJnKvysdpvy2cyaTaTeU/0cXqW0yAfiM6rb0H0h6Iren5Q
k/u0ld3n4IrGU71DbXdr3tXqf6V+51U+VdvOaKfm93laT6HZ49Jns+pNKutU
fqpyqcps2tXvTZUxKtv1TR9q7rUqJ+j58SpfaI0PRp/FGn+t6q0ql6gsDfoZ
tS9S/ZbKJJWS5r9X5Tdq36Ax1qtMUilGe7P6nJbzmMz/kMp10f/AsvlwiL73
rniP39ngJbx4SzzMaI2P6Z0m1V3V9t+iP1R7Y9b0Kxr/MZXh+v2tnrep/Jfa
f92WybyqfoVqJvNH1X+P9orqoso60V/rva4q+6gkKjOjvUFjHdjkeceprFU5
v8H8WRvf1a515tRvuX4/qnpg0O169rnqFVr6YZKF1qx/L1PdPejji5aJrOY4
UfWdWt8dec9R0PN79O6F4stP1DZe9Rk57zX73l3zHqFyusa6Wc+7aYxGlY2i
D1D9pvqdrf5dVN4W/a7au6h9a+xJMfj/rMa4v+j5KPmY9wKtoQdy3eC+PaI/
dPdoZ997qjyi9nENpvdSvUvno1XlB/o9usH9GXOa1tquNVzKuRB9msrxjX73
8uAV6z1QZZR+f6O6RWVflYzW+a342FPvT1a9scnvvqRnL2mcs1Se1pwrVF7V
eGtUr1Z5XfQ7JT/7SsO83+LnbfVM5jt5t/P75UavgfVPUf+pKg9rjuc1bh/N
cZPqnuJTTf37c+71uy/ypv53qF9vtXUWvSno1zTXq3X/zqY+b+vjnMK3WTHX
EI0xWGWLxlvCulXGxzlbG2dtfpPpCSrfy3lNP+I8aC3LVObo+cJ4l/7v1Pz9
g1Ufrf5H5byvb+j3k6xf9bzQBaxnfKPXxD72EU+Gh8zAS/hzofo+wvrjvEOv
U3lJ/Vc2W4bGqn//nGvkd5Xa3hMP78p77PFxXjYEzVzXBR/2yNW4kJMT9W5v
9GnJeoZ594kzNy7G6R4yTH/GYCz4Niu+hTEXxr7uFfL1cpzLu6UTXta6mqQT
9sqZD3MbvAclfesc0ecigzmfOXjfHry9PMZAVtcFL+AJ65zIfBnv44XR/426
9cOhkoEj87YZ2IutoU/Rq+zv5zHum2XL05pEOq1uOW/Uu0tLXscl8S2cGb6L
fS01mA9LQnb2brAO2xny1iN4xZl9ONb2rPrv0LfVVLZqfa2a6zPt9UzJxnFq
O1ZlTdb2Y4bG2t5omzZN9Eeir9W3TBZ9hsqf1G+qypSs9xZZZ49eaPT3XhL6
/qFY3+1ho7B9U2KMYWpvzfu74O0KjTUm6/PFOZsS9E+1vpnqd6L0YZPOY6PK
RL3/N63/9+rzTGo9xDjI2Cdqf07tK9S+U9+3Q+Ui9T9U41yj9h+mPjcLY20T
Yy+RtxdyPmdDs372UPAW/i0Jek3Q7HV7jAP9VoyDPIyP9r3+yY4y/gUxJrL6
nObaoHkGZT3+0hhni9baK3TKmLA98HbvnOnF6nNWzrquf+zvxBi/k/jcUeUN
vT9We3eo+DZI9LfqvzL07H6a76uwC51EJ1nbkeUF60d04z5q+yJsyia9067f
c1XeED1H9WyV1SWvgbU8r7I8Z75tUL0g5+96XfUs1ddmvcaHQw6Rk0dCn7Bv
2GX2bn2cL75lZd32Y77263PRb4l+TvQCfd8ozZ3V3Kt0rjdpzRWd6xc119M5
2wVkkDkYHx28IfTPIyGj7An+wPpo3xZyS//x0R/eP1zyOeQZe/9oxus/LG8b
jl83Ts9fl0wOCf06JnTsI7H3fMubPIs97ZSzn7czdFsx9Bs8gBdj0U0af5LK
0Cbrt/EhS+tDxnb7YDX7h/cntudHZK0bHtd6LtK7c/Xs5DhDudClyA+6ul/W
droU8nhByPbSkHXW3DP0KvNui3EKoV8Xhn6cr72Yp/KbkOG9Y3+7hx+A/sEW
jYy5JuY9F+1jw/9gPffGXPChT9b9mWuH9v1l/X5W+96UWq6TVtvkj8Mu368+
++mb76vbdxhcsv8wIOgL1OcHBffB1/sitU19qG49jK+GLl5SMo3NXdRsn/7M
Bo8xJMbB30cnog/pszB+f5h67ptr1t/4K50aLKPIame17c13MZb4M1r71Ufl
RvxtvbOIvZIMPy96ltrGVBxf0IeYgrpv0Etrppdq3x/S+P2K9vOZZ2TMNSrO
yEvi9zN6vqLo84tvjY/N+l/Juv3TjHUGa8a/op4S658aNOtjnGdVuhX8Hr8P
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
2r7ingT80Rj3pr5PcBl3c1LnBQ8T/eOQlVtUD4l7KoeqvSb6a707QO/2r5o+
XfXsum3JHNXDU+fqDhf9Sep4bIv6DKrbFzxD9ZoW69m9yZ8n3j90FXdi8Dna
1X/fiuV/P9V/U9kgeqfqzxLTO0QPrttfHEKeKLFPfAX3xjV+WX2e1Pr7VazD
vlSfnyQ+M33U1r/iO4sDVH+v4hzzKarvSSxvk0S3pubtoKr5CD/v4V5K3ZjC
VfjLcYfmMtWTU5//Wep/VuwRe5Wktrt9RN8cueHnOctlr/Mp1XPV3oJeEn1F
ar1znfr/tuz235G3Kls/T1TdrPmGqn0v1X9OLPMLRZ9csZ4/qeI4GJ8S37Fb
yMYlif/HAnZ8ELhdxXdBzkqs88bu0XsV43xdy7aN+NXYSuwH42ND8OcXxNlc
VXUMsLpq+0zsgO+Ob7X73pHo0ypu/37FPhg2Cx0xtuLn3H/Bb78+dAL3SbkL
0iHiRWhiRu5VY7N6qz4/td95Q9V3tvBHZ5ND1rPz8K3hT4tjoV7au4mJ2/eH
V6l52IF72q3GpXOqH0xs28BKf5n4/tO9enef1HdcFtdsL1kD5+qGxH44ebyh
sW7W/GzEsCtVz06MBx0u+t3Qb5+qbZfKWtF/rfwjH8w9JrBbcl67wm+/Nfj8
L3XHSz+s+/7yh4FLcO8NbHhjzXeZ/zfwEPw1/DnsBXHbsMAusL2rA/fjviDx
waI2209iVvIR3E3eFvgJMeD2iI3x9TYG9kJc/HrQg1LHuueWHXduCZwCO4e9
O1BrfDJ1zmd63Xpoa2Aaw2NesDXikjMDhxkWNGsGSxwaPjOYPJgAdoX/pvBf
iDPCB+8fvi54xWnhA4Ot9gvfeK/wvTfH86HRZ898xLhgYyNjPfxHaXjQ+AZn
Bz08aM4Lc48KfxgfExq/Fz8aHxv8gfuDI/5pHMYHfwO34N4S2MjMsvl2leoH
2pxr5U4QvjnxA/751VXTjya+W0l+4G3uN5YtEwPF47PK9ucOjJzbb+NdsKjl
ITP4jviQB5Ttj+J/Hlw2Pndf+LHs54vh+4EjsK+McUHZd0fOSv0N0PhI55Ut
N2ekzpXiS17Y2X4r+Vd8+N3/gwq5Yq8GxD5i/18J/5P7p19HDHNH2TKD7MAb
8EHkamnd9OepfZpvIkbqUbNMTivbZ8J34t4NcceOiEnuLDtvNjpxvIIsIofg
suCexCkLy84Znqs+t5eN348SfVvZPteIxPv5bewjvj/2jniduzOvxjlapP5N
nPfU8T00/v6eO9/I7JLEd6xfqFmeh4T8kKsn502cy71b9MF9kovvlD3WIWXH
bgvivKPraWd89vzW2PfzEn8L3wSuSZxGPDYy8Xfxfdi6l8OXGJOYP/Dprar7
k5OplR2brxV9at3YN3kb/geAroPXn0mXPce+JNYL8BR+Iq/I7UqNl8aesrdX
l60HrimbZ2Bn6ILdOcbIM3IPlVxHXXM2lj1mQ9n4BhgK5+TONq+d+3SDQx+A
meyK9Xyq+oiyeTUncZzHtxDDgzfNDJn8S8U6+b2K7Rd3Gog7WNOUOL83xb2m
P1eNbc2IMzW7YmyCvDSx7OBYA7EG9yHwsfFFuVfBXqK3Bsde/6bN/in3/rZG
/MwYnTTWfOSr7Dj3jNAz4CLTQjbAN7gfApZSKnudxbKxwytDNs5JLLfI76jQ
mcwLfsD4YA7/D5brd2A=
         "]], PolygonBox[CompressedData["
1:eJwtmwm8lmP6x191Oqdi5Lz72c+p7FkyFMmUoZBspUKRsmapUEmUJftQoywZ
CoVQUaFQtFAoRlGWohjLFEP+llFZ+n+/cz19+n3O/bzP/dz3de/X9buuu2Hg
kB6DG6X4V/K//6kOmVTqMDAvn0rNB0/Up1LTwcmVqdQpYCDpASBPugCeJ+8x
ZalUJRhM/h3lqdQf4K+1qdRR4C3yrATXk74B9EmnUt9QYVnjVKo+m0p1LlAG
317QNJV6j3c7KGMoz3uWplKreP8VZb22U+Q5kryb+K0T754DH5J/FrLMBL2o
ozfohTwdachrTVKpyyird3UqtYV29eC3PqT78v32VNSRory1fLsGvANWgbvr
UqmJ4KQK2gzOIn9j6r+C/CXkb8vzgWBf2tIGdKPM48Ayvl0ORvHNVeC5GmQG
/S0DnIFsfUE7vj0EXEW7RoGhxVTqVWS7kPIvIz25IZV6ENwHJoH7kWVSIpOy
rSDPm2AN364FB1F3W3AzstwCplPX42ATsmwGV+VSqZHgNWRfBjYi0wbwCHmm
glJ+G07dd9Of55NvMWVezfOVPB/Bcxtk3heMoqyrwY18MxZsQ5btYGpLygLP
k2cemMVvM8F08AQ4gXfdwbdVqdR3YCjpIeBWyrgNdASHgyvIOwz0Ykw3Mz+a
MD9q6aeNvNsAWvDtbmA43w4DY0hfCxoXYmz2Qt7V5D+d8e9Efy5j/C9n/E8g
T3cwjj4aDy4mfRFYQF0LwRL6YjFYQNsWgin8Ntl2gWlgM+821cQYOBaLKH8F
5X9N+XNIzwbP8VwB+iP7Yp7fJv0N7+eS7oXsp1ZEmZY9HowDVyHDqKqY4871
1rThYvLfQv+fR7qB3+4gfS9j2p2p2rs505VyruZ5FFhAXy8E95N+h7y9eJ93
zlLe89R9Br91RJ4llLkKef7Db8+SfhrM5bkJOIr3X9NHm8GV1DUSXOP4l8cc
da5+Q/oj5v/ryHQCfT2GOTkatEL21mAQed5tEnuAe0EzxqYpeMe2gasoe3fe
HQvm835kPtraFTzHc5ExKYA0yIA93Xso71jkO4f0RMqaAH6jbb+DZ8kzF/xC
eiv4ijm6nLaWs3/cUogxc+x2ol8agfpM9MdqcKGygr3JPxKMT8ccda5OZeyn
1ccaca0sAosLMaecW7ZhMGXNJ888sIi6F4Nj+W0BZa8EA8l7EHW2BXNIzwUP
MkYPgEr6rAp8QZ98br/QplHgLbDSv8jwNjibvP0row7rOoX2nQyOBce5HsH5
yHMBGIX8T9Ofs0Afvj2tLvrYvl6KPGdS/5HM3c7gfWT6ANxGnlvBBsrZCFpS
xpmst+7N2E/ZV76lrP58fz/9uTvPI/hmeG3sMe41n5H+FJxEmSeD9sjermXs
ge6FP1HmCmRbTxmNKHtgdey9q5DnAuR5iG8/pr5V5HmY9FKwgeePeX6V9OPg
WZ7f5Xk66a+Q9UvwNfjGPYXffmY9rOH9k8riHsFecR/YmI085n2YPnwEdOG3
J6g7Df6TiT3AveAn8vwMWiF7S7AraAF2Qf4TSqP9L/LtBMq4C5QydmXgJdr8
IngMPF4Ta9i17J7m3jaNsqd6zvBbP/Aj6R/sA8ayJxhB+cPBK/TNIvA4ZT8G
/kCWHWAVZb4DPgdfgCfJcxltu5g+fJL5+B1lfAs+AutAE8oqAdOQ9VFwHH1y
LPgnv70DmoGm4FnePQcup7wGyiunvJNJj6aOa8ATvHsS7Erek2j/yaAF6WXp
6Nsh9N/VPPcEPUA3cDy4FdlvAb8hy+9gMPnryN+C8k8kfQR90BGcTd8MAK/T
F8vBGn5bC/ajT9uAwcgwBMyjzOfBI2AqqOe3Ovdn2rQQTAQTwM38dgsYy5iO
oK7LkO+vzNe9kWEv0Aq0BmdTdn/QnLp2BkvYz7q7l4FXmevjkOlOMJN3s8C5
jME54CzQH4ylz3dmLqwFj1PXdWAI9RWo7zja14iyd2qIPrAv7AP74gbSY8F9
yHgveNgzF7zM92/y/Qq+X5KPM9uzexV5V1fGnujeWASX8P42z0owGdmmgI1g
A5jPby+Aknyspd9BBd+udP2BpeBVcEom9oIdYALjOw78SnoX1vvXvGuBrLvW
xxnrWXshbapm/P6EjN1J11LG6ZTdkva/ko0z3rP+G37/Ty5kVvY7acM4cD2/
Xee40W8NoDvvjgcT1a3qQwdQFzgF2XuARsiwjvoGUN8I0oeC9vYBfX8M6Eb6
FeT9JziX+rdSxi/gCsocBgZR173Itw/ydSZ9IPkznm/036n0zVzqmlMVZ4hn
yRDaVE99O5GnNXmv5Xl/nh8D+7k2yTsMrGZM3wXjmS/jwOuU9Qb4NzI8Q95L
6b/PirFnu3er86n7NUWmMtAHGU8DS8DiRMdU17wEXAzuouwJ4Arqb0l5jZFn
D+TZwW9/gMXO1arQsdS17kP2SWAbeY6gL0pp89PU/wV1fg4ylJkFPzLHfkh0
FnWX/VhrbcAAxmYgWEmeFYlMSxKdR93nXGQ+D1xCnovBo7T5MXAl8rVGvhzy
taXuz5Dl02RPdm8eA0aDkfYBmEP+Gch3NPn7ZWKOOFdmU/Yc8AIyzy9Gn9q3
6szLEpmUbSt9/Av4O+/uAhc7B6l/B2jpXKFPPgKTaNP94AK+OR9UUXY1GE9d
45I56FxU51b3nkOeueB07Qt1S+Q7g3QJZX7cOGRW9gHaM7ybxfNwz1bmcCfm
Vl8wi/fHUFZXMImy7gcP0scPgA78djh4H5nWggbQEvw5E7phU+bjaZTXKhO2
1iDKL2MuNfD8B/Wfz3MTnnfnuRHvL+W5Oc9fUMfnrk+wEfwJea7XFkKeXUg/
5liB76h7izYGMm7h/LycMlvx/RuUdyL592O+rOH5R56rKPsP8D3p08j/LfmH
kL+B9+fRZxPJew+Yqv5I2YvBVsreps5JnizvBoKXPHOQoR2yHAoeJf914IDG
cSbvT1l7ZULXHOf6TYeNp603kudCNuasc7cIKjwfed+Kb6v5ZgDp2WBM49hz
u5L/e+rbom5G2UtAJhO66TbkOTIfOpC6UA/QE/yZuXKQ5wzp/cFllLGeuv+F
DFczD4fyvK5J6PTnZUJHU1ebwZqaqX3Cmjs80XHUdS4n/8fqk+RfSv5P6ZON
2reM9Q3qsaTLKxOdrmXonOqez4G6TOh86n6zKXsOKOGbxs5jcCEoYS41dt0i
8/6gCXleahY2cAnpdvTHIeBg+uoQMITyP6LsT52v2dC51L3UYZrTPzvxnAKl
pMtyoeOq607W1nHtZEM3U0fWdjgPvEP6W8pokY4z2bO5lrx1YKi6DuhMG45s
GXuye/PLnoe0L4uM+zWPNXQ2z7d6NjbEGeBZ8Dxj9Jz7MngWdKDNh4FrwGjQ
iTr+Ag4DHcBYvr0B1FJnHeiATNuZD7tR/v6U/3IyHxsj776eG5T5K8/VjO94
5smByH5ATcwB58IFuZjbdby/i/c9KC9NWVXgYL4/Evk7gxOR5aTqOCM8K1yz
nch7MeUXqOsBvu+eCZtV23UwGCJ4X8X7ybzvYX9QdwZUUHelfUfZg8E8dXXQ
m/yLKL6N/ATpvpnYOyeCh0hfym8VlPcg5Z2YiTPCs8I94kjkuZn3N8nTgCfB
PvTHXU3ChtKWupExGgvWUOdax4bfdi0JHe3SdOiA6oKeQcPSceZ79rvnXkL6
OMbgWPA32nAHOC4fukYN8vy9EGPgWKhTXpYOnU/dzzN2qP1F3Re1DA5ELsQ9
3L3cPe8I3h9N2Uepp3lGgZpE39B+rcvFmnBtXAIuBXcyF+4Ae9GXe4PzKfs8
0JX0MaAr6S6gLTgI3FiMtboJeW8mPR35H1evQo7bM8FxyXW9AF4EB6gPgOG0
dQR4mjJmgXGUPR4MLMT60sb5by7OFM8WbTZtt+tIXwsOJN22Mmx2bXdt9PvY
R4s8X8fzHGR6hfqa8rxT89BBxqRjTbg2VnD2rZTjQcbtyL4N3IP85eSvIv96
10BF7BHuFa2YS63BbL59JlljrrV3+f7bkijjXr6/FrzD85c8X0+6jm9q1THo
2+3gHObPW8ydh2njh+XBKcgtaLNNQv4fqeuHqjhzPXvfp41rQTfXeEPsae5t
SyhrKSiTi2oWNuZg7QU5DjAB2SaCUcjwT+T5HHnGFINjkmsal3Al5ZS5W0PY
YNpio4uR9xFkvI/+2oqMv4DZlD0nF2Pq2E6h7IfALny7szaGcx8MzAS3IAci
F3I27X2zSayZq9Nhw2vLt5fTyATHINegjaCtsI70R2ALffE96KEuCybS1rvB
mcjerz7OAM+CCr4pggzItgwdWF1YHUJdYoH7O5hEGfdXBQciF7IKrAaH0wcd
QFvacpBrvRhz+QAwCXn34ts9Ew5NLq2Gb6qrg2OQa3iZ9MLq4MDkwtpR1iHg
HfKuknfTfm4SY+7YT0bGB8FoZBsDHuS3B+Rc+aZzXehY6lpywHLBZ1DG6eBe
bR2Qp69zDcF5yH1cV4y55pni2aINrS19hzZDZehQ6lKWYVnNkLUpWC9PUBtn
TOdkTbu2l/Htaw1xBnkWHcZ6nMlcncZ62CDvzG9Hgi/J8xXYzm/bQCPmRmNw
JmX2k4cGp4GMey777zrWZ1YehTp6u38gy0GgSyb2Zjk+uT51YHVhbYye9H9j
2tAIzHbuN4SOo67zCfI0ycQadi1PpexpoJI+uI733/D9at6XUFdj8AN1/Qi2
U8Y2sIdcGNiD/HeQfwDynUnZb1LWG6A3/doH/Iv2n0Ndy+iDz0mvZM9akXCa
cptN+f4Svm8mp5ENnVPd0zO0JhM6prqmZ+ABmdBZ1V0nIMtEsEYZG4XMVfJn
9Nnq2tBZ1F3eAivBfc5hsJm+31QVnK/c70/l0dYtfH8D3/8hJ6puq81K+lf5
Wp6vBZ/RPx+AHtpu4D33Z+qaB/agj/cEM8BT4Hx+u6A2dGZ15620p1I+lt+e
AX8gw46qsNG11X8AN5H3SmQdAS4Dl4P/ZmKtlyDPz6SXUPbiyuBY5Vp3kzPh
/SvM4ePo76306S/gHNp6LlheHrrsvbxvzfupjN0jDbEnuDfckwtfxQG0Zwzl
byb/u+hyi+REGa82YGRJ6HD7kR5Gnv48LwbXea5TxnQwl758Fsyj7OfBm2AF
WMKaXAyWgeV1wRHIFXRBtq5gvHupnBHp7ypij3Gv+ZpvvwFPUuYT4Gx+G1AV
e6p761e05wbaMwkZ7gNjwY2uFb45AzQhbyl4hN8eBg+CyfnQWdRdtOnL0qHj
qOvMAXPVv3nfj/eLwGjyvw3eAv8AD+RDJ1U3/RNjsysop/+HIc9S5DkeeV4G
C8ErYFExODy5vC3gezAiG7pwGX2+nbrudm+uijPcs3znhN/zDPcsH+feXhE+
BX0L7uHu5fo49HU8hkyPJjqWulY/6uxbDM5V7lUbWVu5C33SVS6I+gc0CZtC
2+Jh3j0E3qPeNeAtvl2Z+HD05WhjaGt4xnnWbaHPvgMnMPdOBO/zzVqwSq4l
Fza0trQ2ura6e657r3uue+8blPl6Uod1fUlbvgC/MWd/B5Op68GK4KzkrtyD
3Ys9Iz0rP6YP14P3wQdgd/qoNbiBusfmwkemr2wYZQz37OK3F7UrwKO54Lzk
vs5TR5CzQsbJ8vD81gCmkGey/B59MzUbNp62nhzDyHToYC8kOoy6zIn6kOri
DPIsUkdXV9dGHJ4OGZV1NXhXnZo85YzvLvojSM8CM8FTYAa4iDyDQEtkb1UR
NpS21PX0zQ01sWZcO+qU6paHpWNvUWdWd94tF9zoROZjLc9fIOPnzn3KngL6
8U1fbUXafijoRd+fCtpRZnt9g/TByMo4Yz1rl5NeBrZT7q/gDGQ4HZwKeoHj
QTdwNGV0qQ4bTFtsKH16GejEb3/xnbLXJGdGdXBecl83grHgfcb2A9ete0xZ
+Pz0/e3ON63BPmBf/VzM1fvAfGR5IRc6k7rT6ITr+ZG6f6gPHVBd8F7y3gM2
UdbmQujcbRObWdtZm1vbey+wd134rPRd6VPQt9CeOtuBw0FHsBt5WoDmYGd9
jOTZVhucrNzsz6R/AmfpWwWljMGGxsHhNNX2pex18iD0QT+5ZtbAsmL4UPSl
6EPUlziIvrgINPOMBLuCFp6dclyM9VbGOJ0JnbpVoiOrK+tz1PeojqWu1Swd
Z70yKMv+9M1+CQctF92HvL2rwgbSFvoLc+QIz0G+3VEdHGfXZI471+W05ba1
ibSNeiZcRvuEG3UPeS/ZE9wbtCm1Le0z+84zwrNiKr9N097km760Zz3zdQj9
MJ66f2Nv6kv7uiD7Osr4CHwAPgRH0LcdHRdwKGhHXx4CaiizVk6D71vLB+vz
rwgdfkJyRnhWqBNvScbIsZJzlnv2zD85Ez45fXM7g13Ai5mQbR0YjHw/ad+W
hs6zJ9+ehYw/NIrf7s2GDtop0YnVjVcne6NtsC1yhnKHC5OzYjsybUs4RblF
fYj6EvUh6kv8JRNcqjrwsGzoSOpK+jQvzYSOoq7yPx0qGzqCuoJ7fKNscPBy
8XKScpM71D3Uj5CtBBSRYSBz47/0VwXp27U986HDqcvJ2cndOQedi/qU9S1P
APtS/u2UeVtyhnmWzQfz/IvsL1SHz1PfZx9kqqT9NZ7xpWFz1ZJuS/8dCN7g
3Zv6djIRqyGnILfwBrK+bpwGeBvcpI8f3AZurw8bRFtkBXWurIo1d1ayR7lX
rUh0EXVydfP9kecq5tsLyNSlGDahtuGExHdzPDJ1qwiOVK60Wr4G/fszOYV8
7AHuBcvUrTyX5cjBSHAVOCETvhE5GLmYI/mtc0PobOpu9bS1X6Pw2dyILF/y
2xeVcQZ5Fl1r7IC2GGOTqwtOVW5VG0pbahYyzawOnUDdoANtOIL25KjvcNLL
6YNlVcHRy9Xr49bXrQ9bX/b99PEk8G9k25SPM86zbgdI8fsT5JleHRyQXFD/
xNekz1zfuZy/3L82gbaBMRybEp+fvj9jcIzF2ZD4glZSxoqKaJNtc4zfSHxA
+oKs07p/dd3rn9aHT3sepT1/NibE2JBc7Pnu/WdpjzcNnUvd62vq2lwZe5Z7
19vJXHHPdu/+jD74FKxXdwAj8rE3GANxQSZsMG2xsclZ5JkyP9EZ1B08Iz0r
9YHqC71SjrwsYhYG8f025BnF3HiK+fwr6Y+0pcqCw5XLfTLhvuR05HbUsdW1
zzKmgvJH08YSuUBQU4yYG2NvZia6wau8X1oIn6y+2d1pW2tQp85SGzZW70Tn
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
xpwae5quCN+0Pu2MNi5tGlwZnKHc4UL2mAVV4ePS1/VbYpvqw9WXa4zy+4mP
SV9ThyQWxG/81hgWY1mMaTW2VZ1E3USbsC3pT+nLjQnnLfdtDKCxgMZ8G/t9
B9/8LRcxYsaK6RPUN2gMrbG0DfnQhdU5W5J+T39NeZwxnjV3FELXqaT/7nQu
gZpC5DGvc9S5Opz0iPLgVPdJYlCMRTFm29htddIuufAh6Ut6ib5YAIq52Ovd
w93Lv6MN31ZHDLGxxKtZ26taBoctl92eb9qBtuCghuCg5aK1gbSFuqZDVjk/
ub9+iW3kHR/v+uyRD91aHXzPfPgY9TUaI/ZDJtaEa8M15FrSJ6Nv5pf6iMXU
J61vWs5D7uN5+ui5YsQIGytszKGxh08lvjtjGI1l9E6Jd0u8A+JdEDkXuZdn
+XYueAksKEaMvbH2xhAbS7wgeWcMobGE+mj11cqxy7Ubo2GshhyTXJM+C30X
N4NbwCfI2qcsYsKNDb80iS2RQ5dLd8wcOzl9uf15lPG8+xZ9e15DxAgbKzwI
2S+qDI5Hrkefhr4NOXy5fO88effpkST2dyFtfhlMoezJ4AZji+sihsVYlkHU
cVFFcPpy+96p8W6NMdPGThuTZGzSGZQ9oFno2Oray7PhS/PO0zJj22jDumQN
uBaM6TS20znj3DHG3FjzxoxdCXgzG75G78y8kQ2fjb4bfYL6Bo15fT3x0emr
k7OWuzZGzVg1bQRtBWXaWAxOUm7SGC5juRpysbe4h3Yj73npeHZPcW8xRsZY
GX2U+ipn0sczEh+qvlR9JvpO9KnoW7HP7DvvMHiXoSN5Dk84QLlA75h518yY
JWOX9KnrW5dDlEs8JR3ckDHuxrobI2+svJy33Ld3Brw7oA9MX5gyK7sxZV3U
Sdy7qoITkxubXoy7BbvR/ieL4cP8R8JhyGUY42ys87yEuzXm2thrbRRtFcfc
sffOlHen5Ozl7o3pNbbXmChjo4wxNNbQGENjDfVx6Ov4MB+6vj7zj0h/nA/b
3zm+gfQ1uYjdn8QYLactRxUjVl6f843I8kQxZDdG1FhRY+yMtfOOj3d9Vidc
jDE7xu44Z5w7rgnXhjqkuqRnrmevnLfctz4bfTfGgNcne6R75eHybKWhs6m7
GUNmLJk2vbb9YspYlPi49XWfSP4TcrEnuDfkkC2b+FT0rRzleVQad6a8O+Wd
PO/meQfHuzjeUfKukjGIxiLKCcgNKEPHXMTsGbvnnTvv3h3Kb8NK4w6cd+F6
8XxqLnyq+lbvL4Rta55/FOIOpHchjVE0VvGqJBbaGCBjgeQc5B6U8Wh1O/I8
nsxx57p30BYkPnx9+UsYo8XpuLPn3b2yRHfwTp93+3olvsEd1Jmqihi14ckd
Du9y+Jvv9EHoi1ia2AZyHnIfct5y394J8m7QOvBRTdw58e7J49Q9qTRsMm0z
OQW5Be8oZrJxJ9G7iZ2oo3Nl6BDqEuo756dDh/s2iUE3Fl0bXVv4N94fm487
Ga3qYwwdy4MyYWtoE2obega+lMwB54IxHsZ6eMZ51i1KfP+eMZ412nzafvr4
9PV5J6VbMmaO3UHJ2egdE++a/CsfsQHGnPyWiTs23rXxTqR3I1vZnsTnre97
j0SXVAdWF/5XNmKNjCF/Ih0xpMaSavOdm4szwrPCmC5ju4xRNlZZTllueUAu
uB45nIG5uJPi3RRjKoyteCQddzGNwTYWuz7hoo1JNDbRGHNjzb1T4t0S74Qd
m6wR14pnzMLEJtQ29I6Sd5WeAbNrQmdXd9dnoO9ATlRuVJtM2+xPYJfKuDPj
3Zl+ueCi5KjOzMWYO/aeMZ413mHyLpM6lbrVFfTpzKbB4RzsmOjLSWKSjE36
PuFq9Wnp2zqF9MkNsae6t95EGTfmYg24FhYxXgc2j5hiY4tzCdepT0vflj5c
fbneufDuhTE4xuIYI7+sPGICjA1QB1UX7ZyPWHHvEHuX2Dt63tWTA5YLlhNp
k9hQ2lLeAfYu8BrerQUzwFM1cafTu50d88GFGZPZgue988F9yqnukw8bT1tP
HU5d7tDEt6oOoC7gHRbvsninwrsV3un1bq9z0Lk4IrFdvDPi3ZHDM6EfygnI
FXinwLsFch5yH7ckuo59aF/OKkZslXdGtmbCB6IvRI5vV2Pb8sElytnup62Q
idhU+zyH3C/n4+wwZtXY1XWF4FrlJNcX4s6Zd88OTnwds5O59lTSV4uTu5T6
WPS1yFHJVTlH2hfDJtU21aemb605bWxWH3eSvJu0PIlt0mem7+wq7wc0jTuQ
3oX0zpp31/TB6IvpWR937bTptO2MWTZ2WR1BXaGiPu4aWId1nVYfd3V2SeZ+
JvHleMfbu97qeOp67tnu3d6Z9u60c3p5MifWJHuoe6l3pNwPtbFOyUdMoLGB
3jn27vHeSSyEd9q82+YdS+8aGpPUMRMxVcZWeafEuyXFTOydcore9dqnEHfH
vPO2dyHu9Hm3Tx+Fvgo5VrlW9/CLcnEH3bvo3ln07uIlueBW9RFfmos7jtbv
nc8tfP//JEFSRQ==
         "]], 
        PolygonBox[{{5614, 5613, 4855, 1738, 5621}, {5176, 5175, 5304, 1553, 
         4477}, {5703, 1787, 4887, 5628, 5629}, {4478, 1887, 5870, 5175, 
         5176}, {5602, 1733, 5604, 4511, 4512}, {5629, 5628, 4886, 1786, 
         5699}, {5607, 1734, 4853, 5600, 5601}, {7260, 7259, 4525, 239, 
         7254}, {5619, 1737, 4854, 5613, 5614}, {8524, 239, 4525, 8528, 
         8529}, {5601, 5600, 4852, 1733, 5603}, {4519, 4518, 5618, 1737, 
         5617}, {5698, 1786, 5700, 4518, 4519}}]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
Og5Xah66WqZ8tex+h+5Rt8Q+Qvm2ao27oSny/oPEcVTxdBrrXlg0jXJz3T3N
vY27uDr0N6bjA+Yz9xTkeTC1HcgeNqKTrln3Ts5V/qsYozoTPidV2MbkP7U/
jSuOnwHNEvUZkPO+su/m6wXnhcoPmxPngsoJKxPXIVrrF8qb6nxfa7DVcp3X
1fq9w14KnGOu4Ny+qexcXz7q53zcVnJMez72I/wYNMMkS+hLlHj/GXKmwK3w
Gc74b5n3fMk0WxjrGWpM1ZrlRvc7tvC9b41x+RD1PIYGXDyGBT+j3lt76L8N
Ttw/awUO45kBPiL0/NT7kH95IO+aYG7Z+b3y/D7ssQW6KeDnqL+RuK6fofq0
zr7hXezn+IBrTPW2fIHOpAivn8I/KVsenalkUo2tWvuRxL0J4TsS56W/Drmv
6h/VQdOZeyzk4crHzwy2Jxsck3EvUT3LflnrVTXc64F+gfppIRdVTro65MPK
iys6eS+ae1HQiXSj2l/9DvmK34UcTLnYCtZbCu0ryLW11jqWjcjW1gd7Uzz8
PNR6Xy47P2rnHJeijwkZ1/Cz8459veB5Xsn9sELBfSjlJ/2bvX/pQT2xN0r2
t/LT80M9qjq03Oz7onvzat70g5Hxroz9m/zcRugfq7HtnhdsQLagnOVwyL0U
exXjFX97h/uie6NerXpuS+C9KdRi6lV0U33CnNl8vzjobThwTuLxk6SnjOOX
4tyWIIv2vqVsPy9/r76afPUnIbfS+sqvJsfuX/VBx6O6eF3Vgmc323/Kjyq+
6i7rTv80rKv1x5Vcu6kuVyxdFHo1a/Ou11S3dY595oOzzjdlc6q37su4T6h+
oWKw5reX/W1zsMnxOdeJ6tXJdmR/4rU49DUl97bg8+X7FfuVA9zIXj7Mui5o
zLqHpFpesumuyHedFGxLNvZy6v7ilNBj1B2SDYnXV1Of7yH1KlLfWd3dWbXu
cc4E7lU9jHz/XXS/WX1n+Xr5DPkO1VQDy+6JtQAfybuu2Fd0HqSzUA6kOK14
nVfcjt3P0X8O6kFIfvUOni669q9F/5laxwjFCvVxp1Q6zsrPLa+0fP8IOlZP
/N6M+7z//g8j9d1pLthuJbf6ejeoTw3dNPWQSvZLjxdtfzr3O4FvpL5fe1Lz
11lqjRfCfxMd8J1n1DuWKVdST1O9yfez7rXpjn/E3CsTxyzFrk2hT/4sMMmb
75TUdZ3OcVnecVMxUzraWrJ+5adPq3feofzr8eBLa+D95az9tHLYYqgftjPv
w5J1KF0uCL7rlZJ1PDDYie686lr1BDo32DeO5UwOhdpfOax67vIZL8TOXZSj
6U4NCj5cvlw9dN3rks4occ5S3ejzuS7jXvf+1Pi+1P5D56GzUJ2kWlT/GSjm
yTanp+6vfCn0WFS3Kx49W3JNrnr8XPB1qXmoXzs8+I2RiWnlL+Qr3gpxYkzi
u9me8d2bk3Otrf9qPg09EPVC5Fvk7+Rffl+yb1Gu2gifn6t/WrZckk85yaN5
1/kTE+cKsmPZ8M6C8ePR//jE/Vv1cY802Hcq/sseNwZfmhbtb+V37wgxRb2f
x4Ke5Gu6h3V1bsrXlbd/peTaXTFG9bvOV75AMnwc+nair03d16sD/qjovug/
kLFXre9TT2Df0McYhV+8P/QJ1S/sV3YvT/2/w6G/8Uni/pr855+Bg2PL+Dfo
T0ycfyoPlT3JrvbWu3+nuPkMsCXII7nk9xQ7dX+UayrnPDvreKLYr3xFfcHR
4b2+zmPKZdQrUD9ANqn+QEvoM7wV+pkDUvuexSEWVIb+pPqU6je0hZ7DPwvO
g/eVXCuqZuza7HpoXKCR7Sifl/18J3afbRD7Gpf43n4v8f8xqmevbPI83RnJ
Jx8kX9SQWBbltbIf9SDTGp+HelfjQn9Dfk72djDMbw/3Tr2ue0MfXLbQPdjh
urL5fFbw/zSKG4PZy4zg6+Tzuoe4pPuuOKb/MNSrWRz+xxC+Pe9aWz3CW8ru
694MvCPve6T7NDX0rC8JfXP1z3sAr078v57+31Puf1fwZYO7OIaqDzo6Ns3K
WtvpoiDD9hCvdK7/D2RyHpU=
         "]], PolygonBox[CompressedData["
1:eJwtm3m81tP2x791qlM9Z3jO8AynTsPJFA3IUBooJAkXSSRD5qIiFdFA5iHd
KyTSSAqh+lFUrqIM6UXczD+JRHQTheTen9/7bZ0/9utZ+7v3Xnvtae21P2s9
NRcNP2NY3SRJbihIknr8flyZJB0aJMl00nPlfG+VJPXLkqSwOEm2NE2S17NJ
Mrp+kpxeJ0leg26eS5Kp0E9Tvwa6Md+eK0mSRaQFzZPkYdJM6MHwyFYlyW2Z
JLm/IOrfAd2sOkkOh/faoiSZAP+zmiRJHejtpUmysGWSNODbdeT7pZPk3Jok
+YbyAeTX0GYvbRcgY5eGSTK2MEka0X+O8g2pJHmD9hfRviltWtL2ANpMp2w+
dTpTvzP9z6ftfs2S5DN4XUz575RvIX8c8nYhvQc9Fx7fwus00vwWSTKLNoOR
v5LJugT55zO+56n738b8MsaByNQffmfB7zP4lTJ/q+j/LdI+0Bnm5xXqrya9
RtuTqfNf5B1M+Z3I2pf+XqWvl+CxC14TqTOZuqfB7x3qXluRJOfR9zBSx3yS
rGB+dlK2hDadaXsodb6C3wfkbyK/Bhk/Yl1XMt43oE+n/E/Kv3c8lK/gW5oN
sIzyV6BLGfN79L2e1Ah6Ff2/Sv/7kv+Tvq5mDAnjfJ0+byD/KTzqIntj0g7o
ebRpTf1DSC9DFzLe+dDPkJ6E1760mUTbS6k/nvEOYE8UIc/XyDON9u+wPnOY
3zGkhcz1R7TZQNvv6L8H/DZSJ6HtHuqvgn6K8sWULyE9Db2ItAz6JdJi6IuY
w3NpO4s+r2DuDmaMVzLWZ9kvXehrMuWjKH+W8lOQbRbfDmF/nE//M6CXIP8k
9ndX6r8APQ+ZhlHWjPkfAq9jaTOXtk+QekGPpM13lN8FjyrWpw0yf1Ece8y9
1oU2YxjCKGToCl3GOFrCeyJtXoHHWcg4i7YzSW1o/wA8P+H7RtLd0JeyfoXQ
v9JuBeMfmA/ZlLE/9DPM6Vjm5wbSk9DlzO3l8G6CvA/Rbj35/ci3Yc2nQK9k
/Pcg26+UrYP/ZWUx9i2ky6HbwXMOsvSkjwuRbbVrRdsnSGnopszzGM9SI84N
+Tep3x56PN/6Mb4JrO/JfL+WPu6mr4OhH6gTMijLkZypSsYymPJxlP8v8zeM
/pZQ3gv6pWyMrwXyL4Vuz5if8WwzvjGMbxlt7qLtDuRfivxnU76a8rfh3ZC5
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
qyPUFXnqjIHXbmSsrhv3yS/Qb6OTf6L+o5yH39gfe/OBXSzw/sqHDlAX+CbM
0u8w7Qfqz+bbcOhO9D8d3v9mfAPp60Hq96gbNrm2eSv2e7/CuGOG0d/FqRib
Y3wZmQfTx1P1Y0/OQ5ZP4ZcUh82v7b8JHgN9b7HmK+ijUVHYEtpE2kZNi8P2
1abRtinKhL51jI0zgWmIbajD1eUL4f8t+Ur439cqMACxgI9Id7cMHa+u983t
2/uoTOjKA+n/EdbjLHj0SQdGIVahzlf3byF1hE6zPnsouxMeTZrGHeZd9ivf
UpRtYI2mkG9PqoAeVBnn+STkX5UNDEksScxH7EfMROzkJPrsR9+fs58+hddB
4g/VcSY8G8eTjiH/J31MZixH0P88xrKG+X8S+Ttqr9DX36hzSnHYpNqmO2jf
C349Ge+oqrBRtVVn0L4bsqysCNmcb98SxfDoWxA8b8wExiTWVJc+W9D3Fnjc
kwqdpe7aA/8+8D9FDAj6PtqnWa81rM8k6MOo8wB1v4THIc0CUxJbOob0qbY3
5fdT/jbl9ZrFmfJsOQfOxWrSKuhV9HkKY51B/S+pX8683eX5oE1Hdbt6pyps
RG1F95h7rVCbifK+pCLouoxxOvQM0lTyM9gT35QGxiXW1SYXun2p+pO5+Z45
HlgUNri2uDastqw2qrbql6R50I+LcVTX8iwJm0nbaXNl2IvzSWuRfzV1JlF3
KPIuqgqdpm57gjSLtk+QntKGpLymSWBQYlHn0+ePTWLOnLtupI3Qs0k12o2O
B3od6aiSmBPnZhXy/kzbRaz5n+yvrvS5i73xHak19Kn0dxV1u8q/PDAFsQXf
1L6tb2NONpbGG8G3wnrqvylv0pu2JY2FPt4+kO8Y6r9QGpiE2MRMyh+n/FXG
0wf+vajzB/Rm6jxA3UJ45sQGtaEpG10Z532mNg30RjHTVNgM2g7PFcded482
pM2ZtO+dDoxNrO3YbNjT2t/HQb+qDZiKN5xvua8qA/tcAP8v4Lm7LO7OLujD
99BVh6bibvTO8+77kzG8QZ/d1EOVYfNp+ymTst1I/g7yfZBlFfK3JX2Rijep
b1NtFm2XTqQOqXjT+ra1jW2P0M6pExiYWNgWZE41iPflaHic2iLy4j+9oOtz
JosaBGZZkIk95F4SoxarXur5q7VHx/FtNvv5V/Lbma8S9vM49kRxg7DJRkP/
ggzbkeV70k7vsxbRl5jT2dALK6N+CzFy+HWgTmltvi10vZLozzdKXehGmSj3
zizMhI5UV77P/FU2Cx2iLqnne6pF6Ex1pzpV3eqedm83FCOqCh2lrnINXUtt
IG0hMUCxQG0gbSHflL4th5P/Q/3KBLZjb1RCH1U/MLdS6Bbwu4e2l1N+C+Ub
yf9BfjJlb7DW03JxF9zDGO7zfaDdXz9svC6pkFnZ1Vnqrp606UWd7aQ+9J3i
2xjK+nuGvEuQuV4qbD5tvwto39J7k3QJ9Cba9CgJzF3sXcxK7EobXFtcG977
SRv//lqbWNvYN4JvhSPZs083DEz88HxgFGIVO+C/2LPLmv9I2W7G8JB4OXO0
Uv1CHy3p70LWqAPt/04fF2XCJtc218bR1tlF6l0Sd4h3yUr25/GFodPUbefS
X0FRvDl9e2ozaDtoA3ZNhU2kbdTGN11NvLF9a59Ivi/5HbSZTb1PaDe5Zbzx
fOuJUdwLfUs+bANthInQA7OxPz0T50NfXxZnRUzme/KD4D+gOGxkbeX/VMZZ
8cwkjG9G7fmxvliOOlBdWA8mm1rGm9m38xLXkPWayJgLGPvz3rliTxVhK66l
/Snsle7aXMg5gjYP1wSmIrbim8G3g29U36q+UXZDb6XOnHRg5mLny8oCb/B9
Vgd+rXNh+08nHZgLH4W+Cn1C+oYmagMyvrO9U5vEmB2LYzoiGz4jfUcD6fvh
qhiDYxHDEMsQsxC7UOccLh6BPHfzbSLpxZrwYejLENMT29uiDyodPg59HZ4Z
z44+Jn1N3rneve5h9/JI9vTBpXHHeNf8Qv2nqD+P9ENNYC5iL9oE2gYjGOO3
zOduxnAt9DW+F+E1R3uD/j6Fxx2+iWj/Oe37Mf4zGP+/4d+BsvdIt6QCQxdL
90x5tsTgxOK+rAzdqw4uZO0W0+c2+u4EjwOqA/MQ+1AHqgvPz8d7Qvv2Aujj
8mEL+OYrhVdlecgqBi4WXpOJt7lv9FbQbRnDjMKwIbQlbi4LLMD3/07WZyo8
6jcIH2JFZYzRsaqz1F0HIt/kosDMxc4PqgjsWUxebP74fNjnvjd7Qqfp84+C
8EmUZsLG1db1zvbuHl8Wd4E284/0/yB1BteLN9jH8BuXi7tBHuNzgamJrd2K
DGlkyWTirvAOyGXChtKWEuMV661TFViUmNb/Ic8e+iylfVvGU8L8bqP/VwsD
Mxc7H54J3+rz5Ccwtgeocx11F9HfGU3D56HvwzYn6v/QH1MvdNwR+fDx6evT
xtDWEJMTm3uKdCD0rfnAnsSgVsN/MvvhGMo2kG5sGXWsqw9FX8rfyuN9uhWZ
9smGTlQ3ihGKFfom920uhimWqY5SV+lj1Neoz0LfhT5FfYuOwbFczxzMqQmM
SaxJH52+On1O+p7EBJpDj2c+FjQIzP/iTGCgYqHN9H/Cq5L8Y6Vhc2t7a0Np
S+lT1rc8m/yQgsA0LsuED09fnj4tfVvazNrO+gT1DYqpiq22ZUwLGFtHeO5s
HGfKs+Ud7V2tD1Rf6HDmoF1pnGnPdhP27IaCuFOaQp9FmzOLw+er73crfF/0
LDOeLbnwEegrKBeDYX52kr/L8ZB+gb6V/vumYg+4F7rnAguURw/oXYy/OB1v
ZN/KYjRiNfow9GWIoYil6CPUVyjGKNbonb21Vueoez6jfFrTeEP5lhqkDV4d
MiiLPlB9oepUdat3iHdJPhO2jTZOFfRj8BuZjjlxbsQcxR71Oel7Wsy3M8WI
tDdbBMYn1leX8hMov9o3l74Lvq2pCZ+3vm99wvqG61eF70VMrKAqMCyxLO3V
Y51bvl0Dr39oQ3nWaT9d/zrtb9UfXRZ7XzzksFz4BPQNuEau1eWs2ZXF4RPW
N9wV+T6g/bviqr6nkHkgvAfoX4YeDo+vWY+d8LsaemxZ2H7aeNs5L2XlUaaO
UleJEYgVuKfcW86xc30B6YrqwIi1raspT1dFTIOxDdpM2k7uSfemmJLYkpiF
2IUY91sVobPV3c/RZm9N+Pz0/S0hX69V2Izajj28Y1qEj11fuzaftl856/tu
KnyI+hJb02Yd5etd01bhIxJr0Of2H/p7zzeu/guxCcrz9H9IcXyzbHhlvFXU
+e1yIZOyGZNgbEJX8p3JF3H+7hWvqwxb0v05EnohfTxSGDbVK9nwyYvHiNe1
Y789k4/9nCXtqYg3nG85MSGxoenM/+PwupPzlqXuavdincBcToD/eObgcMb6
PfPdrirG4Fi0QbVFp9F+DnXvoH1lPu5U79YfqNO/Vdiw2rLvMGfFTcKHpy/P
OXQuO5aF71tMqRnfplCeLYs71rv2ZNofnw4MTyxPm0/bzzebbzffuL519dHo
qxHzEvvSR6uvVkxEbERMRmxGTEdsZyHle6rC56HvwzE79lLW9NHSwODE4vTp
6dvTB6kv8hLyrVKBWYhd6APXF+6ed++LIYsl6+PqDj3dN0tJxOAYi7OQOmd4
N8BjiL4aZBqPbGvJFzCWKXwboF8fnq2qI2bG2Bnb2NYYBmMZ5rtHaLuS8Zxa
Fm943/IHqONov1wfRfPow760CbQNxDzFPrWRtJW8Y71rxTDEMjyznl19wPqC
f88H1qe/oEcmMBOxE21ubW99ZPrKjDn4nL33aTbeCjs4zx9UxJnybIkhiCXo
A9YXPJg9ek9ZnGnPdmvxG+glpDs8n/D/L/z3IW1tHBi2WLY2hbbFXZRvqgqM
eHOtfV+djjvau9o3tG/pPmXh+9cm28q3f2YjFsMzk6kKjF2s/Uzjr8pD56p7
jXEw1iHFmMYVhk9f374xA8YOeCY8G8upc61YoD7smsBsxW69c717xSR9f4h5
PuQ7pSzeNr5xDs1FG9uqk9XNnnHP+nL9usYD5SJWZijyP14eMUPGDmmTaJvM
IPV0r9K+X1VgEGIR3rEbkPcU5v+rdPic9D2p89X9YoBigdr42vr/oPyd6oi5
MvbKN4JvBX3i+sa9Y71rNyPvrHTcGd4dvll8u3inebfps9d3r0zK5hq5Vp4p
z9YQ+JcUBcYq1qpPWt+0Z9yzflQu7qqbmJ/OubjzvPvE7MTuTkKm3si2gfod
W0VMjLExr5GvbBU6R93jm9y3uXvKvfUuc/o++72K8jXpiCkztkwdoC5wz7n3
jtRHnwqdrm4fwbeLKbuUdF11xHAZy2VMgbEF2ljaWtoY2hruWfeuOkxdZsya
sWtvGHPQKjBdsV3vAO8CYyiMpTAmwtiIFazZjvph42vruyaujTpB3SAmITZx
pPetb6lMxNJpw81hf4zNx3lwj90I3ZE6ndLho9FX4x3lXaWNoa2hz0DfgT4s
fVn/rI330Qe3EnphPu4OfbDGXngnejcep45UV2QC6xAj2pSPmEFjB/XJ65uv
m4u3qRiBWMHkTMQu6lO9F3q/XOS1//fJhY9bX/fHjKke4z62PPxF/xaTygZG
KVa5g3pd9OUwno8Yz0ZSj1axB9wLrrFrrU2ibWId6xYUB+/OzHGmOO4c7x4x
HrGeXDZ8R/qQjG05oTywaGM6JuVCR6grxKi3sVYfZUPXGePyCfTYTGC14oti
4e8xH/9XGjF3xt79dQemIsbKWKtOmcBmxGj0Jegz03emTle3i7mLvctDXvqg
/vJF0ec5ZRHDZizbEWLczE3XsvA9vSbeVBaYstiyGINYgza1trUxOsbq/FYR
tkSONX6W9VuTC1+36zMmE5iL2MuBpN9zceY8e9p82n4dKiI2yBgVY1XUWeou
Yy6NvXSOnWtjvIz1OioV9o4YbY6ylzMRu/NXDA/0i7V5MZdF0DflQ3eqQ2+G
7scYdxZHzIGxB2LIYsneed59T/PtIPJtPZ/iU6nQJ8aUGFtiTK2xtcacGns6
MhVzZUzAnOKIQTIWScxf7H9wJu4+feZXQBfnQjeJz6xh/m7LR6yQb8bb89Gn
fRvDaSynMZnGZopZi13rM3b99Ck+wV7q3Tx8g+Kdx0GPy8dd5hkeD/1hJsr1
mf8Lel5RrL3nfTs8r6bO5w1DZ6g77moRvnXr3wJdlor3uu97Yw9/YY1erxdt
rqHtzlz41p3/bbnA/MT+xOTE5tZlotw3/FvQO9B3JcVxp3i3iGmLbevj0Nex
jTH3LAnMT+zvydr4OWPUFkCfkIvYN2OYeuYiRsJYCWMIjCU4ORfYmD7KPrmI
STU21ZhoY6PX6X9vGG/ecZl4k/k28w72LhaDFosW8xH70Uegr8AYYWOF9THr
azYGzFiwu2vjU5XvPt8jVfG2EMMvrQqfsG8h30RH18aEGBtiTLSx0VNy4R/X
vz2+PGIwjcXUJ61velgusCD3cGl52NDa0saoGKuiz0LfhTEnxp6clA/bQIym
N/S1xtI0DrzlmrKIEZhZW36I7+pc5H0TfFwWMQViR56xTo45H/Jr//TJR0yO
sTn6sPRlHZQLrFAfo75GYwbED8Wr2pRGjJyxcsZUGFtxVSZiJ8RUxFbEPMU+
xfjE+vSZ6zs3hmQ3v+vEUOGzV/sY+pxsxEYaQ24suTEtYltiXH/XL0R/p9Bf
d/V1TWBelhvjcno2dJC6SExVbFWftb5rfZb6LvVp6tvU56zveVAmsOmW3j/G
Q9J+RMN48/j2McbZWOcXSeXZ2HPuPet8rT1LGtow3ji+dRalIlbVmCJji9zD
7mXrfJaLO967XhtCW+LcTMQPTxIzzkSMm/7pGsY0KhsxSsYq6cPSlzWoIsqM
GTZ2WJ+QvqFu3m+U/5oN29kz7Fk2httYbufYudbnq+9Xm0XbRZtF20Ufg76G
08tDF6gT9kWegZmQzTPl2XKNXCttLG2tBiURW+T8F5ZEjLCxwlt8j7Wq9TmW
hI9OX92E8nh7eiY8G6fC75XSiMk3Nn9CUeC1zn8f+niwKOwXYyoyqYgJNDZQ
e/fHVMRcG3ttDFKFbw5kWlocMdHGRnctDftCDNzYu3+VBBYnJmfsyP7ZiB0x
L1Y3tSjsafVvk1TEuBrr6hvMt9ifjGEnPEbyLaHsQ/qbURw+GH0xxngb662P
Xl99VSpklae8xezE7owhN5a8eypigdwD23zzZeO/B4uQp0s+fLL6ZvXZ6rvt
nI8yY9iNZW9fFHimb6xS75Bs+CbFjHtmA5MWmzbGqX0m6ljXGNCbiyKG1FhS
x+TY/I+G/9XwPwn+N6FHOvjp8zwa+qaSiP0wPmJcSdhY2lq+YX3L+h8R7Qvf
RI1zEfOiP0MdNaIs3rC+ZY1hNpbZGFVjVR3Dwb5BsxH7o02nbScmLzbvm8K3
hXvKveUd412jT1/fvj5UfaltsxFb6Xrr+zCmWuxIjGlsUZwRz4qYidiJPjV9
a2L8Yv3rSyJWWfvOWCHf0L6l9THoaxBjFGsUgxaLVmeoO+5T5zG/c8tjvd2j
T+TiTeHbwv9Y+F8LYxSMVfA/C/53QUxNbG1Ore/GPeXe0obRltmVifl2/n8y
Nq4kbF3nx1gpY3iN5fXM3FQUMeHGhouBioXm8oHdWK4vJJMPLMb5EHv7Rgyh
OGIMjDWoaB74m3h8HrpLi/B/6Q/r3iLekL4ltaG0pS5pFraJeN3gZhEj0rHW
H70JenBJ+AfEN4dAX5CJuXK/q/uyqbBVPOOedW10bXUxTLFM/2Phfy18E/o2
FLMQu9DHqK/x20zYM2Ko32RqMc90+Jz0PZ1UHLpZHdy2KP4T5H+DjPkw9qN+
cdji+hufh/69ImxdMTGxMd9QvqV8I/lWMgZyVK299wt7+uhM5LXRu2UiptvY
bmOWPsvGf3L8b44xocaGGuNjrI8xDsY6qOPUdd4phyLfnuI4W/pTfi8On36n
2vibZ31zl8RdqD/oFnEAZLo1HZiT2JMxFsZaGDNm7NgxyHBJg4jRKke2Pdl4
u/kfgb3+N6AobAf1vbZg12zYNsbw+d8M33C+5bTZtN30UXn3v+j5NB6wImht
An2LxowbO65OV7cbs2PsjnvMveYbxLeIMSTGkhiTaWymMh6kLct4bk/HmByb
Phx9Of4HbUEu/rPlf7fU8ep6fer61o15MfblxqLY2675SbUYmViZOlpd7X+m
/O+UMfnG5uuT1Ddpn/b9/0xrwKc=
         "]], PolygonBox[CompressedData["
1:eJwlkk9rU1EQxQ/FxrQ8X2PSPB81qUlRWipVKOpOrVCzakJx5daAKYkxaYMI
in9iQV0Jku/gWl3YfoGii2RVERdFF4olSPwEgvgbZjFwz5lz58yducVq+0Zr
TFKRGCdORdLPhNQIpH4onQRHxB7nGtx3cjG4l5cycCeIO3DP0lKJIisp6Qox
pNab49IH4t+kVIZ7kpQSMT7EY863A69r9Zdz0mXubIOfE/dnpbPw3zhvoRvh
sQSuTUtvafjmMXyJDfAC/Fd0m+h+o1sEX6DeVfJrKfc6gudgRlpH8wptH93f
rHQe7R/OncC9zNN4y1/jbhn+44zPweZRB/8glwe/h18FP4T/BDfi3kv67oFf
h/4ee1cB7b7NCe0vdHPg08Qh52bgOdNcLEjvpqQx8AveeImZnoH/Am6hG6Kf
B1fxuAfXIc7hsYRHLvK+BqHP2+a+An+dGVR4x1NmkGQGxch7+Bx6zjS2J9vX
A7hHRJP6aXQ7nG/he4B+Gnw09h3eDbwn661Ljw3y2dD/g/2Lidj92oHvxfZj
PVqvdatPVPDIRF57N/Rd2c5shjbLLlyJ+zvM+D/RYFcR
         "]]}]}}, {{}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwl1Gtoj1EcB/AzkogXzGUTs/80ryxZzeRS7mK1XGJ7McqSS8nyZrnLhiFt
SYkwzMRyycwYZrPkOtJiS7xwzyW5hJq7z5MXn32f8zu/c57/+W9nsfyCmcvi
Qgjd/ShKCuFOvxB+9g7hupwcC+FIjxCWqlcbv1c/JytSQliuNjA5hIIBIaTp
SyeTRerH9eTLtP4hZMuPPUOYJQebj/G9r3dZl2H9cHO55ubyxP5bB4ZQTLn3
jlAbwz31qXICf9UXWLuEM728V20IwzzHywSqPK81X8hQ+yerpdJkn0/e/ZZd
9jlmfIKK6FxU067+y/oQ1WW5fNMnhD0yXY7y2cayz1y2nMKIeOeTuZzSk5cQ
Qg637LXNuJSN7GYnW/S3yFb2cpeblOmvs+4SNWRH52ZG9PswjksM4Y+8ry/J
GWJsMFfGdhqdtVBeVb/CNVYaN6lvkiUUk6o+iFb73LbfHW4y21wWs6g1buQy
O/S1+3w/2M8hDrDNOY7KKjZzhMM066+RtZzmAucZqT9PzqPc9/dSFurNlCvk
O5lBpblOPkNHfqjXywYquUgdu9WvyRvReWnmFsOctbfsy3H7nGSV3uFyjXxv
/7Oeu5jvTJz+h/IRLbTxgIN6n8sXPOM1r8jUnyATo+/IPuejv7Xob1Wukx+j
83ruZr4rHfR/ld/4wBc+c1TveL0T+G08RU5imv6YcUp0VvvUs17vTHMb5Cc5
gwb1JD39GW3NdOOFLCLfvVvsu86Rc8jjsTtZJJ/K+XKiu1fifux0L7LcyTb1
Us8tskSm6ymU9caro7sjx+kbzXbrpib//3/xD5SMqA8=
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1: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
wrxk4/8HyPLhxg==
       "]], LineBox[CompressedData["
1:eJwV0blOlVEUBeDNKJTIJGJDJYNPISJqRBkVUIy5SgxB7oCIMjhVNlZ0NvAG
JAxGqdBEHBEFSl9BRSDaOXx/sfLts/Y5PwTqUpnOdF5EzMrEwYhjlRGTbOFJ
OS4npFkel0U8kY8VER9krCrilvSXRzzibT7gGB9yX967907eSp9+VNfL+xzl
NHO8xz15496avJYefU7XzSlmOckMM4ciVpjmC2b1XUnPTjbqr/hGYXVEgWya
0/oJ++cccO7gDNv53f2//COluhJ5KiPOQ3yW/Cxvz3OE59jgzSW78P1/ui/m
Yf1d8zJvso3DPMt69/vd+Sy1NREbPMI79kP2e/avuCR9dmd4nafZy4vySWq8
Wedhjnt7w37X25dclAt2p5hiK7/Z/eYvydflSVYGnX/arXJBmnTT/vdXOcVG
HtVfkx33UpyXZruvzvXJ72cu4rZzqbnYXMIt58Lku+bL/JH8rTgnB3Sbzvnm
cfkPZ6hY3Q==
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV1Xtszlccx/GjmRkbm7pfqtSQYdNliMumu1TMdC4zQsUlLhuWstClFmx0
QWOaqYxmNFFBxSVamcqQqWVlK1lZSlKSTtLJOos16SR0s9pe5493Puf7+V7O
Ob/n9zxPv4Ur31nRKoSQnBBCTpcQznUL4TtkW3+bGMJWmo9PkczvjZ87hvBv
9xD+QyWmyE1ABk6IT+MU8tVd7BrCZXyFGlzB5k4hFNBdyMU25OEH9TP0ZeKY
eGZyCNMwUv14moHdnUMYR0cjVU2hPX+jRbRY7hH+wX2zSnkno48jKMGX/AZ3
aESFuH+fEPrgeXfNTgphLQ7p78rriGHWg2kqyqzfl1+IFnNe403AT+aMpSNR
xN/obFtQx5/Dm4nh5r/UN4QNeh/YO7lfCM9imtyfchl0SO8QFtDDPUNYQkfI
p2IIsvQl6V/JL05xLzV/mF9Kl/P22zddXaX4b/4luiGeT89WvWPk0lDB/5h/
hmbHe9lzE70i3kav0YnqCqw36Xtd/3w1v8R59AbNpMfsN0Vdc68Qfue97Nm0
8BP0DOWluH8Smnm/yheZl0z3x/vSNuraIxHd1XdQ2xbdxX/JH1fXwq+gD8T9
+c/hBbzIH6p2EPqIz6gpxwB1F+nl+OzinVHZw0x1VXS959bJOo1/Xc1VJDjf
e/gAryBdbhRdi+Fqq/VN5L0h/ggfog1u6r2FyXK3aa7ZNWrvWDc43yTxXTqV
ltNTcb5nOQpnxM2e3QBemXWBmod6T4jv023io/yl7nNQ3REUYypvh5pcNc3O
tkvd4Ph5mpkvXiO/grdF/qi6bXS1eD2/l7ierhGX8s+LL6CGN4OXypsuHkEz
xSP5B8xuMTfB/JP8Rc5wmhbK3bG+h0bkxXPhmL58OlHNNbP6osD6Et0Vz2TO
u2aW0Cm0Lj4XPbW0UE0RKq1b4ntKE+Sa9K0S52CovkFIQad4bixTM1fNbPPK
+PNoOT3HGys/Xz7N+m2zc+T2iNdF5QUzN1s/VL+RLlZ/SH4+3ac+k5bgBG8f
rdeTqLYbnkB71PE6xM/KrMfNmMl7ks4Tt+XPpo/R3d6T0fyddC/OmnkB59Fg
Rpa6z/Tm4RMMU5tP78ptUVNkRrr1Yuvx1q/itp5cep3ewk3Uqmn0Dt7DXPvM
wnQ8ip9lfN/jd5IupHPRxrxqM7q6b0dcQZX4LJ1E8+k9dY1YLb5qj1ZmldJl
4jP8ClSiRG2W/cutyzDE7IEYrr437Yf26IZE5Klfr/4ubcI0983AF867kmZj
Obbb63MMis85vkdxL+yTK8JT8XtDV9nnFv827mCv+Ca9jqvIEjepazJnCe0p
XkC70I3mJ/HX0RS6mb7F3yE/nhbSWfbead1ZbjftEb+bvKfpdnHreE7aLv5m
89fZMwdz9D7Dv+TOl+P3VO5rd/wGB3Ach+PnxC+K90LwGbVDaxzkN8R3AbWo
j+8dBvLHxO9HvBv22HcXxtnrRvzNjr+9eGj2/fi/pfa0/DmcxI/4HivcN83Z
0uPvAMZgBN6M30f7VKECNajG6viZmdeEBhTaewcm82vEtahGPepQzK+kVaiI
v9dmLHLGK/ZYqq+f/P9cPlWA
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1: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
+f8DSbbyxw==
       "]], LineBox[{5022, 8026, 8016, 8021, 5022}], 
      LineBox[{5846, 5071, 5842, 5838, 5846}], 
      LineBox[{5377, 4826, 5535, 4825, 5530, 5683, 5526, 5861, 5531, 5279, 
       5373, 5369, 4597, 5550, 5555, 4828, 5554, 5985, 5377}], 
      LineBox[{5549, 4827, 5545, 5541, 5549}], 
      LineBox[{4834, 6125, 6118, 6123, 4834}], 
      LineBox[{5019, 8011, 8004, 8009, 5019}], 
      LineBox[{5781, 5004, 5780, 5776, 5781}], 
      LineBox[{5775, 5003, 5771, 5767, 5775}], 
      LineBox[{5017, 8002, 7992, 7997, 5017}], 
      LineBox[{6233, 5020, 6232, 6228, 6233}], 
      LineBox[{5834, 5070, 5833, 5829, 5834}]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1: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
jOYiJ36v1Rhrjfl6TDSvmfj/AdmPJfk=
       "]], 
      LineBox[{7718, 4835, 7713, 7708, 4651, 7538, 7545, 5285, 7700, 7695, 
       7705, 4829, 7706, 4831, 7543, 8239, 7718}], 
      LineBox[{8025, 5021, 8020, 8015, 8025}], 
      LineBox[{4841, 7749, 7743, 4603, 7520, 7525, 5294, 7726, 7720, 7725, 
       4837, 7731, 4839, 6132, 6131, 7530, 8218, 7748, 6376, 4841}], 
      LineBox[{6124, 4833, 6122, 6117, 6124}], 
      LineBox[{8010, 5018, 8008, 8003, 8010}], 
      LineBox[{8001, 5016, 7996, 7991, 8001}]}, {}, {}}, {InsetBox[
      RowBox[{"-", "200"}], 8914], InsetBox[
      RowBox[{"-", "200"}], 8915], InsetBox[
      RowBox[{"-", "200"}], 8916], InsetBox[
      RowBox[{"-", "100"}], 8917], InsetBox[
      RowBox[{"-", "100"}], 8918], InsetBox["0", 8919], InsetBox["100", 8920],
      InsetBox["100", 8921], InsetBox["200", 8922], InsetBox["200", 8923]}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704862081064122*^9, 
  3.704862099353795*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQWUVUfW931Du2CNOyRAggR3d3eHxqGBxt0J7h4CwS1B4oR4AsRdJy4T
d5fRzGSmvvrtU3W6TtPd9L308633fddz14KE233Prf2vXdv3rp5j5k5KmzZm
bvq4MRU7zx4zc1L6uDkVO82Yrd+KuiIUumKS/jOxYoj/V6GQ/Ute6fxl/nGJ
/y8i/ymg/vSnP6lVq1ap5cuXq1tvvVX95z//kV+bMGGC+uSTT+T/s/id+vLx
xEt+/Pbbb1cTJ06MUpMnTw5FqdWrVyvzCtWVv+Mv9Ygo+bUo9cEHH6j169fL
vxqEsfhXXnlFrVixQi1evFjdeOON6rfffqufy4//97//Vffff79aunSpfHzv
3r18vIFZEb/Or/KvfIaYS8B2hQd+ivynoPrb3/6m5s6dq3788Ud52o4dO9Sz
zz4rn/7666/Vv/71r+x+J1RPnpGcq2ewknXr1vHzhvKxhNx8LJQV9PXDWPqv
v/6qFi1apH766SfB8syZM+rAgQNm6bl7BtsH1/z973+XZ9x1111q//79oZw2
4RLQBTYhVr3wwgvCGPbFv3fv3h2V84/r5ebT0bLkY8eOqS1btqhvv/22Qe6+
8/Dhw2r+/PkCHgTow8P/18/dp59++ml18OBB/8dffvkln87VimMFYDbKvr74
4gu1ZMmSrPCOzvmJmXB+6KGH1OnTp/3f+vOf/6zWrFkTlfOP6+X8Y28JMYIz
Xwti99xzD/8OXeKjUeajcNyRI0fkR4bTQw1y89FYEQ7sj95ZAeaOO+4AiFx9
cax6//33hbW1SJFPIyNOnTqVE9LZPDET0g8//PBFv6WPf1TOP66X849jzbL+
+c9/qp07d0J76BIfiTZr5wDAlAbdBjl/yi7z3LlzcJF8mZW+v/zyS66+M0aY
QCseNWPGDBHCf/zxR5YyIzrnx2VC9sUXX5Q12dfzzz/Phkfl/ON6ufv066+/
Hjh5H374IfxxiU9bkH///XcR0o8//rgL8iW+87XXXlPbt2/3f4zY1PyYyxV/
//33atasWeqHH36Q70cIaBatb3B+77335As01npHcnxiJpyt5P7qq6/Uv//9
b7V582aOd1TOP66Xu09//vnnas6cOaIWoJdTu2/fvkt8OsYQhXLhx66YuMQX
8hbiHP7XfKiOHj3KYc/lchHfM2fOVD///LP8mHOg2cSCfP78ebV27doAyNk8
0YDsmX4xYhVcd911auHChdY+CUXn8LP6ufjcM888I/YO33799ddzYHP8nJUq
sEHQusv5e9jDjRs3+t+jKc7V+h555BG1YMEC+RxAarPCFwtw8Lx588xvZv8s
A6OwbxgWt/v/KR7z6z0bxF8B7o+yskn+FZ3Fe/lz+V6B//1snn82q9+Tk3rF
/27k/1Wf/d+N/H/ks7naSO1t8oow2uF7wpfig1a5fK91Ln+vmvwdo86ePatq
166tqlevrmbPni3WbOFc0n05QQaX7nz58qm4uLiQ93d+VbeuRHCyWlt273s6
sKo8NFYMmhIlSqhPP/1UPtSpUyd1/PjxEhfREKmP7q6+YcOGEijz3kvG0VLR
0dGqSpUqYsJ27NiRL8/2fXfhJ0+eVH379vW/js/07t07q4VH5vTKj2PEpMsv
MBUoUEBdddVVKi0tTZUtW1a1atVKdenSRRUsWFB17tzZh49AgV6Jh3MpQz6+
8WOPPSY+sWXal156Sf3lL3/JYJpQgpoyZQpbq5KSktR3332nnnrqKVWvXj1/
YdqaDFkr2Pxb/hXvrzaD7shcUO/HKbJhsCWBzYoVK6qVK1eqEydOqJo1a6rO
9Uqp0T1qq54tq6oyRRJVSv5YVa5EEdW1eW1168ZpasawzqpaxdKqUpliijdK
8Zde8c1r0lXdZv3U8OkHNAr8HaUath6qruy1PIACmw6UCQkJ6ptvvhHHtVGj
Rkr95VF1723r1RMHx2gU/vb0Yv2Js9uHqEfWtVPfnuyvidJ/x2bBApH5jDaA
BBSY8EChNywf267Zt0WLFqpj3VJq+tDGani3WiqlYIJKio9WVSuU9JFYnT5A
lSpWSFUuVyKAxKHlaZryIQEk6rUYKHEIvtQLoyWqO++8UyUmJqqoqCgVHx+v
PvvsM9kFYf0MNCwYd2wepB5acwkwInPsXL4gwmMD3ngbpUuXlqPQ+triatGg
GmpE91qqQHKiyp8Yq66uUEo1qF7JQ2PyAFWiSEHVqOZVATRuXDxGNWk/0kGj
oCpSo7N8vX0hEgsXLizfw1EEFViWY8jhB42zt65VTx7K4I1cwcErCxcjJy/M
xYLjDxb/+Mc/xKtp0qSJ6tq1qypeKF7dvqSlGtC8vIqNyacqlCupihWMU8kJ
8WrSgPZq8qAOKn9SgpwVF4sdc4erFp3TDE94f6dO3aeK1OzinJFEVaxYMQnL
EGQpV66ciCTOjWCmsbj95pXqhePjcw+FZ2cVFaI48BBVsmRJIebdd9+V/980
tq6qXCq/itMENapaRPVuXFYTF6WqlSuokhLiVEx0lKp7dQV1av0UdcuGqer0
+qlCXAlD3KYZQ1TrHpMDxA1J362KXtvNIS5KFS9eXG3dutWcP/MTTdSpI8vU
qycn+ht826aB6uG1l6bK0z9wdqlSpcy3JAl0VUrnV2WKJqqJ3aqoL2/qp+5c
2kq1b1hJ5c+fqOLjolX18gXVgoHV9YGc27+a/uTW2anCytAjpBUzpK2ZPFC1
6z0jQNqAtG2qWN0+AdL0AiQQkZm000evUy+fmOCTdmJtP/XYxg65JM28vCdG
y4cS1Gs3dJMdG9yygkrV7DY7tYlaO7K2Wje6jtowpq7atWBkKLA9S8b3Vp0H
LgzQ0HfMRlWi/oAADRUqVFBTp0695PZcBg3y66E4tSK1llo6vqVaMLq52jm3
i1o1qa1aPaK22r90bHDts4d3VT1SVwTW3nvkWlWy4RBn7TGydnTJrl27xAT7
/fffjbTN2IdX8pYGzt2Ni7ur69JaqxWLR6k5I5qqdM1vuxeOCtIwsX87wdul
ofvQ61SppiMDNFStWlXkH3K3QYMGGEMBGk4cWqL+dHpS3tEQr57f3kWLpi7q
7m1DNKu3VemaVVB+C8f0VMsn9hMyihsyRnRvoQZPuj5ARrchS1XpZqMDbFSn
Th3VvXv3i9goz5efqN4/2EudmN9cHZjRmOOs0vrWU63qVlAt65ZX/ds3VDdp
y+TE2slCRhFDBsKrdpPeKnXafl9HczrKtBx3ERndunW7iIybDy5Rr9+SJ2Qk
GE56e18PtWdKQzV5YAPVsl4FVb9KiuzC/iXmNNi1H105UdVvOThgX3ToN0eV
bT0psPbWrVurpk2bXrT2Q3vmq3fvnJoXa080a396Sye1La2+Su16rWrfpp6q
VLqYGtKlmZo/qoe39pSANTAqsHYka7l2UwNr79Chg3D//+Dak83aYR3W3aRm
GVWrYmFVpUZLtWnmUHVy3WRv7YXM2lEPrbpNCqwdhVe+w8zA2lGqxnkLrP3I
3gXqzVvT82Lt+c2Hdkyor6YOaqjqVyut6lxVWNWpVFht1HrYXTZmavs+swLL
btl1gqrQaW5g2UOGDFFXX331Rcs+um+hZvWwly2rdhYbJx/aMr6enM+mtcoK
k5SpVEuN69PGA7qgWTFyp8ugRYEVN+s4RlXsujCw4rFjx4rXlnnFe7bPVB/f
OyP7FUf7C7wU0AWMiPzT7m5q0ZgWalzvuqphvatVVW1aVK3VVvsHnTWjTJHl
5zfLnzmsi+o1YvVFnhA+X8byY8RSiIuNEe9q06ZNUhKQLxwycs8vBQ0ZH2hR
uVpbCdOHNFLVryymalYopPIXLiEG+ilDRrIhA0O237jNF7kxWFoZZMRKYACX
Ft5B8ZqYTz5owObdOFV9+eBsoSH68ikpZCg5v7692qjtn/QBDVWta6/SIBZQ
VcqX0EL/aiVhCIhI0qZFD1WhVFFVtkSK6tGyrsh9TLws3g/9YQgf3bPVRSpO
6wnRF66Pv23bNrHUeS/KJXnb+snq64fm5BXJheVDxdRz2zqrJeNaCg/WuKai
9kmTVWKJymLMn1ibLnQdWaG9Fu2d7Vk02tNxVcurqYM7Zvd+6N+GZgz6wZ2a
BPTh4PRdqmitHs7xilX33nuveGhYugSdMm02LPvBmWl5RXmK0fAfH+mtFmrf
E7atUKqwKl0kUaiuUrOlumn1JDVDn0Ltd+YTYqLF7WpY/crg21H+2/zrX+a9
Y6JLBwaYfGDadlWsTm+H7miJ1SQnJ0vYSnuK+Vyir988jXOaV0R7eilK7Z/e
WEXlu4I/+l/8nSjv4ROtHVVHTdacX1E74ABRVouQDo1rqkEdGxOesEAg+onT
jOjePOPtKP9tFwhRzO1GBoDoN3aTKl6/f0C+YlYnJcRIsCrA9OtXpKmfHp2f
VygUNef83Lr22qiroUb1qiOUdmtWRQ1pVUGVKl+ds+5TOnmAxGEwT11Kzdsu
pdvnaCe8S1qAUs8QHxFgdcR1+fLltbeYXw0bNiwzq+/aMl19cu/MvKK3mHwo
vzqprZH+zcsLrZMHNlTDtGXS9JqiqlTRQmrR2F7ifU/3+FoUTYPqlUKWWvu+
S+36aYNVm55TA9R2HbxElW4+OsDgEgVNjFGVKlXikAcYfPOaSerrh/NMnnmk
FlZrtCKqVCJZSN00s6Oant5f9WtfTcXHRgkzj+3dWl1dsZScW+RXIe22b5+T
KrZ8tUpleN+XXyu0m9Kx39wAmZ0HLtD2/PgA+xL1jI6JlTK5/0n2LS4fKqQ+
OdJHFUqKVTvndREap07sq1rUKa8S42NVTGyCKlmumtq3ZIzRST1VmWKFVdFC
+VX3lnXYakuetqPFywqYnt216dl+hnynTaf37NlTAquY/oZfQ65W+uKBoCK+
beNA9UiuYywBCksY2fzNif7q6Oym6oaF3dTmWR3VhH71ZRdb1KmqRvdqpeo1
HyBMCCVXGHKmDOqg+oxefzE5HVxyoiQsVaZMGcL4xjKKFsvoj1/O6x1vo356
bEG4MbAsKCnpUHJwRhO1XRvVW2Z1Umn96qmejcuIScHRwoZbltZHGSJgz4Fp
2wJEIFesXW2JSElJEZeA4KJr3v3jh4fUykltiMpeLgWl5ENJQsEBrSL2Lu6h
vZVO4sj3aFRGtap3jWreaZyq1bin1vqd1MFl40L/MWSkdmsuYbrMZt5VvVc5
ZMSrm266yTfzbFrPkrFqUts8oKK0oeLrm/up/dMaq/1LewpHTRzXU3VvWFaN
aFdJje5wpRrVoZIa2aMFmt8//9g0KD/WH2OoaNBqiKZiZWAzqlWrJjabFnGB
zfjly3vVhukd8mIzyhgyvtJk7JnSSB28rpew08SxPdWQzlqs9aqrRravJOwE
D2kTJGCOAL67GcOn71d1m/dXf/3rX/1ynmuuuUaCXZ999tn/FBllHTJuSG+o
7to6WMiYNqmf6t2krGrboLr2fqeo2k37iH2xbXZq6HdDxl5tTDRuN+Jiq6p2
L/mCWMNTFC4XLVpUspRUB1meMmSESUWGx1lOfrWUhCUOafjfuWOK1hyd1Sh9
ijvUKalS21ZU15QrqCjxvyJfPhUdFSXhbTzSbLyDbL2G73yzIlUf/wkBmoek
3+CHv+3WtW/fXvIKt9xyS2Drvv/kDGc2+63LvdNqyX9nX0913YTWWnn2Vg/s
SpUY32htM/RrV021rl9BFSkQp5p0GK0atx3O9kXkQFjy108ddJGdISHywJZH
qREjRogDkZn8Hz69W23fMCUvOLe8fKiAeu9AT/Xk5o5q6/h66tyNI0UijtFm
ZNeGpVVi/hQVnVBQ1azfVV1ZrYmGqW8EXsS35r2l4/uoTgPmB4hHXdvYbpzh
92uvvVYVLJAkfG95HV22UlsAf31qUR7oMu/URrvOA3/yqXziP8ABW2d3VgM6
VFetahZXzaoVU4lx0ap8yaKiHKrUbB2m/2AhwBbtOXxlAAL+XbJxamD/saRR
I4cOHbqI/bfMzIH9c49BRaPPX76+q1gJSADYH8IHdqyherWqqno2KqviEwto
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
TX3tFbeRQ/nKiQny+RZ1ygtrc1hLFLnofRt4wsulKoN/eXQmqYPX9VSlUhJU
1TIF1KRuVSR7z4siQGbQVK9eXcoQNE2hS5H5tRMCQRRRWVJevidWvpuoLWYV
/INDoG0Mz+IqLM3giMsSxVPk3m2CMDRKc7Vh1QpF5OqzaYMbyWPYtSzeN858
IZdM+QMqxQonqjl9q4lp2qZWCelypCSAdMGnn34qZJNayMVmfpMppsGXVpC/
44QhKSDcqyUnG3r36TXSM6ilVshzRmLEGWFkCcFUPFpQ8pgh+aKlI756tqqq
lo1vJbUSzG8gm3Hy5EkKsfN5HHjq1KlcsaFdubXPT8xrHrpSvjlB/BYyQZga
61aMF4GqHX9JBX7/yRnRFZ6wjZPyrx8/u1suuoXCTasniu7nHvMK2VBipJkc
Veoq6AOiRIVCkunTpxtKnnrqqVxR8q1j3dPsf9fSVqHKhtMoxOF6MGQpBiLG
gzYK86nli0Zp+JmIBvRIZwjGlq2UzaKNYJMWLDp1GdtMZSwTrzIW/fTTT+dq
0d85Ko+aSYLafczRpNuTsA7Vj97RjLcSSYh4bltndaO2TKi+pxasV69e5ttP
nDiRq2//3ny7m1Xubb4diOpq1ZLx7cm+LMHuOb+uvWp6TVEpI+TUkHyjoI5y
w1atWuXm63/IFMfQZq3/9YjikkWSA3KJA162eAFVvGC8mqjlks3AkOuiTYF8
N3PUcyOXfnTErzWvB9gYimaBW0zPS+4F+k/miZQgwhyc4f7midRtGp0cxhN/
ziJS2s88Ed15w+SGWT8xlzXSVPWSQ6RO3VYJ5lgj/XMmYcEFPHZBHzkZjKwW
lJuSY0oFKUCnzZjFMcWbluZsF/RLJo/+0f2jQn3Ngr47N0+sxawXdMmyXb6b
kmf7+uKLL8i1Z7uUX81SEGRYfoxCtEshyUK0nF+OyWIplyiBZYQIsFD8BHTs
pT52mUpgf3MMOU7TJ/fONKIkWjTs23t72OfnrpjUlqxxvChUp6gVdiJDmy0M
f3HP1SjvXNkzzbx2hFZ2MFyiOJP6L443cyPpKWDzNHLZLuWvZilch4fyxbXq
ZZZiCz2yW8olahup4aYcHcHHjzk5mlmyXcrfzFIOTG/s11r2NEu5b+cwddey
VtkuhVcOBYXMfqOkltWyDCbeX3IdFBRSJk3yya6DThQCjlmuI1sZ9XcnWbBq
hHcPcA/zRPLUVBOH98R/ZIoAEd3ubp6IC0VKIrwn/tM8kdYOZL2WDKFu5on4
r6h/6j9y/8TfzRPxEUkh02xrn0hUiJPq/3JYT/TCDQ0lTmqfSF4BgzS8J/7L
kY1cgEUap6tNPqzrL0Wy4T3x31nECbuYJ1JkiWgP74l/mCeSqUJmfX7/LO+J
uVeS/8nkRxHP7xzeI/5rHnF6YQvfeu8U2SOsZuQ2tjAfocwjPj3qRT+eOzYu
1DH7R2R48PLBK8ynkfK48Z/oUyOTVnPvVctz8pnnEHdiFQxXaB8BIVFOPgS5
j+3S7jKew7lg0D4x+0ieE+0Y2jJEScupthE8J8aRTss1x36mbdY2ETwn1sGZ
0/nL4wtCrSN4Tpx5zrE5zfzJI60u4zloBrynB1a1jeg58eY5JOQ50a/e0C3U
MoLnJDixd/QKdkSLCJ6T6PNhC7Vb28vg0/wynsMBJ95zdnmbiJ6TlMlMxD9u
FsFzkh18GIVDeL5pBM/J74TZackGnya5ljr209zIyUXOXCTYJAKpU8A85629
niPKqWocATUFnaQJbQaUiTSK4DmFzHP2T2ssMQNQaXgZz/nsWB/h4je1xozk
OYXNc7CeeQ673SCC56Q40uJWY4fWv4znfK5tC+yx105Piug5RcxzKJmRYq9z
c0P1InhOUcceswnAupfxHLQN9vHTh8dG9Jxi5jlv3OjNxf9O01UngucUd1wY
fAfoqn0Zz+GcrhtVhyL1iJ5TwrHX2K8ftbFVK4LnlHSkzu2m3u7aXEsd+2ks
peVmTNy1EUidUo7piM7DRqkZATWlzXMYW0BeGGpqXMZzsK/hGk5DJM8pY55z
B6fByPTql/EcuIbgJPZ+JM8pa57DRDxwZj3VInhOOfMc9C8jinnONZfxHLgY
aUqiIJLnlDfPIQJvyzGuvoznvLPP037YOpE8p4JzqhjmzXqqXsZzqE1ZOrQm
fWbZPMe2rhGVMs8K2UtyJziTGLKIRGYbo5AlVDRLIAzLfC9IqRL2EmxcMZvY
Y+6WgMcAChQS5n4JXnjmElHG7L66khX7i1v6LUqVw/7qHKOKl/rqTzTVIoP0
3of/1Tm1p8f431zZPIGeWJNjDFXxf8VGwLy10dJKxEL/wN5KnWO4MEif/N0v
MwXm0bTGrV271n10juG/LKDL9F6rXL7X+jJ+Lyq7/SA0ytBW/hVj/s4ifhj6
P5qYbAVUpvfy5/K9Av/72Tz/bFa/978b+X/hZ3O/kZI7HOS8K++le/8fuuL/
A6KZcyY=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"b", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"c", " ", "m", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], 
       "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d", "-", 
          RowBox[{"d", " ", "m"}]}], ")"}], " ", "\[Mu]"}]}]]}], "}"}], "}"}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.704861971208693*^9, 3.704861971237315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{"combined", ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c"}], "}"}], ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70485998612433*^9, 3.704860044131481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "c"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"c", " ", "d", " ", "n"}]}], ")"}]}], " ", "\[Mu]"}]], "Output",
 CellChangeTimes->{{3.704859998439764*^9, 3.704860044559122*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "-", 
     RowBox[{"d", " ", "m"}]}], ")"}], " ", "\[Mu]"}], "+", 
  RowBox[{"c", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m", "-", "n"}], ")"}]}]}], ")"}], " ", 
   "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.704859998439764*^9, 3.704860044560936*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"combined", ",", 
     RowBox[{"m", "\[Rule]", "0"}]}], "]"}], "//", "FullSimplify"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7048599228218946`*^9, 3.704859943405888*^9}, {
  3.704859978432974*^9, 3.7048599824928093`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "+", 
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{{3.704859930217433*^9, 3.704859943939787*^9}, 
   3.704859979977269*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704859930217433*^9, 3.704859943939787*^9}, 
   3.704859980039822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"mc", ",", "d"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7048573745232677`*^9, 3.704857398580618*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.704857376797214*^9, 3.7048574063440113`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"db", "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"ss", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"db", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.7048083886378717`*^9, 3.7048084081048517`*^9}, {
  3.704808892208358*^9, 3.704808899238381*^9}, {3.704809068373622*^9, 
  3.704809087444141*^9}, {3.704809131008202*^9, 3.7048091312369833`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], " ", 
          SuperscriptBox["m", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
          "\[Mu]"}]}], ")"}]}], 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "d"}], " ", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "\[Mu]"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], ")"}], 
             " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", 
          "\[Mu]"}]]}]]}], ",", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}],
          ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]]}], ",", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "d"]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048083928817387`*^9, 3.704808408425716*^9}, 
   3.704808899708881*^9, 3.704809088065707*^9, 3.7048091323073378`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]}], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Mu]", "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
      
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]}], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Mu]", "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
      
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048083928817387`*^9, 3.704808408425716*^9}, 
   3.704808899708881*^9, 3.704809088065707*^9, 3.704809134170844*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ss", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704809133236075*^9, 3.704809138716748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "+", 
     SqrtBox[
      RowBox[{"4", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}]}]],
      "+", 
     RowBox[{"d", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "d"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "-", 
     SqrtBox[
      RowBox[{"4", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}]}]],
      "+", 
     RowBox[{"d", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "d"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704808920217132*^9, 3.704808938664143*^9}, {
  3.704808978761506*^9, 3.70480899383943*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NvhXC27JmrU+f0sbOPl9uvfXCdrQqHftHY+kVmD26t7P/FVa8J/QM9P2X2Xr
M9L7pRX0dvzNjb+iBfO++oZd3noduG8PN4/3Ekf8VvCyJPDIbHH4oiZwxZiN
7O+n6R8p+tS0Ow/sSApTTpopBMv/qGaJLs8DfJlqwRc7RVC8zcCMR+yViS7K
f/mn8cYUZV4FlO/jxqt+ZVyxMnQ7HiLW+KcJXDmnsqO0lZv/1QKC53dk3t+m
ivL9fG+dsX1R7w2d8gp3Zq5n6zXmjwLrTEMegVrB+pWvDsvCPZeW/ErJawC2
nfGy103l4QaPaV8WnGwASzR99M2MlaC5p3S3uVcT6F2fwiuoqgxPX4wpcStt
AoM33H2npCrDta1R+8CoJuBlPXlZTL8SvJNreMNL7zE4Jaz5eYsJ975vKfBO
TBte368FncADgXn774JD52MvbWvVgp2bVsrx/Zt/cOVm+piDWlDsXs4Ws4hi
4BU4Svu6FPt7Y4fVrncmXdBG8lb9qoG6xDwduOKJxu6pCjXgguqeK/dldeDU
jCAeoRfVoOLmjtbdIjrwSERfZkb/Y7AiXHy0eSUHjrUfaHQofQwabuh6Gl/U
gPXHvWfeFWDvU9D8eQ+A0xebedapwGet++e7vb4HFEPG18VtZus93vog0DpG
SBU6zOD7JDKjD9wrVgtbNoOt9yiQOLD05HRlmB9u/T774x2wcZbv/LMzlJH8
TN2iV7s/RRWK/3IqTHGuAUIZV69lXlGF/N4TlSLf1ACBlz5JH5tVoe41+815
j18BOZlHT62z3eCaNyuvpH94BV6PPZH9caw7Ot+dMPtP9Jcqth6k1N4Vu0zC
p0KN1mPTQ+ew9SG3nzGwW9xRBkJy7vts1taGTrlmJZNW1oEfuuBe1xYdWLCB
t8VHtw5cMA+zcVypA++Wrf24ufK/9SEdOnd8W/rBEpZWvx7ac/k+eF96/sQd
fUto7fbCao5QPRgWWvPAtdgSjoWnjMrnNYJvDy+mGYVZwUkXVaTlixtA/2DQ
wi0qbP3I+zNFk3ZdmQwPz3TaFGzbDEyqbwhICE5G913K3+1UO6riAc2s9oQr
DbP3SxQrS+9e3dYELs2wa9fJ0YPZIfPNNik0g3kJSSk9f/TgVsmZNmW7+oHY
932iYgY+cNPJTbILYvvBjnk/3+6V9oF+m4fet4waAEL53t9OHPSFUXdtWsqH
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
NL/Qxn8BX5Btug==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{2229, 915, 2248}, {2662, 1598, 2664}, {2248, 915, 
         1731}, {2246, 915, 2229}}], 
        PolygonBox[{{2245, 1, 915, 2246}, {1731, 915, 1598, 2662}}]}]}, 
     {RGBColor[0.3570378680835159, 0.42918263734564455`, 0.609185406621831], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1737, 399, 2092}, {1959, 408, 1742}, {2088, 1614, 
         1735}, {1733, 916, 2232}, {1819, 511, 1994}, {2092, 399, 1957}, {
         1991, 511, 1819}, {1757, 1614, 1952}, {2134, 408, 1744}, {1742, 408, 
         2134}, {1952, 1614, 2088}, {2246, 923, 2245}}], 
        PolygonBox[{{2233, 917, 1614, 1757}, {2230, 2229, 2248, 2249}, {2249, 
         2248, 1731, 1732}, {1732, 1731, 2662, 2663}, {1735, 1614, 1147, 
         2470}, {1994, 511, 399, 1737}, {2243, 922, 408, 1959}, {2470, 1147, 
         511, 1991}, {2420, 1086, 917, 2233}, {2232, 916, 1086, 2420}, {1957, 
         399, 922, 2243}}], 
        PolygonBox[{{1745, 923, 2246, 2229, 2230}, {2663, 2662, 2664, 916, 
         1733}}]}]}, 
     {RGBColor[0.516732100844538, 0.4853052111594223, 0.5153076467878754], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1950, 417, 1756}, {1997, 723, 2167}, {2132, 1565, 
         2130}, {1733, 398, 2663}, {2138, 1609, 2292}, {1962, 696, 1658}, {
         2139, 1609, 2150}, {2420, 417, 2232}, {2148, 212, 1664}, {2292, 1609,
          2139}, {2077, 398, 1949}, {2663, 398, 1732}, {1757, 417, 2233}, {
         2233, 417, 2420}, {2167, 723, 1999}, {1756, 417, 1955}, {2154, 850, 
         2153}, {2236, 918, 2234}, {1664, 212, 2041}, {1747, 924, 2247}, {
         1734, 398, 2077}}], PolygonBox[CompressedData["
1:eJwtkTtOw0AURR8B2cManBR0RIKF0LoAiTJCFBShhz1QUgGyCwxiAWChNAiI
4/CJIGlRtkBLx7l6Uxzp/ebN3Dsbg+N82DGzLqzBbWp2A5+J2QxOIYMd2A9m
OfSIz1fNRsQVs9fwTPwCDVzQO1sxGzP3DV9wT/0BusxmMIU3+IMF9+acOdKO
xM9qR0v+GPyuJ/glvky9X8IV8QnzNQIK+u/0l+Q/Ha/d0Z+QN1Ctowsm1Jr4
Br1FO7V7zvwHeZ98M/gZnZ1CC1vUtoN7Im92iffgMLg30nAQPZAX8lBellCk
vrMfd2iXPJN3dXAt0vSauCfypo13S5O0ZfEvpEFapEFaZqm/XZql/R/CnUk6

         "]], 
        PolygonBox[{{2231, 2230, 2249, 924, 1747}, {2135, 2134, 1744, 1565, 
         2132}, {1955, 417, 1757, 1952, 1953}}]}]}, 
     {RGBColor[0.6764263336055603, 0.5414277849732001, 0.4214298869539199], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkU8vQ1EQxYcn791XC4uS2NrZkfoAEgkqkUiESCQESwtWGv8+B7FAVKJq
TbqzUVraRFViyYcQaYuK32Tu4mXOPXPumTP3Daxtzm50isgIX8BX6xIZ5Vvi
sB+KVOBuI5GJWKSOsAqu8WU7RN7ppxN255d+wYkcwdfhT9Bcoz+mzsFP4bdA
PfX8Fpor7/MB/qZXQtOk/sTmqd6DaAL4BHwb3OBud2x39O6z5oGbCWx21Vnm
Xfrj4BbcmHqiS6Iboq5ynka/4mwH9VkG/+H7prOor6H56U7boeWfBze4X8X/
K7KsmnmdnJecC/gXnb2XZvgE7/k31FyaW/Mn6ee9fof+Y2Rvq298CO4Dp6it
2P5Dm9rP/V74A/g7v3ORuuj31Tllzi/wOfQZZ3vpv0p5z0lnszVDD/gMfAM+
p2ZCw1nwcGSzdKbuozkv4NKx+d9H9o76nk3qg5+r/ZzXlPF7Cm2vimpCy1zC
7x9K12AT
         "]], PolygonBox[CompressedData["
1:eJwtks9L02Ecxx+3+D7PvHSwQUEdgsA8BJ26BkJEYAR66FBGSTlImKfVjKA6
hndlB40UpDoXQdqlcps2ayp0UQT/gwaNtdXS17vPc3jD+/PzeT/v5zk9Njmc
TznnLoAj4Ld3ro9EDd6CfwVbxB1wEn45OJeFt3ucuwT/m3GuzuBomhz8UcIM
swvU39B/k54bYBzkwK1gNfU8prdDTxvcJz+hGvwd+8+w7zn8C6gTnyDOwxdj
fVdgvpeZNLWLaChw/nXiK8Ql8D2xnGrS+Adei/fppz4Nb9L/K2qU1kqw80po
3GZ+iZ73sf9csBlx5V7DpxLjOu8T9cFg3lSIO/Bl8AH8BI1gmkpx/hXzI+SG
wQr4GLESZzQ7Q88xeveYyaL/ONhP253PUiuw7230Y4d4zlssv04xX6W+Gf0c
IP5GfQM8hBfBqre63vcA3sv+H/ReBWPBdmq3PH+QmAe6vzxcJ256+ytD5O5Q
62bsL2jHv4xpkBZ5Wqb/GXia2Jvr7RvRG2mSNr25tEpTGX6UWitlHpz3dgfV
peelN0/+e0M86+0Ouov0rXn7s4q1rwp/wtnXop7PxPfYdzeYJmnLxb+qnGr6
c9IvT194+3PyQ/G8N4/klTR2iW8H80JvpLfSn9B7608WmT0ETvuEOg==
         "]], 
        PolygonBox[{{2155, 2154, 2153, 531, 2043}, {2291, 203, 2138, 2292, 
         2293}, {2133, 841, 2132, 2130, 2131}, {2168, 2167, 1999, 418, 
         2166}}]}]}, 
     {RGBColor[0.8361205663665824, 0.5975503587869778, 0.3275521271199644], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlElIlVEUx2++4bvv+V7lwoiQoI2VQbVt0wRqPFs0QtmoJZGRbdIMjGrZ
AEWLahdEi2obQVEuGhSsEJ61KjAIjEAXTQ6ZZr8/5ywO5/+d+79nuud8y1pP
7eioCCG0IymkEEPowXA5CWE1ksFYxDYI/sL5D/AAeAg8h55BxuG35ENYmwth
azaE48gf8GCac/QVOOfgvJPmuw2fF/CzH/2hwvzu5HsL37vR8+H9xB7hfgIP
cN6Jz/s5478Fr4JXC78O/QIpYRtCVxKzkLb8Rrj7dF4IY5zlM/h1+9JoPivd
RzFt+XXA34V+jX6FvIdznrsnotU4nVidwlXgxpzFugpegRSwL8Z2C/wQXA0u
IQvgXE8svrD624m9Bp3H96XEbHcTy6XS81kI5yP5VaG7vF/d6FFyekJdF6PF
U9zD4DIyTc43OL+WWM1ryDcNp8zdSfRe9Qq8x/st/IY7zSn71luox/scd2ft
/CX8RdH6c9LnQr1TnpoJcZ9F44l/lnvPqaMfzraU+Wt2n61wiqqdfPq9dvWg
mNidr9gn4PTBL2Brz9pcab6We58z4G8+S6PolYn5nM5ZnLLXM8b3AHoGf9/x
0UvfHidWg2q5h55EfoOn0DXR3r06mo+S+7njfM2I+q7+D6Mf+GxrxhVbOdSB
Zz0f1fo5WlzF19wrZ+We8f6pX9qVctrubObNNvB2m9D/cmafRSc+M+vw/dex
5khzpnm7if22z94RYpWItZEYTdF2Uj0cQdqivckx9IT3K5Uzv/JZT9yj8NZj
b4BTHw03oh/5Tmm3tqcsT/nK+BzW6n/gb/cLfQBpAh9SLN9r7Xevz5/2viWa
fRz7maztpna0y7H+AUui1aX6erLm82C0vJX/ab1XYrOr/8Sc/6P61Cv/R2mP
G/LW6yk4w4m9o/bpP3iKqD8=
         "]], PolygonBox[CompressedData["
1:eJwtlEtsjFEUx6+Z6ffdbx6dabRCYmNTr0SxsLBQKjWjtUAQjxKvhliw0apE
JbZCiI3lJGLDSiISQhdCmwxNY8oGMRJJbViJdrQzxO+f8y1Ocl733HP/53/u
ipMX9p5POOcOIClkW9q57hbn9iSdO+ud68VeTkIJXxH9WmCx3cgg8Xzk3Ef0
XfjPIfdC566QX6HWMHY78S/EtyCnsevYVfTDyBx6GsmRX+Xyf+gNai4gf5B5
ZCaw2n3IS+ws9cc5O4HUsZ9gjy1yrsz5Sc6vwddJrAVZR2wmsl71ph76bxKv
YG9F+tAnyRnl/gznd5Bb454ysQ/43hEbIudIbFexs+RkkMXo7chbb/n9yFH0
HLHuwDARNjfJyaWsp7XEr8f45PH1CRvszeQ/Iv6Z+A98g0nr8Sf6Dd2Zsv56
I5uJ8J+lRpPYtDdsFsC7in7G23uFzwD6fqSE/ob4SGB36K6nYFYLbaaa7ZTe
j36VnGlndxa5705cWz2NYt8OrfdWZCf2a+x99PKenFfo3/G9SFkPwl49q3dh
ICwy3rghDLLolwPrTTN4QPx+XE85lwKbgbAfoN4w+R3Ym/B/wi5Quy00LALs
VnEntoWRuKoZaVZ5YgXkoPBKGgdTkb1Bb0mDwS3yUt76Uc4h9KI37orDG4l3
ah4J24mQs6X4vN4zQazmDVtx8qt4jO933F8Xuif/V8JqrMQ+7k2X74T44427
6kG9DAWGhTApk9/hDWvZS9AvetslcVRcPUX+w4T1q937G9luab7z6M3IdM28
xLzT3t6iHlZRvy0ybMVhcfk58W/OODSm98TntbOrQ6uhWqrRIDYeGn+EibDZ
zpmeeKe128JQvanHu6FxVFzVTs9622nZ4lAutJ3Wbj8Dz8eabWhYCdM6er+3
XdYOaZdGvHFFPU9pPwPjj3ZUu9qVtlmrR3G9EM9HNedC45BmJZ9imlkQ71sj
tD9CfNb5CvYxb7uv+vo7NuBbjyzFvyzmnLgnn2L/AR38rrk=
         "]], 
        PolygonBox[{{2118, 830, 2117, 2114, 2115}, {2073, 2072, 1942, 682, 
         2074}, {1834, 525, 2045, 2315, 2316}, {2143, 843, 1660, 1982, 
         1983}, {1983, 1982, 2291, 965, 2294}, {2297, 2296, 2666, 1590, 
         1813}}]}]}, 
     {RGBColor[0.915305878454889, 0.6582646961372223, 0.33744822321015566`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lkmMVVUQhi/v3n73nicNzTxoVObJQIi6gyAQaJFWEokJQ4wCLtCFstBo
GNwoC0HFCBrHxIUx0YSFAhogpjEuTISmoRtEaaAJCkZlg8wBh+/PXyzOq7p1
qurUqfqrzhu18rlHn61lWXaalbM+52dGPctWQJugddZAFB5oyrJ9RZZ9y+po
svxAk5f0rvTJsoMpy36AboaOw34zdi0123zHusHePPZeRvZ6mWV/JMtGwJ9P
1vkL+nDNOgNY9zWy7Ct8beWMBck+30J/L7p7WJew318hE0XnR/iP0f8J/mCT
9RT/G6V96vwd8N/DH4C/m3UV24HIJrCOYFsh+5r9kfCPQbfVrb+T/eGlY1bs
7fAHkD/BmZP4/oT8rUa3ht1/yG9jzWk4hrPsT0L/NHvX4IeyeuGHQZtL3+Mq
fp7B/mfk/ZNz3o7taPy0Fc6/+PfY31D4zvKxPvjmZNsByXEonjvhP8D/duze
h77E9x3sbagcl3K0J2oqXrnS3XXvtpplHaFzS28rfmfkrpNqJCx0hK1yqlzt
4qw/k+MfmZwnxa04T7LXy/dCYuipzEsm3K3Kjb355K0Vn63QlXWfeQ6dVnzt
Fj6EOfgO/F+FDs8dt2Iegt41zrmO75ZkXrJ9lWNor5xf5ao5MCWfus8Y1RSf
l4VH9L7E9ixn5chqhXVmYVfAL6o5VsW8EJ3TlbEqzC6tjIECOrV0nibDl6w+
6NShdc7ogp8MfRf7m9zxG3QP5dYRfvqiV4iHLmXvIvy05Pr3Rj7H5Mac9Hug
BwO3K+qu0+zKcvlpCRwID93I+1Xu3QHIHr/VR9ChrEHoD4EurplXbhfF92Dd
Rfu58yB8C0/nkr+v19xXq0vbTUB/ZGX9EdCThXtBGNUMOZ+7xg9Wzu8C6AR8
XcZHf3z8W9rnMOhDlXvwZmUcqHbTyPlF9i7AX4JeqYy59sjZzNw4qCrnKsX9
hse9Nkf9lZ/f8fkF8iPoHGZ9Bt8FXV0Z47MbPkf+1bdPob+N2AcT74t14/BT
zn2zblz0wv+K7S78LMZ2ZjKW7m143gpDqv0L6NyO7fOV86W4nsZ2Kvp/o7NE
d4/Zuql0PcdFTeVLPp/kvBPCLfKTleufB26FqTGBkywZJ32SMSqsNkNfrRzP
uso507m6m+zlX2dNV12QLyeG6aVx0FK5ny5HnmcFLmQ7pfLs1QzeHbNd/nbi
Z6Jihv6mHCHbWLnPhYVxyI/i51huLK1Jnu2a8ZrT6h3ho0i+0xLkr8Evw+f9
Dd9XvaScHicv81k9UQ/VZYtmNfqd6IxFdgb7nfAXkA/LjQ9hfV3kZD10bcyE
Ecln6KxNyRhpi/msGqvWy/HzUTKv+v8Ts+5M3W+k3sotld+ZInr2nZgDryDf
kOzzbWQpcjEKOja5XyZCW0r3b7+YEz3hR1hU7ldhOwj+BPKByXUWr3k0N2o8
H3q07lqoJt2F/ajW6tGj0afb0VnDWR/G3OoOeZnMjyeWX1inkG1Et408PEJv
L2/4jeqNWmjG6Y6666l4C/QOaJYfCnyq51XbKfjum4yBycj25+4Z2cu38q6c
byndw/qPMD7yozzdiDvOjXm1KOaS3lK9r6Pjjp2F76m5pHdHspul+11931U4
Ly0xY8Wrf/YGVvVGtcabNQ96rm6crI35oVj1fVfUMcXbqBj0/+hw6dxoBshv
Z9RR53TFWfp/oHnTN3plf+ThRGGsy7477qC61MJWMet+x6KWeq+b4v9bT/TF
cXwuazgfc0rnT7hSDTZFT3Umv4t6Hy9BrwT2hEHVVnEoBtnKt/b0TmpuK+8d
8X9R+bonMKQ3sDfezVPQ/wFqe2PJ
         "]], PolygonBox[CompressedData["
1:eJwtlWtolmUYx++9z7vnue85w03dnIllNQ8zZn5ctJZSs3QUFIFuRK0DtKD0
Q1AfXERllEVKSkgH6ENEBEKmM8pKpQ99qFzO1kHMlU0XKZQ5p+Y6/P793w8X
z3Xd/+t039fhmXfv2tsfKYUQnoLK0O95CKMc/AKNFiEcLyx/Bu2EfxialYUw
HWqIIXyB/uaqENZj/E4KYQDaCL8QGgYbQ38rfv9EvxXsVF7xXbLvY8gj8DvA
j+DvUehS5K+RM/QfqAmhHZ0+5GfBdhXORfbKdQv0PthO6GfwcfDTYOPk9DH8
YagTnTbyWYu/aegU6J4DnwFWW1j3S2wmwE7mzkU5HQW7Bptx5O+hh8CqkYfg
v4EWgDdicye6g8glsBc5ewL5Q2gFcndh++3Irxa+k+72FflMwE9if5H4+5FP
IefIVXoL5DJ330TMVdAc6HHw5fi4Al97wX9Dvi/3+97G2TawDs7KYB34uBlf
T0OT4L3Iz8BfD56BX4fci+230BuZa6banUzO5RPoV/gWbOpKvtNi+IWqIfpn
yXkB/FvE3F1yT6g3+nLfVXfW292DXCo7pmJfUth2QgS/F5/bMr//B7lrrFp3
o/88+ndHY+qxu+CX8Sb1yHvAl9c4R+W6D3oSfDM+XwBvxsfK5DNhXVA/8gZi
HA2+8zrlk1xb5ataDSbH/px4B+AvYH8evh38YnRPqV8+QmcUvKEwfhZ8KXIf
clfJPaHemJ1cK+U4Bn9V4V45AAXkZmhL8JvOh68v3JsXsP8H/kTyXRVzKvLL
ue/yNvoHo33Kt3poVuGclJt87kHu5Y2qc7/ZJPKG6PlTT7zCeVNhW/X739E1
0Htrhs6ov/E3Qqx+fH4Kfii6vjuwOYHuXPA38TWMzmXw/dG9+i7yGN9l0b2m
Hroh2od8qeb74Ocl2+rOl8M/R8wrM89AAT4f+VDmmdPsLanxbKnGm8D+4mwQ
fz+BL0Keis2/JcdrRb4J/RXVIfyIThvytcityOuIt538zifbSqcTbAb2d5Rc
wwfR7+Hs1mrPXHeNd5x2nXbUQfC6wr2sN9Zbd2A/VHbPtyfHVGzdoUA+lzz7
U7Avw/cU7h31oHpxKLq2et/90TtAu0A1aABvSsaUU5f2Q3Sv6k66Wz34kcxv
0IzvFui7zG+kt5pR6S+d1SbvRO1GzcQPYDdG9/oZaE3hnaLdMhN5NtgotBt+
mLMhsCXJupoBzYJiKnaJs4huD+8ykNlGtgOV/a19/UduEq8dPgLeFB1LO3op
uq8l10o+XoefGf3vaYTmRO982cvnVnydhnZl/mfo3zFFb6jcobnw7+GzraJz
DLmx8Kz9vzOT76S76Z9xGFodXSvdaQ38LdG7VTtX/7aY/C/QTtNuO567PpoR
7cKWyv9CM7IoOQflop35WO6ZUK+qZtPlK3p2lKNyXZzsWz6uhl9d+F+qGqlW
GwvvOt2xFnl99K7XP+MlqK6y31SfafCromddM78SPkXXSjOn2eus1F/3ux/7
quRdpZ5Wb/8HlQUcZg==
         "]], 
        PolygonBox[{{2178, 2177, 2270, 946, 2272}, {2269, 945, 1771, 2177, 
         2178}}]}]}, 
     {RGBColor[0.9408161392793334, 0.7220403481983333, 0.4165300317659333], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl3mMltUVxt/5lvd972s1EXVwAQRhrExFU0Sl44KVcYvFphKjDv6BY3Bp
1BmcGMuAXdxSTYsLyyAqalJTjWiayqABA2pdEIwaBaxWowKCkFBRLCFtxT6/
PKfhj/vde8937rnnnvOc5R3V3XPxjbUsy2a0ZFld81f6WSrCRI0pjSy7RvuV
+m9cnmX3ax4u+vBmlq3XeoXGXWWWrdI8o8qy0aK/VPP+Wp17Q+sXWzwjo0dj
gWT+VfPTIevU3LI3lT77lyLLPtc4T7Rvcu+hr9f/j0j+ZJ3fJNkfaP+M5u3i
mSvaBI3HkCvac5q/1lsGRFvY8N3don9W893oio5f56Y9F/r0pCz7h/Yf6c6P
9J+m7D39dIi/V+fv1Z3faz5NPLeK/79122mO1meIr9K+Eu81Wl8o+llabyls
g68k70Gd7xfPYs3L9JbtGiu1Hyq+WzQvFH1M0JfWrSv6odsqvWOtaGs0WiVz
r+gnSt9ZGoP6/0vJfyP5/RskZ4V43hRPN29NlrFZPCdqDJX87/S2tQ3vWa8W
70iNp8Q3XTJ+GW/EP/ipVeM+yZmuM/cm2wy/YOeb66aPbfG7eNMorSeJ79+a
h0qXM7V+QLzTJW+V9Bvg3aL9S/u/ieeecj9WwAn/o/+SzG9gvVy8o8T3qWh3
5cbCZvF9q/06yVqCjZKxyRp8/kLz4xr7MvsKn50j+k+S/fYCfuaeuuWCObD3
u2T8LAq8Pln3mnh4Nfndf8yNr4Hg2aH9s/r/79JxWNM4RbfvSvvuCNnhYZ29
QfwPaf5e9LdEP1r032vMlh5JtCGiHaPRz76yb/4g2ZeKlnNWd20pjc9pos8U
/YqGbc6bV4cf0eGopv0Jfrl3QshYUbOczYEp9GRGT87enRwjxDe2xx+ztf9z
3fLABn6eFveCnTVxdr50+o/kfV7a9q/WbP+r69YPnq25Zb1f2t/4jDMHJcfX
ND1uT834AVfbknU9UvMh8Gh9ls6StO4RX6Xxtuh/0n3vaN4r+U9o/W6y3fAx
/h1ZGO81ne0Q/UlszH3iGy3+K/BLMt5PEu++mmMZnpeT89crml/Uf2tF+1Zz
b9P8P9ed62q2F7YqSvsU326v+z3jNc5IvntS/H9R6I+8p+Is/j80MDCCWNa9
3yTbGFvjrx9q/0/tj8Mm0qG7aUyMTL5vlOayMv+Z+uPwwjbEluNET+I/QfNg
07kUTINFMLlPum1J1om3XqKxA1wm8y+PHAXeiXkw0FLaDhPEO7ZyDplTOKfB
PzoG57mLPLcs5HD/YKzHJtehds1Z5fzTURgX5N9zyT2RQ8glS3NjaHzlXARm
XtOYIvpU7R8mj5bG322ae0vTr9e8oLDNv9D6fq2foB7o3nmFsTFf887cuH1T
9Ntzx87Tondq3yc5D5TGHbFATMzNXW/miP4FNa62P8cxj9O5Z3LHJLXlJtEv
07pP81beWrP+1xbOBYeWxhi5GPtSo6h1izUW5q61d4pnZWASv5ETiHVqA/WA
uvCa6NsK33GBaBtrti11/Tf67xjp36V5g3g+EH2j5oGoD79O7gvGR717v/D5
9VHfeiJ+8QHrrtz+HRP14JTk3NuR7AN88Qn4L4wT8EL9ow4OlI5tYvynmj8s
/Gbq800ap0vPvsD+7rAvPsAX80r7B/uQ387R2Tbtr5L8lobxQ+4iXvD1YPQk
CyOHk98Homf4uHSu2pQ7x6APcYr/8GOrZLZKzmHN/fHM3KL/JxPvDcc2ufnZ
qIm7o7eiBnWW9vVl6Bi2Iue21y2TesncGuuTG45NsEuMgQVyFe84JGKf3mxE
077oCDngeHnIJ76GVdbtqCp6n7r7g0mFcwU544DKOfsHleUhF5+h76y68Ukv
Myvi8fHcb9olGXeUtuPtmndGXiW/LopayX/k1IM1P5q5HwF74AzM8hb8Ml5n
9lDbyMNRD4ZE70Mu4N4xkVNWRT8yOnLL+tzxcV2yjh3BvzjySJfmRuX+Ii+N
7S/rxjc1s4oeqD/6K/qs/qgF6Exvx/qAwjkM/2LbrpBPHaM2vd4wdnojHsHA
5YX16Yz8sLNuDKPnnrAtubk9atuuZDnDC9dUfDsvd77HVsi9JWTgg9PiHJgh
39M7UjfIMZdGn4Pd2iI2qc/HRo3uCxtQc4kZYqdT9x5Ymefcwn3juobzBrUO
rGNH7NEftZLeZ1j0HuAG/KyI3hL7Yltq/vDAai253g0tXeuwHbEzMfLGKRFT
F0VPeH7pPE+PuS03jm8tjTF6NWK5iruolUOiluK7Y5Nt3pYsb3bIhHdY8C+P
OgWejhffLvH/KDl+WU+MnnFq2PPK3Pamz8UP+IMc0VX5u2VaZT/NDAyQn/hm
AaPw7w7fkbvmxrcMumWRc6gtvXE2S7bxGHJnspzbotYtiXoHvvYG5vEFvTLv
aissb0hyXtgX/iIvZg3z851APnhdPM3KeZ58Tz81M2oKtqfWgpM1kYOon4/k
ph1c+m3QyUsHkVPQo3AeozbTL4E1MEdN6YvcPlPzjmSdz/5/fY4aekJy/aKO
9dJHiedOyfmV1p18m2i9IXfuH4zvj61RT8ltVfS6fI9Rt5ZJzo+TbdUaPc7N
EYO7C/diz8d3IvLBWWsyXsgfZWl7tkWN6gjfkQfx56nJvSa5jVpK/ub9vJ1v
GLDTU9oe0KdGzm6P3rS9ss58X/Ie3rUxt07otrp0zBA714Wt1kUPuSh3TJPL
f5u8XhTfEXc33BMTh2/XXBPB9NKo73yHTYk6eHoyNmZI/suF+V8qnGPQE9zz
HcW5ycmyueOh+G7qjnjkHDWYu45Ozrcjkr+xwQjfNOBhT+Qf4pV3gU/yzcbo
VX5WGdNH4PO6Y5u4/h8Gbymm
         "]], PolygonBox[CompressedData["
1:eJwtlllsF1UUxuc/U2bm/nEJSEBUkLIKKkbBoAU12oIaFaPEiIWH0kS2qGxR
lIILyAOKQGzZl0iiEQP4AmoCyiIC0ho0sYCChgpagQQEWUJUir8vHw8n+c52
77l3zv3OlFZPePqlOIqi1UgJMjONov6AecjmEEW16P9i79wKezGKXsd2Cb0r
/jfAs/GXgQ+xyM9ZFA3ANrgQRf8lUXQPeByyrOA1x4NLkeP47iI+gD8nZyf+
C7Kh/4B8ROxn2KaBv0c+VC343wHPZ78K9CbyD5N7NzX1oLYtxM/BPwI/5qga
2zB8c7GNJH4S+QvyKJqBbCh4jVfxLST+CfBu1vuCxK7YTiSuSbW9hf4wMU8R
MxPcB/lLZyM+Bdez3gcF38FE9Cpi32f/9uzfj/1Hs0YB317it4NfQVL0Z1lj
Erk3EnMBvRx9KHpZ8N1NZ817g/fU3i2s+Sb4DDI0ds5N5L6rM5f4jvaCH2WN
Zvz/kP8IuA3SG1yFfwH+r3Vm8FpsW4K/sb71JnJmUXsVegaeg20jeDnyos5G
TevxP0T95egrOV8l+5eiN6DXI2eJ3YEsKvEe28FT8V8GD0Imox9hjU/Yu571
LuX+RvpW/dGPov9NzJ4Sn1FnVY+oV47hv1lnLXrvI+iPg0dm7p3XkCW5a1bt
y9ljH3udwT+k4OYehO8cej3r1WA7C+6ObQD6SfJ7gnsE4z+wNSsWfRW5jcSv
Yb096JsKtjUE96R6Uz2oXuwcXOs68scSPz/47l/GVkd9tciUxN9kJf7j+Lfg
P4rt+sx3qLvUG+uC/nzm2i/jHxh8R7orfZMV6kXVwF670E/rvvDXoBeRPHeP
qldPk3MbuAXbd+An2TsCd8qcG2FrhX5rcOxZcq7Fdwv6qcR3pLuaQsxw9MOk
lII7Zv6WOoPOshH9y4I5oy51T6u395C/Cd+E3LnDsE3MzSniltHoTei9kK7g
tshY4uchfcCBmNuJLUrQu7DeA/h+JP5j9BnsuRS9bfDZB2K7DjwNf1XimGbq
6RjcO7LJNz93b+sN6S3pm+nb6Y33Rp+LvjX2Nz+Z+o50V+rRzuz3Qu6z6E4v
g39CPk3MOeKeymCu7IacBFer/2P34ObMPaXemoCsA4/D1i7xHeguuqOH2LaY
/PPqx8RvtBu+2cSMTXznv6OPQAbiu4jcSezW3L2+mJht4F9z37Xe4C/gc8Ss
KHhNra0eVa+KA59hrVFIG/BjrDcGvBj/1MQcv5p6D2bmfnH8IfQEfwv6GqQW
X3u+146CczqAy4O5TW+gAlxOTGu9H+IHg2eRPyYxJ4ubG9G3xebsP9Hb6r3H
niFdyK/BvyZxztvg48Ss1/tD9qPvCua6tei7NYuwTUvMCeKG98QRkXMO4DuF
vrlgDhOXNek+U8+A38AP5u4tcfwobB2C73aVOF/zLHWvNyBfEb8fORCbA8WF
azNzrWaAZoE4RlyjnlBv7E/NXZopmi3T8Y+P3fN9ir5j3bVo4WDqN6q3qjfa
S7MuuNdUs2pvVA2xOVpcrRmnWaeeWURMZere05l1dtXccKWehaotN9Y3PI9/
g+bzle/diL4t82xTjTWZ36DeonpwGfhY6lmunG+DZ6JmYxn734fet+i3LQ4T
l7XL/fYrxFG5Z7Zmt/4JLqae+Zr91djmXeEwcVl7bAXwVUXPyp7oV4PrMvei
OERcUoZ0in0nrYqewZrF4rTJuWeIZol6ZCm4debeV0+rt/tl3ktrROQP15qx
Z27fYI4WV2vma/anuXtDnJyBbwjmes3QE+AhmWvVG7im6J5V74pDTqi/Ms9y
9XwL+P7M3CdOCsSfSf3vozdyhNydwb2unv5Gby33XemN6K3cEcwNqvk51qrI
/PbUo/v0rxL8bcQ5Efh/s9FWrw==
         "]]}]}, 
     {RGBColor[0.9663264001037778, 0.7858160002594445, 0.49561184032171113`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmQmMVtUVx9/M99bPFdNWpVYZaA12cYEgoDNYRLRYcEGRaHCpIg3a1A1c
uuBeJM4AClYHJXFAg8oMTbXBauvC6hbasgxY21hAtLgCGrQuaP8//oeYcLnn
u++8c88995z/OedN08VXjP5lY5Ikp+q/muZH0iR5TKOrIUnWaizV+odaf7ww
/UfNb2g8p2cf5UlyhNZWaDyv3/2qJFkperGeH19Z5qWiZ0nen/R8p+T0bzRP
L/1u1/qSRj+7RvMzGg+Jnp4lybGijxE9RmNlg/m3lqY/0b7j9bySwgdrvh5e
DYlLljeYhv86ydkhnsH6Pbv03jMqP+8fPHeWfue/mrdrHhFyrtd7HzT63VbJ
uVPjLj2YofndmvUbVE+SIegsfX6m+SKN7sR69Wy0bp2SuVjjY60fpHdP0FpL
DN69R+t3aX2mxgOSv740/9uSuaG0fdpy26RN40lkad6pMYvzNdjOInfvxT7I
HFqzvaGx75LQZaAYF8T9dscdjw0dX4z3Z5amW2WrKeL/rcZ4vZNJxhfYh/3E
k2j+ju63Jvoj8e9V+Ny7NEqNZo1tjdaxpvlzjUaNrcXuV5M/F7Yvdsb2+NGS
BvtSQ2n+RPOH4tsuuq75KY1tel4Vtu9lovcT2+8r04/JVp0a54h+JLc//YB9
NQ9otJyjRc/Xec5OvV9zFXoW9rkBwXO09l4g+m6t70hNc+99NfYmWMRzpOij
NM7CRzPTh4q+NtZ5fkTEB/wd2uslzd+Q7xxS+fmZkr9J727UmKPf75T2jfML
+yr+iU8iA30bND7Q2fQvOU//DZGs4Zqf0Hhf77yjd94rfJct4WO8Q8w+JHpu
g221XvSqiB/kn1uz724U3SSZpegBhX1tk3gWNTh2myN2Jmr9k5p9ulv0eo3v
ir4dnVP7x7SgubP3dd6los/TfFpq+gtiL/W7b6XeC/9mvZ5bLjJnxzo+v1rj
P5nxCr12Bj94xBlvrWxLbNqu55+GbSdxb7lp1nuk5sHmG0MmPLMivhaFT84P
P4Hn0+Anhh6JOGLmNzi5sbBO46TDDo0XWdd8iJQ9XvTFgVstqe18iuaTU98V
cdVH45PAiuFan5f4+fDgWVsZnz/XOS7XvEhjjXToFP9nGgs1Cj0rNRoabSt+
3yCe/+WOa+J7TWae1WFT9GffhXFG7PBonJFzfRryOfvSeMb6/jX7Kn7WO7ef
4WN3p8Z9MCgLzJif+D7XZcYcns+J3PBCZXplZR7uHj7shs3AV+5nr9z3zsxd
co8/rPk39DOFz7oY3ymMDSdpfl+/t4tu1XyF+F4lrsW3mXwHHmj8XHzD2Evz
cu21LDNekhNWRYxcXTn3XCeeGdp3U+Lzckf3a0wERyvTW7XX3NS4zt7PVfaX
LVqfqPgaRB7T/JfKeeOW3Lh5eG65pzQ452yJ+B2QGwPwQ86OPbAzPGBBEjx9
4n3uA902hU/im9i0ym0X1h5M7efYAD3ZszXkcnfwchfE4LLK+4A95CzOBs7O
I09ofkrrS4IH3m0aK8RzpM44GZ8Kn75Iv/8qeV3Sp700ntxXGpPAdHDpSdn2
FzXf5b81bqy5FugtGU2Zn7WVXmvVfEdpDJ6qeV5p/g7N61Jj+tEhu2fIZ/8L
az7vleI7R/QVpe8WPuzTS3qOEz25MAb/K3B4Wc3y0aundDmYc9WMn7tijzTz
c/Ly1ZJ7idau0nxa6bj8tmT3En/fmvHy0tw4/baeLyqdv0eWrjug8YEHS+vw
Ve6Y747c3TPyLecaGzmd2EQnahLuBttsD/1fkcyXNZoz56zBkX+PKb3PNMl/
I3VsHNbo2CLGiLvphTF9tubDxd+kxamFz9EUZ2FAb4s8syZyNLY5N/JLFfZC
92GZ7V+LO5lfsz/iK+AKuEe+JY/i42ML5+ijSuceMAi+cXXn5p8Uzmn71pw/
wZfOqD9nVl7vUdqvq8CZq+KOrqUmqVvuBaIPqRvDwXJs0CvscLWeHwbdYF/C
j7AdZzkxM2YN0dySGVPuyZzDwPczJO/0iDvqXmqUWsTgvJqx6IbU+EL8Tg3f
XiBdny7sP/gRz2fWfO/EwY7wN2J/Rqw3R/1FviZXdMd9rM2cA15IPbgz8jW1
0j4110tDM99JY8QnssZp/7Pr1nOq9Pmm3h0gundi+4HXYDVxT96fFjjbN+6u
O3VMIvPMurH4RskcWLffzs9dt4ErL1euN/tE/iCexsQZtwe2gDH4Mvvgbx0R
l9gQG4+NWHilMl69VFk/7qcj8VnRgfOOrvs+bius++0h8wDJ75FZp2fCRtzZ
Y1p7NHOsH6S1xzVWSuaSwjX5BM1tkbvYq1fEB/6Dz62J+F0QvoCekxtdO+6p
K6GpJyfV7Lf4dY/oRfA5cngReZyagrgCw6g1zonceWHEE/zUuaeGT/y6sC2f
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
OHuP7Otve5yTWvz/naB79w==
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.9918366609282222, 0.8495916523205556, 0.5746936488774889], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgmwVdWVhu95957pGsB2gmglggxG4SlhUrSTDkIlTPoeM4iC2ibSKCJg
MIiRmScm2rFE0KDMgwqBh3aMqJno7uquxKmHaoQkHRNRwDAoJt0xaNLr8/8p
uuqd2vuus4e1117Dv9Z5nW6aPvL2hkqlMrRaqcRf5atZpXJVdK4uKpXZaaXy
lei38r5WqeTxe3NSqXQuK5W2QTu7HrT4/eUY82H8Pi3efyqe7tG/O69UpsTC
3epa48teZ1TQewb9zKDfnGj8OdHOinZmPJNi3LTYe3S03w9eute17zdj3gnW
ibkdY51eifpdot0Y7zfEsz/enx5tu3j6VbR2G/MDjXeHYvx/Bv9b4zwfxfpt
T45PxAdneDTGd6jpXRa05uBhbOx1R/Dw6/g9KPp1r9nWez0c9MFBPxD9DdG+
Hbx8Jmib4v2Bqn53jUkvxfvbY99m7wVv51S1/uvRfyLahV5/alV91oG+Mp4F
8bTEc1+D7uCOaP8+nlqMeTd4PhTPX4K+PvYYErQ/R3uipjEroXuNEMEntO+Y
3j7GttYkg5019Z8O+iPxfn48n4r+imgXmbd10a71743B51Lz0y3m/WM8XeMZ
aX66xZrVmDQuxnQPGa5LxeuFltM7ltXgROv0SLTng973QIy/PcYsbtD7Fu8F
D9BOi/7xRHTWaFeVfKCNziTjyws99McE7WC8/31Ndzkzfv9L0P8rhDI05kwJ
+j/H72mx70XR/0X0nwx6Y/QfifamaG+M55Lo/21Nv+nfk6o/PPrLY60+sfbD
0b4evycH/WfRbo69rol2NfZV1XzmXphq3xWx14Olxj8eY28ute83M73/O/PW
zTJeVVHbxf3tMW5mrDcu5j1aSgfQhZXRn8qdRv/+eN6OscPjLr6S6x5Oj/sZ
H2NnxJgLEu0z1XvdGe3MeNpEf0fMnRXvx5eizTD9maDPDvqEoP8p+i9H/9+j
P8M6hp4im62WzxXx9I7zD4+5jfiPqmxrdczti7xy+Rfu+Tr2jHnvxdM53vWr
q39WtJPj+VPM7RN7Lc50V7eW8hV/qMnX9I7f82LepFjz3LroN+e6+w9qOk+H
uvrXZ9ID9GFW9C+0zWK7/1QVz3+M3x/G2P+1btD+sSb7vRT+qrrTyZnONy7a
/kG7PJ45yDOXzX0t6B/VZJ/8fjLV7/YNaj92HztlTBprdqqL/vVcfgTeWoPf
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
3060jeEf5hjLvRrt/wHpfrJG
         "]], PolygonBox[CompressedData["
1:eJwtl3eMVVUQxu97b/eee1+iWAhiB1FEcSMou0hEo8Qo4C5tlwUiuxiK0kGw
IQoqLB0SCNhAUKnSFrCBYkONxhqjhiZSVmkKGqwgqL8vn39M3nznmzPn3HNm
5sxr3HdEt+HZKIp2IQVIVT6KlhRG0fe5KCpLo+iNOIpqMlG0DqP5IYrmMfYw
XCfGlsFdx1h7fnvA55jbDali/g/4mgBXi/0EHD+J/Rr0O+Hr4OvgV8N/x9go
uF3IbvQNSA32N4PXo89Iomg4641AZqIvZWwta02Ff4t1VzD2OFx9/C1Hf07+
mH8vskn7Yr1HWa8Y+0r0lfDj4OaB+6EvYM5Y5peCZ6Pn2dMx9FascQz9U3w8
AY7Bq7CfjPRkfi9kir4NKUd/AfkV246s0ZH1zsG+hPlt8Hkt/t9HEnAF/Gj4
avAXcNORYegbkT+Y/3liroI1P0PfgSwBn873bUf/MvVdfAx/XOePv+b4+wRc
hf+u8Nvh94O7oOeC9WnYvIR9G+yL0MsYWwrOgquzvsPW2P7N76fiWPMrfS9r
DkYfgkxBvwr7B7BvgZRj/zJjc+Ba8/3DsG8L3wr/H7DfrfiqBi8DF2HfBftZ
ie/ydeRP+Mrgs/6F+SXYLgCvBxeCR6OXMVbO/CsZKwN3AleCD7HHO8G9wQvB
l8N3ALcGNwPXwp/C/zvINPQB8A/CfxY7FvXNa9nv+mBbffMG9NmM9WXtfsgc
9K74uwN/DfmecfCH2P9m9t4OGYCvs8D1co4ZxY7maO79jM1LHCOKlR7IJPSZ
qe+uD3iW4i+2vhr5BnwePrqjv4ccBc+HTzIeqwE/Df43csxNBPfH/nf5Z4+d
845BxeI+vq8O7sfEsb2Ksa+xbw1uwd6a46MC2yrkV7jfkHOZ3xOb0RmPNQS3
xcde9J/w9zN6/bzvajTyPLYrmT8YfRDyBLgY/0X4Pxv/XeHOyPtuDsOfqdhn
7EO4PeCQd4woVuTjScU2sjlyDVAtGB9897oD3cVE8D1Z1xjVmg6SQufcSHyt
UYxlXWNUazrh40DOMahY7Bwci6pxqnWTY9ci5aRyszS4dinmFHs6U51tA8UE
XJ/wfy0pdCzuVAzBrWTODvTXkDHo0xnbiP567LNSTVJtWhS7tqkmqjaqRqlW
3acaAn4GGVrgGrMKriI413TH5+V9R7qrg4wdgrs++Cx3I7FymTmvor+G7MXX
t4qRjPe4S7ULvjRyTaoET02c2/uRrvhamLi2K0YWoa9KHMslyPXoG7H5iLUP
IAfRp+LvDfTm8C3he8euVVMYmxMs0q+AbwG/P3Gt24L8i+048HHsbwWPR39F
34w+FVkNviXv2juTPW2B6w+ei36AOYPQL+Abfsj5jrux1lVIvaxryAjsz8dH
A7i/+P4hcFcn3otytkfwmensFOOK9ZvwF9BT5HFwN3D7rGtqOXrK2JGsz2AT
+jWJv10xp9jTmevsVSNrwPvAGwv8ZhaAL8P+KbgxyCRwL/j7M76zPalzXrnf
FKlKXRNUGx5j/mLmnoydy6pRqlXtg2uTaqBqYZ1iqsBv3Iupa55qX6XOA/1o
cC7LRrY/BZ+lvvEI+sWscb7uEn4g/HBwd/B14OHgfcG1RW/wEPbST/GS85xG
6JfozhgfCN8EfUywvgNpxv7q5V0LVMM6Br9JeptKkBvhfmbOWzm/2d3BRxLn
lsaOJn4z9HZsQg6Cn05dezpwhk+lfgP1FqpGH4a/S/We+Yl6CvjvY79tc8Fv
qzYk9qU3WG/xEMZ2Yn8F/NDUPYJ6hSJw/9RnorM5gVzM/ipUswucs8pd1QjV
ihP4K1a+I3UZ3/EG1u6b2rdq4Cjws+DvMu6B1oIfBncscE7MBi9M3RupJtfG
fmP11ipHhiXOIeXSOOS5xD2Geo3GnPfN6I8Ff7tiWrH9TupvV0+h3qI22HaZ
1kd/kbEauMnIenxPDo5VxXxTuMPBtec4fF/0kcGxpRwbjH4hZ/Kn9q8zAS9O
XdvGqx9h/lZwSeQz26baydgM5Q/yJuvdzdiKjHuuu1LXJNUm5bhyvVXqs1VO
Kbe0B+1Fb04r5WJwL6oaUBQcc4o9vSmXo7dLndt6Qx6FfzP13WrNvbHfaL3V
6nl/U6ylruWK6U3o1alzcz7+tjB/aeK3Tj3oMr2trHFaoWtuIXxp6l5aOX87
+j34KS70m6W364a8Y19j4qqDz0o9mnq1JbF7NfV46vW2xe591WOp1ypL3Is8
xFgpegjujc6AbwnfPfZbrz1pb6qBqoW6I93VI+BQ6JgbmzoGFAsaa553j6Re
6R/4JuDi4N72FLgxeHHs3FPPpd7rvmDuJNIo7xxRrqiGjAq+Y921erJ30Tcj
M3OOAcWC9qy9K0Yq4Z5P3AvrP8AL6JfmvRftSb3rOt1ZzjGr2NWaWls5fy/r
tU38dunN64Nteez/CprTmW+7KO9YVc5PjF1jVWv1n2A++vLYuaUeWL2w3iS9
TW2QG9C3x36b1AOrF747dmzom/rgv1Y9Pvptel/Rb0w8Vz1Cr/j/HMu5RmSD
71B3OY2xtaqtjC3PuAdUL6g3Um+lfK5DX5PYVm+w3uLNqdfSnD3g/wAYSMwa

         "]]}]}, 
     {RGBColor[1., 0.9499999999999998, 0.7499999999999998], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
NzK/3Dq82Lql3zGVrZFjD/KeyII8Fzngy6t8j/tvqjWjbQcDLYthiXC3j20F
eV1r+fC/HG+L3GV6Wq7Ew7mZ3uhXZ4pDjLXHpb62jeHmtc5yH2m5n+7vfTw2
zHwMt+5Hm48LzeMof6837TrTvcJtzo3exlnO59kOzvY+zEV+vI2D7+S+TZZx
q/m4yPutSvWeeHeuMw3yHtAcYt1yp6E9wGvqzd+1lt0Ey2mw1/P/A2+MvGHB
81if80p/H2y+h1iPl/ncF1pP2At2x/qrPWe/48r2XPEVfAVnyRPIGxbajqb9
yNbafX1Lrrvx1qi/SHW33JZLfif4jkYuMsNvztytj/d9a7rvSMwlRvDf3kbb
4kWWNbjY17HjPb/9o48Vvnev9Fv9bmM3caav6fDGUON7KPEdH8Pvunic/JBc
gfgLnrbHdeJ8wXdYeAZT4BOcabDOwZ6HPRfaI3xeZNqOd6yBb3ji7aXN++P/
oyu6f6+rCNtrzfN2y5/8537rAf7wy47+X68dQ9kDXCH/4x7KWzoyIXZs9X8I
A7yuk9fO93p45L7MmyY8YkPD7Qe8NbbZzrBX/AT75X8J6GCz6I//m8jneQfg
7nyD7e482/M7Pg9n2e7/fXiLnGBbarLN9rONQxdesUlodzZ9fHqkfYL9O5qH
9jvJNNt9f+/d2f+F8d4y2vY03DSP9/j11k+j/aLe8+7KFf8WZbqzr7fe6+1D
2OXATG+tvLl2Nj1k+H+b0S/O
         "]], PolygonBox[CompressedData["
1:eJwtlktsllUQhs//9+t3+RfGqAsDochFMVIvGKCYqmlR1MSotPSqaauk2qil
xYqCaBW0VaKiYEJiYmldYBUqtLbgFRS7ciEaEoMUKl42CpV240ITNT5vXheT
zHtm5pw5882855u3trO6Ix9CeBmJkMsLIeSKQ8gji9DL0hCWFIWwBVmO3h+H
8Cf6Vux12J9lrRV8B8E7sM2Aj4K/yYXwO3qShHAOfYpDYvRp5DznlIBn0I9n
IQwS24PPW+C/2eMY+hH2+A7bS8g4uB0ZwlaTWT+B1KI/lThX5XwF+cwC/4Ot
lP17se8lZiX6b6wVYzvN2ijnnQRPoJcnzmUMSYh/krVK7K8jPxF7MWvT6Cn7
r8H3Pe7UQ24biN+D3oFP+P981a5C92XpLvCd4HJkCfo2/L/Edx1yIPhOf6A/
hn8jZ9+HXMZ+tbFzvZ4zVoBbsFfmXXPV/hCyCXs/sg77UvL9Ff00Z7Rw1lrw
VeS7GXkAPcfaBPoppIy9NiNF+M5hvwXE34r9NvAkOc3Hdjh2rv8io9hvRqZz
PvMm9BuRMmK3IeXoNcTMRK6RajVC/BP4/oLsU7+QQye2Q2oufHeB29AruNNu
7LcQs6rYOYwTu0LfKHLOyn0SfAbfQaQe+zJiruHsVeClqffU3geRH9m7j7Uu
7Feqn9DrC+5V9WQteiPyJvgC4q8mtoE9Z0c+Q2edYI/9kWvYFbtH1Ctj4B/Q
JzPr6in11pnMZ89B6tGbkW/z7sEm9MOZe+lFcBX5PApeDm7Cp4f4I+Ad4ONc
pRv8KXg7eAD/D9XrrA3n3bOnwE3gi/CdC76UuzSD54LnqV+xL058N9WwCPse
1jZFntGR1DVULfUNW9BvYG0q5xrU4fs9Mhx5Zuuw98WuZTNrr8mW+i7aU3ur
x9RrulM7+jH8n0ffiuzPPAOaBZ1RmbjH1GvPYR/CPhDbdwvyfuY76+6vgj9G
/zq277XIg+D57NcbfMaCgntevX87d1qG/W38K4jvwf5B5h5UL14CvgdcrZlG
P4v/VOIeVC9qhiLwmti+mvF3sW0kZmVkThA3HMS+MWeO2oV9tXqK88fIqZP4
jzLnrplpxHckcy7iCHGFOEvcpRqfRJ+IPctf4bIB/fHYXKQeVC9qBjWLi8At
mTlYXNyNDKTuOfVeB3KA2HdYe6HId9RdP4vNreIccY84S9wln8HUnCxuFsfc
n5hDxWXiCHFFX2JuOqr7EV+aWNcMaZYWFswt+ib6NvpG+lbXIQ+hn0s8q+rZ
s4nvqLtq5jX7dyfmatVYtW7LHKuZ+BnfnPgZ/zfwb8B/Pbgq75qr9qUFc7Nm
oBdbf+raiGMGie9mTQ/c58hifPexf2nkN2gvemvi3hGHzSr4DJ0lDsurX1Nz
5cP4vMJ+Q6m5Tz2gXlAPqZfESVWxOVvcrTezRrMJvjdvjhfXnwd/UeSZ1mxr
T+2tmf8kMweIC5Rjq2YBWR+5BqqFZkSzoh5Xr7fF7g1xznjiN1dvr86YRp+N
VOdds0ewP6OZjFyTp9EbM3OHzhhlr4bM3CLOHgZ36A3K+w5dxG/PzAV6s/8S
NyWurd48vX27M/fiheDVqk/qt1ycvFP/BrFnRW+i3saSgrlQObYTvxCfkiLn
uDP2P4X+LbQm23/bHBRl
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0k1Mz3EcwPFfRcXVhYxN5WErG1spK8a42So9d0hUtOnJZJ7jImzGZOui
Jxsi0YOFPLTRmYPNU57jRNTFxebg9T28e38ev79fv+9/WXVzYVNMFEVx/hTE
R1H3vCga5DL+jC+IEqKoh4fUy3nh/CiqFC/iH3o/UY2MxCjKxHa9aXkhX5f3
4Rpu4gaK1POdc0s8LO7nEY61U+7MGO7Vv6tWwV+xQzzFbXrpZop4ARdzEtdy
PtdwprkqcQZ/wxy1bs/oEPc5p0fci3XIQrFaNpfwGntzzfeLP5r/hEl8wHs0
qP82O4NfmA17dspQih79Kvt54p0cjwSsDX29t854hxIU4zIG1M/wWZzGH3kj
HqPT7ku1v+LzfAFd4td81bM70YV2TOOV+j/9dr6EDrVR+QDnIBdV4X7D/xe+
N5eaW6+eKN+Mbd51Ew9hEGnyVj5m7jja7aSav8gn+GS4x3DH4TcS7h9Pwr3p
H+RDyLPfKW8TJ4lnuDLcKybkdeG7hTsPu+IRHudnyPH8p3zYXDMK5Pt4Lxab
q+clag28lE+ZrQ93hV2oxn61N9zCCWZywt1wLs+G98F3/f7wu0QNatFqfpyn
uI73YDeeh2/Kyfa2OmdCvoUP8CRGvVejfiPfk9/mDdiICvkDvTHcxyM8xDn1
ZP0UHHXuCucd4VW8EsvRZGY4fCeM4Eo4m3t5iO/ghXiQU8wnIxWxyHJWDGdz
HKfxalSI08O3tdfFLfgP7BqHjQ==
         "]], 
        LineBox[{2147, 2080, 1905, 2079, 2408, 2591, 1906, 2158, 2414}]},
       "0.9`"],
      Annotation[#, 0.9, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0rtLlWEcwPFHBE2XbjpVkISNVkpWYpktpZ5Tx1PYohKCLkEXsMGlNEXT
LkOKpZMekyAySJd00P4BK2rQHCtKHQ0Uii6fZ/jy/d3f9xzeopbr6WtZIYRp
rOaG8AZV+SHMch4Obguhj0u4l4u5DHV5ISSwB0k02bmgv4tT3Mzn1fchLd/L
9dxv9168iec5IYzxP/7Om3yff2AVW/JH/BAPkME4NrCId+jAe1zyvD7zH+J9
fulZV9SmuFTtCPrVp/gVEkiiVW2N19Fk9ridZ2q75ZN8Qt6sXub9U2oTnMFs
fHee43EuMFeOBrOD8iFsiPPjf2LvMh/iw3gsbrRXaP6Auc9qK3grXsA3vU/8
mz/yL5628xp/xMfsTfBfZPDUzAiG8UL+hJe40twyL2DG/Xme1LvKX9z6ip/i
brWeeEO8yKNcq7fd/k7swFl5TXxv8Tlewm3Uy+9wHZIReYIH4l1Oy3u4E2fc
vsunuYuruc1cu3i/uVtcxEe5HLXiG/o1fJNP8inMiLP1K/ymVPyusCy/GL81
/AeOBF7v
         "]], LineBox[{2028, 2029}], LineBox[{2660, 2665}]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0jtI1WEYx/HXovJW4GJD1+OmYIOGldkFtMYGwUVdVCoS0VQw1EhTcAgr
KysLHNwEdRJEDCWzsssieMnRECEFU5PASf38hy/f5/c8z/897zn/EyuvKayO
CyEMoexICHdxPTGEJD4YH8Ir7sYzZOqfw0ZCCJs4pXfIzmn+J2/hpPkJ3NIf
0y9XjxwOYVz9Giv6/+UnnGk/1fw43shv0We2ae+C2UXkIBeXMGqWzwV4Gd0N
vXop3KX3HN3qIs+nqUc4i0u5R/8d3mNLztO/zZf5Dk/iI5qR7j4POYOvcCJf
43i+ygnc6XPX8d3zP/ED/fIgssyL+S+m9CfxCRNY1vvK05h3ly/8GU/1f8mr
vMBrvMidZl28I8+om9CIP/I3fuE+wzwn3+NKtKk/cDsPmDeg1hl1qEcMHWY1
fB9V2MMZe7scEIfz8p5zsjn4TrnR++ZZnkMM2+Zn+UD0/pz5SG5BMdZREv3+
WLLzO/qf2Hkc3RGt6JGTnJmMo7hp5xjn8w1UqAt4Hgt4gDrP1aMW+4SEXWI=

         "]]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1827, 2549, 2548}], LineBox[CompressedData["
1:eJwVz79LFGAcx/HnJE6vwaDCU4fyILvKUMRchLoSh4IgyKW85ToIrqVrDH8s
/iILcihFrX8haEhuKKq5QaEsyBTtkpNaJGo1ej3Dm/fn+32+z69MsXz9biKE
sIBrDSEcRak+hCzf4TTXpUI4IQdOIKd3nnsOhlBIhnBBvsWX9C/iiPow2u1p
UKfwQK7nJA7Y12Q9jbfq93iHijP+mPuLN9ix/pqL+jVuV5+Mb8EpZHFIv4PP
IokzOI2SPcf4OFLIoC2+y/y/+C/k1JfdewW76k71DR5Q3+QudRN3c54beYiX
sIhP5mruGeYWa1f9K48h9Fv/pdeKXTSrf3IL75uv2rfBmxjHNs7Z90T/u/yU
X5nd4x2e0puXK/IcT6gnMYJRPNbbsjbL990zFv8kr/FL/Sr/Vt92x7Q8Y6ZX
fsirWMEjzFrr039h9pn6OX7oDca/xbfIH523Ln/Dulw28zW+UX1P/mDmi7ws
f47/4AL+A6gTTH8=
         "]]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz70vQ2EYhvFXlNZXtUkrISKxEJX4GI1I22AzMYj4GJBg0ZgIqxBi8gcY
7GIWM0utgqkiqcHke/A7w5Xree73Pu85p3txc3qjJoRQwlt9CJV4CJe4awjh
it9lz4kQnrCPqv1J/mB+5CmexB/ePFPFK/bsO3yqXzbf4wYV+yqGnK1xK7cg
jRSy7vzW+8U4CljWyzhb4jPnHbJ2DJtTnOFm5zn+4T7+4kJjCEXkMSKLy3q4
jns5wUn+iO5B0l1pXtD/4xX7qHkMFd2X6Fvln/Lm6Dm+5nmew22Eb7zQK8tL
9i3U2j/wiRhmZLOIoQUDujnux5E5r3PIRd5136D3H9sn7Cc8yQfRP+s3oQvb
eueydbTZs+jEPyIMObQ=
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNzj9LQmEUwOHTYnUdGiJwdWsz/AiB5tSQtEmUEEGCTopCEI7ibmPQ1meQ
GvoHQUR74HeQkEyzfIaH33nf93C52WrjoL4SEftcpiIeVyOeqHNN092ntvRG
e7xQWo941n9eKTq/aZ9bOvYf1iLaeqhl7hgy5t1OW1t8mEf2jswXeu/8ZZ5Q
4YxTut5m3mrmueaY8s2EE/fHZPzLtnNibprnlJKIX/1hwR8JVTsLu2nzpm44
72hGB7rl/krz7LkrsMuMKee+uwTeAzAy
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1746, 2231, 1747, 2247, 1734, 2077, 1949, 1950, 1756, 1955, 
         1953, 2089, 1736, 2471, 1992, 1820, 1995, 1738, 2093, 1958, 2244, 
         1960, 1743, 2135, 2132, 2130, 2236, 2234, 2288, 1997, 2167, 1999, 
         1759, 1962, 1658, 2252, 1659, 2138, 2292, 2139, 2150, 2148, 1664, 
         2041, 2154, 2153}]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1744, 2134, 1742, 1959, 2243, 1957, 2092, 1737, 1994, 1819, 
         1991, 2470, 1735, 2088, 1952, 1757, 2233, 2420, 2232, 1733, 2663, 
         1732, 2249, 2230, 1745}]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2245, 2246, 2229, 2248, 1731, 2662, 2664}]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048089290210533`*^9, 3.704808939437606*^9}, {
  3.7048089815930223`*^9, 3.7048089945452843`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx0vQVYVc/zP46dIC0S0ilISNcO3c3lgondit2C3Yrdio0NFiAGiiAoIiUd
lytlYzf8z9t7zp7v7uf39/F5fF7u2d3Z2d3ZmdnZudrjZodP7ColJaXVT0rq
v3936fkxf8WuUpI/IEX80QFJ+TVE4ocY19yayfx9SpWXYPyvuKYcY7J9C6p9
C6p9C6p9C6p9C6p9C6iW/AfGHZ3//WnAmOzfjurfjurfjurfjurfjurfjurf
jurfDnZK+I0xSY8rRY8rRY8rRY8rRY8rRY8rRY8rRY8rRQ9bvqHpH07QdCXp
S3An6cP4IcYEfbi8BGOCPgYT9DGYoI/BBH0M1v0P7mrCmOSfN8U/b4p/3hT/
vCn+eVP886b4503xz5vinzdJH4NJ/vlR/POj+OdH8c+P4p8fxT8/in9+FP/8
KP75UfxjsXwrxiQ/gyh+BlH8DKL4GUTxM4jiZxDFzyCKn0EUP4MofgbBzX/V
WzAmyIVQkl6MH2JM0IvLSzAm6GUwQS+DCXoZTNDLYIJeBhP0MpjkbzjF33CK
v+EUf8Mp/oZT/A2n+BtO8Tec4m84xd9wir/hJL1ZESS9GD/EmKAXl5dgTNDL
YIJeBhP0Mpigl8EEvQwm6GUwQW+CgNpvAmq/Caj9JqD2m4DabwJqvwmo/Sag
9puA2m8Ckl4G+/zr8NU/nLheQNIPQmo9C6n1LKTWs5Baz0JqPQup9Syk1rOQ
Ws9Caj0LqfUshMR/37/CmKBfKoZa3zHU+o6h1ncMtb5jqPUdQ63vGGp9x1Dr
O4Za3zHU+ubKX1H9n2SxMktfJsaS7nMx/jf+/JfsfDrCjH8Vmll+eErofSOR
r7INwSy/2iTlWmEs/az8FYWTOCmS4p8yxV9lip/KoP/vc5afQ5XA998HVWy5
McU/Y7a8kaV/GFvOjicLqP0G5PiyfODGf5+XSPiZ98wHdP6dJ21Y3lX9a6+N
kket1H5ncWwUyX+taHK8DCboY/QVgh58PnPnmYCazxh2v3Hr2Rmm/6vP0hfK
0cNiWa7+Lra+DLseLmIsYectjP/x3ypLgq0HsPxl6Utyk7S/X9J+0vRwCf9q
2P4sIil6Zaj5ZvtTY9djd2lJe7OrJbiPPks/N39IMn+DJf0n5QO7/tj1L/IG
7/86PN2G19+/+XrXhtffv/ncxeJ2Sp4y9EjYU4bXE7lfufXWhOfr3/7Mb8L0
EfQw80fMRxY1H5z8NXtF0cPOT2I0RY8OzPqvPd/SfxgGq8O/5jor2Pb0SYx0
yP3ClJPzH0POB9MfKQ+MKazDfl+Ey0msw67fOrz/CMzYK//ov/WMxRrsfqxl
vzel5E0AJZ8DJPyLZ/eDViC1f4Op8zOYLefkEaevcfIohNxfeD++wpig11sZ
/pGrV4zpJ+W7BsXvYZS8siDHy/BPIt8b/t/jZ/RXYj0l+Uroe8djopyRX5L2
2fEw+uS/9d61jRpvA6ZPshxEbH1LSf+2jRhL6M/H45OIhxd4PUn4XY+/l4yn
Go+HlMeOJKbtR6Zcst44/cielI/M+UOe356kPIr1oM5fY5J+vP5LcDkxn0w5
MT5mPZP60TByfBy/brHjARsSM/QT8xPrT/Kb+Z7ATPvE98z8/5Mf7hIcq+xF
8pv2BzD0EPxi7EliPzD9k+dLELn+sf7ErZ8Y8P+PPGtW/sVrUfqDMYkZ+gl5
wWDJd0UYk987Ut87Ut87UvvJkZIvjmR7zHlOtMdgoj4+7+uo8kaMifOGOd+I
9pn1RrTPYEI+4/VYhTHRHy5vxJik34ei34dsn8HkeHyo8fhQ42H1l13s/Mv6
UeMJoMYTQI0ngBpPADWeAIr+YIr+YIr+YIr+YIr+YEpfCybbZ/RLon0GE+0z
mGifwUT7DCbax+XNGBP9icLJ/hhM9Mdgoj8GE/2Jwsn+cHkzxkR/jH5C9Mdg
oj8GE/0xmOiPwUR/uLwZY6I/Rj8l+mMw0R+Dif4YTPTHYKI/XN6MMaFvFUVR
80npG1qUvsNgcj6jqfmk9Gdc3owx0T/Wpx7h84w4bxj9mTw/NKjzT5nSt0yp
88GUPB+wvsi1b8PKY8o+ecf7T//DtlMl48l7Zk/pv0Ced4x8l9hr/PlHjJee
H2Z8Ev5w/HKR4J6sPjLEUMKPUxJ6Et7YSNpbKmk/64+bpHw8i6+6QSXzHwu3
SOTL9onepLwJZe2pw7x+LuF/JTseXZCMuwjzm9CPmPOM1JcsKPlvyvKHs/+H
Svg7WXJ+xdpy8os9z4r8Sf2PkS8Ev1KEJGbWz7/qGSx9u1Qk43/K6gsdg0j9
YfAg9vyux/QQ/LDwJTGjv/0bT73k/E94wd0HsPpAkhWLn7DjHcTSz573Iu6+
gNNHTMj1zJyP/743lsw3FNmR64lZL5L22PXT7s7yi60fa03S206dH/i+JBPP
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
owU1y6emNp7xBpUpU15Kr+Xff15XfjxBbnULyq0OPWli5wMqqydvRotb0HEp
mUSVfj7wR6Uz8/rOFHRvrHZeU5Icjrefqf1+5dwARTAT2ocWxKdif2DBVvXT
N45cZverDCvfUtAn69M9u9+XxfGrN1P21Lh2lwOrnx0eDttrUJle9vG4Wj5f
6oslQx0XZhjA3SUvbz9ybEHp88RDhKle8Fb/lfxpHz4/6pZH3b+fmVKNAjsH
XsqQ1oeVOfWyE52rkGm2YHnf73w+1LLtVxeHpBhA96890JjefL7UPUF7N087
WommPtyX9mqUPtzYtGO39lX6914rkdqzvk6XP+lDVcq+hEa9VjTMbdD19TsC
oX3+YR1Txr768KXL9O5HQqDj6OEhAudW1O6XO23cniC4m1B0WAu1orrbU+Si
0oLgi1rbiPf+fP7TDfnaCu99WtEUjxtzawYFw58RfacfZnBNbevvM0rBkHWz
YMXBUXz+06q9acfPj2lFm8WzPNZ6hQDIbunWbFOIGjcUFvVwGAgps3cY+54q
QtJvFx79M0ANzs65V72stAitu/Cius8JVRBZvFzf8LoIackoT7lZoAoV0ZOm
irOKUb3mTMe9D9VhpnaL2YCv/O+pSv4tQeY76ndrGmjAgfZVjrClHhkMKAnc
ssAM9t9f/mvJ7RakeC5JP7jMF1ZkztnqebcFqRrKfC9q9IWJ+cryCWat6Iha
UFPEp0BwUCzdnmPRin7ZXl99RT4InBMDdqxybETvo0KCwh9bgu/S5T6z/RvR
6nx5m36mVuBulPGr7zA+X2rUSt+X6bteoLlvr7yp36sF89RSpIzfvUALg+U2
X6nSwveppxtTH8+4qgU3y6JG3c7i85ta3Ir6VX1dhPrMjRprmWED1bPKf1T1
4+JdhsE0BSPTleVpaGeyyvWXYywhfqx91WGHdBSx1/C8dK4NmH5X0rqwJB3T
82vRLrv2EelI/n1G30JTe3jxecGUt7vTUbTh3/ikNmcw/TNWReZLMar9en6a
/2o76N8Wv+X+wBIUUXM4aJS1I0xY6GszSVSB29vuM3OucloF2i2wGzM81B4q
Lu5qsM2tQHVTzv1cpuIA2wZ7dy3sqEC2J9ZuLXNzhnujDjTuYfC2kDk/S12c
IVs9ZM/NcXW4vYHaF3d+S0vH/qzHK0eUB59JR4t+thenySJIWfR38d+8dPRq
jdHaxR1uMDfB8VCQeyX+3sw1av4gUTo+P4vGFnaNLU1HPvELj2/udIcU+TGj
+75NR3usZP+YrfMCW/tA2eF389A6M5ely+09IKdfxLvweD6fqdMcl4q+s0tQ
at+ngd2PusOUfS2bc1eUoMr55/5eH+gJ496t2T17awly65DZvbTAC9SmHbTt
TChBLgueTcye5gkqgbE3dBMqcXvvRrzqpfGHG58PFGtHe7R9SkcbtNW3rFri
DWdmHO/40j0DFay50/Spjx+8thUHXRLloZ4Hi752yfWGmJtreh86xOc3Fcdb
PqjfUYJeNb/aYmDL2DcnTrz6cqAEdSKtFU2rfWCS0dn92adKkHx+Ezrm6AdH
Bmh0mXKkBH1B1Un3O33gZZH9cZ2Llbg9uUrfrFxZLv4nANSelL0p7pOBwrxq
iwd/9YO/h2vlDwzMQLUOR9TWbguE5U+iOnV/5aG1DvcfPwjxhwU2NvHXr/D5
TU/cGlqnea4ElWULJ3557Afv1222Hnq5BC34mHN8ymd/8IjKdp5/k6FnztIu
CpcDwaTMU2VSSgmac22PicyOALCdvvbb/SeVuL3x5/ZPOaPFxT8FQ9L1b9G2
ahno2OMfB57MCYJZG2e/kjXIQDtMhcf0eofCVf18l0nS+WiW1Dld7Yog0Fks
fKN5j893+niy/u5V6Qw9p5KtPQRBcKPHT9PHd0rQSeHOVYsmB0NRivKg4OwS
FBo6UdVZLhS+PTzy7dz9EuTVo+jAHdUQWJT43eqHuBK3N6Nuh++fl/VocfWc
yrlVQbDE98jcrU31aOW5+xt+twQBXG9+dGAcnx91iknNvtgoMfp4oLPFQzEI
9trfLUwaK0Yj3GZlrzoUDHP3Vu55N0OM9pj1VT2kFwo9a23v/RwvRm+kPKcr
vwqGMAXp/XZmGVj/eesntK41ykAzz/x9u29RKKx6H5F3wjIDRfS+9Bvlh8El
6a6Ky9Xz0bEJZffnXQmF9y+uBAue8PlSc9++vdQ1twSdvmbV89nsUMjvne5k
lF+CTm3VPdjxPhT2f3IumlVYgnQu+u75WRAGISszbK89LUHDu362/xUWBqM2
31mr8a0St9djUuZ7UZcG9NH9SJMPYz+H/lK5X9OtAZXuMNRcej8UXA7tM9m8
mM+vejPw/PSPs8Uo89jM8hujQuHPldyN2ovEqKfYJ+LJn1AolV6uOTZBjKb1
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
qZY2N922QuqyXkJoZQ5abXdKbMzYAv8AR+WoPA==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVU1IlFEUfdk3fvO+WaRtolZKbnNRhBP2I5pB0LiwhQ6EQQlBgdWmwGpr
2xpLF5WKGYWT/eooRX8wi2IaN0lk2Q+1KIOCAp2giM7pnmjx5p5353733Xve
vfdV7znY2lXmnLuHtRRrd+BcB9Y48KHQuXng5si5Xsi6mHOV0JfwwXpgD/wc
HwXAo5BHYF+CXTvs9wIXgauA9wO/Al4L3AH8EHgZ8FY4SJQ79xu4HfpJ6GPA
/ZAb4HMV/A8B1wPXAM8BtwJ3Ai8C/8A65uxM7g8CpyPTH4W/S5CbYV8L/SPg
7cAtwFPMCbgJ+BpwI3ASeBo4BZwG/gj8ST5H4841IL8s5EvoZgOzSceNi3qc
NeqMg5OQu2LGC2Nj3i9l/7jM7MlbDvIJ1kSZ6YnJfxY/L+SnLW66fZDHQ/O5
LIHlze5EaGdmZd+K/RjO+on/dwCPAH8D3go8CPzFm49RxbYF+j7o30O/LjJ+
D0C3ESsD/Bb6Bchu2HY54+aVcskj3tdLLb4u8UWu5sUb7+g8VgaL9fUUukJg
/F+FzAZ2L2cgV0JWYN0n/5CNWA8C2/OO6O+jfJKvuHwOQHchsDrh/ZTE5TB0
a6BbjXUxsD3r5zTkqcD4fyJb+qMP2jKOs4HFxDrnPe+FbOe5gcVVx7sLbJ/U
nfPuySdz4v88u1Oc8HueyfwY9wrc3x3IqoTxRX67lONncUjZFjPMWmY90X+3
7Im3RWZ3ODTdovT8riQ/7JV58UbumQf5vYdvz0HeBBEe/ReV213e8Nb/495q
di74nwdjZC6N3mybIS97y4U5JeSHfpeQF+DbzmYJz2C98H8vG/p4o/ph7AuK
2YsvcsU58UA1QPlI9UPuc9Inta9T3UxIPymbpOrtmnBa90ouOA+K8sn6nFZt
V0eGO0PLeVY8zKqXiSsii2d3aLPkoc4tj2y+pKG/jn3RWX1QPsPqEZ5hvTjr
Z/bkRiR+S/zzHjiTJhUze/G06payV/V5X/wwfs7jjGxS+q9FtTql2JqkJ0/M
+6lsWlQfKdV6QTzUqaaTkleFa7VnnY9JX6teuyTM3hxS3333pk+Bk6/e9M2h
9eVF2XPGj8iefoelH5EN9TXSs1c5zwbU++zXs8IrtSd+542rTaH93y8934Qx
+S+IB+b7y1ud7AzN7oJm02rhGskB4Uqdxd7uUwzU8e0a1Fl8M/uk/+AthobQ
5j9nT5lmUU7zf0b10aO6yarvK0N7k6+oZ9k/7KljsutWffFb1h395eWTc5i9
mNF/tOd7wXc7q/fgrmxoy54el/1t7Yn/vVWssbxizsiWff7X3tue8Z5S3TL3
CvV1pXzllDu/Y81zJjR5mwmF0HLskP6KfC4PTZfXuUXxw3ziodlytsUVq1f8
zI0z6Q8FuSb9
         "]], PolygonBox[CompressedData["
1:eJwtk9uLjWEUxlezv73f/X27zORamfkTkKQZYxp7K2VutouZXTKFUqMcbrjh
j0C4UCiEmUFjT2OiMKUoh0vJYZxuEMKFkVN+T4+L52s937PW+67T27N1d3NX
R0T0gwzsTBHPMZ6CZUXEjmpEif/zfNblEZ38u43WKEfM4PsXXqtEnMCnCu+G
P0TfgD4LvwueEDsBOolfjv4MfQj9BtoQOAc/A76gT+U+axR+Fbu7FnEd3gZd
+K4BR9AOgXn0EfK71+Ech7EnwEDJ/6QpRrHj5Lik5hjFHgZ9aAPgOPZR8Brt
D/kVFddUhy9Gnw7ncB7egJ/G9yT4mDtGscfAWrQ3ue1V1HcRPsx53+ELYB+8
BWaxZ0CGdhPeLLvnK+CT8NVl5/SWs+7AN8N/wFvoczoT/gG+vvjfQ/gjeA+8
QcyLkmtQLdO5e6ka2tgX8F+J/wL9adGf7cmxD8BS/Pcmn/0O1OFjIMP/MWce
QNufnItqUm2j8DnsW2AR/Bd3XMLuJ2YK7QroLbtnn9E+gVOZa1StX+FnM/vI
Vzun3dOOjCXvkHZJd3ShteGD8Mvw37nv1N3ayS3JM9FsdEc9eae0W7pjY3KN
qlU7ui15RpqVduoVvi9z74Z6pF6pB+rFe7AH/hN9MnONzeQZapbXwAi8UdhX
M9Vs9Ub0VjTzClq5sK9qUC19uXurGWvWB5Pfinqu3vcmz0o7PV51T9VbvZlv
xN5Pfpua+aDeQ+Fd045oVzYl90o5K/d/ptWPLg==
         "]]}]}, 
     {RGBColor[0.3819315051035968, 0.4379311998766634, 0.5945514474790358], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
1J/3nHtZx/ut/1qqs9hv+D+U+p/oP575gk0=
         "]], PolygonBox[CompressedData["

1:eJwtlFtoz2EYx9//f4ff7/0t7SBMZCNxQ4oJYU7bTCFtkx3ktEkOORYpRCIu
KDQ5jWwXhgtzmqLNDW5wRS4w409sDitkxTCfb4+Lb32/7/O8z/u8z/s879AV
G0rWx51zNSAZbAucK4059wZURM7lpjnXkOrcaTAAnsvafWz5oBrfs+iT8C1J
zp2DfwhZJ2CcYCu9cxtABH/JWoT/WlCI/xMwDv9N6Lnw56AIvR//u/A8sA8+
n3hd7B1D/Cz4ZPwHYDuh/NCF6Fx4I+jCfx56BPwK+Iaeis6GnwGv0YtBN7EW
ELOd/e3eYslnCr7vuedT+ARy/gmfztogdD14i+9S9MSY1SCDfEvRo+DN4Df2
y8TsjluOl+B/8UlwXjsowF6nHLClpDi3DttwfGrxfwteoQsjq41qspHYs9Gf
ki0n5bY2sr0J9MdUg/gsfP7AC72d9Z21mfDyyGqrN91KvIOsPYBPAgfgNYG9
5SMwFN8brC0n1j16oQleydpP9AvsHcSvZi2WbG8yhL0VYBy2VpCK7xHsRfA2
fMajcwJrLO3R3gS6H/n1AZu4e15kvo/Z8474q1hLSbIaLoKfZE9ZzHKowjc9
srP0BkuIlRJZ7ZVDObrGW+/9Yv9edDy0t87Se6O9kGw9qd4sQ49mbxP4g85C
l2FbCBrRXZHV4xi5XcDWSryLqhVoCa0n1ZvZYBe8GdRhGwhuhjYzmh3FvEC8
q2AZfDNv2ELsL5HVWmfoLJ258P95mZx3nhh949Yj9fAc4t10ticbvj20Wsqn
Df876AbOHgxuw3d5u9tIsBOeH1huq4nfn/1fvPW2ZqgA2xRvsz8De3qa9YDO
Us7X4L2RzXoG9hj2U956T2+kt9KddDf1fKi3TzNf9YB6QW+gt9AdXsET3mZT
MzYNXRnY7N8CQWQ1UC1Un+veclJuVdh3YBsbWe/qT1mD7vE2+5rJEvTDwGZB
PTUL20r0tJjNwDD2fiZWJ3wO8Xvh8wOrld74O/7H9Ydgm4euhT+jpvG49dB6
vWVgs6Q/K5N4E0L769Tj6nXVWLXWH/kN22Fvva4cDsF3BnaXDpDubcY0azqz
B37U21+kmdJs7fFWG/Xsbnj/wP4O/WlV6LPe7qI/Rn9Nsd4zyXJW7jMC6w31
6I/Q7qS76Y8pJv+iwHpbPdQd2gxplhRjNr6dofW6/vgO+Fdvf6/+3Ln4/gMY
ysjC
         "]]}]}, 
     {RGBColor[0.5582191751726613, 0.49988533312777234`, 0.4909190791317263], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

         "]], PolygonBox[CompressedData["
1:eJwllVlsVVUUhnfvOffec04NDWmtQhQsodTogyVRWirBSCI0UMsQn2hRHNqC
mrYIJgy2VC0iRn0whknFaFTCA9EHbaWiD2piMCYOCBqVMtg6RA0qUByo+P35
H1byr73+tfY+azpVd3Ut68yFEPqQGOlPQ6gBXI1sAd+XhdDDeSP6/eCKJITa
KIRJSB/4ZDGEEfBRgtSij8DZlw+hjbNO/Dcn5q5HpsH9BDlbEsJE+F3YnoEz
i9jt3PF3IYRNnF2GrRL5Hu5zxJtJvP/Qt6A/lvptt8A/Dn8P9lnYSznrxvYS
/g3cVY4cg59DPwSvE/04eBB+O/z1yCHso+j7wdXEL8e+lRjXEOta5HHwbmRe
7ByME+cLOONwn0Uvwf9bzhrAB+AUifUq9jncVYGcwF6P3sb3Po3MBn/MWUfe
b9BbDnK2FO4y5F3wO8gScBnx1nJ3JfyDxN8Jfxj+9MR4B3IM/SJSxhvm4fMD
tk34XIHvldy3ETyG/WjeOT2B/U1kEdwm5C3wd0XXQhxxBxLbJhDjAfzvQe4m
1jrO2sB1iWvzAm/K8H2Ys2mxc6BcpEXb1APqhc9VI/yb8f8d3At/KvxaOF+j
7yPeTZFz2o/vrsy5Us2fB6/DXhY5h8rlVXC+Cq6Zaje5NIQh4gwgl4Or4ezK
uwdeBj/EfVNi39kDPsDZ4sg5HgL/RoyP8o6hWHPhfBO5RqpV4OxIcI5LwLfD
/0e54WxF5p5T7z2Cz5/EW4nP+7F7SL2kHlWv6mwi/FJkPvoQ+iXgS5Gl6B+g
V2buKfWWZmoh/vWcDWNr5axO84f9VM49Paz3cfYG9pnAi/CvSzyL6kH1omZG
s6McK9fKuXL/Oj7j8EvwvzE4Rg7cDOfOnL95Cr63Fc2tQjbDH0F2xq6patuM
/bXYOVauz6d+y170v1L7yFc90gdeXvSsaMdo10wip4MFf5O+bSy1bw0xzoF/
5j0Par+g96h3eeOv2DvQF4I/zDzL6olf8K/InEvluBzcmHoXqYcXgFtT7wLN
VAt4OzIH/hr0f3lHFz4F4vWid4LLiflKwW/UWzck3i0D2LvBGxPPunaadtsi
4o1GnpGT2N5LPNsz4H9JjGpifha75tPBbyeejcn4D4KzzL2hmqTgDuK1Eyvm
bHXqmdfsq8fV64eJWZfzzP8BXpB5l+qbGsHLM3+bdlgL+HqkJXjn3gC+mTf3
R54JzcYZ5NHIM3AB+9yie1s7Q7vjSd5Qq35Dnkq907XbL/CGVuzz0bdG3mna
bdoh2iW641zinabdJs5Y4m/Wt+vOs+BVqb/1NPGqiDW11LOtGqgW+icot8px
E9wVie/WjjiMbU/qf9U2zUPBO1C7UD07Cr4jc201wyvBqxP3Wj0x7gW3p/4X
KOfK/eLEb9E/T/++bnyeCO6RNeAjBfsWsK/Cvi31v2MJnFPYZmSeXdW8JvOZ
bJ9qJjLvbO1u/cNe1O5LnVvVaKTgmIqtGqvWbUX7qgaqhXpKvaUZPIM+O/Ns
aGc0gJsy7yrNzK3gHxPvcs3UT4lnSrOlme8F/w+W9/56
         "]], 
        PolygonBox[{{2275, 2274, 2160, 182, 1813}, {2273, 534, 2161, 2274, 
         2275}}]}]}, 
     {RGBColor[0.7345068452417258, 0.5618394663788813, 0.3872867107844168], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
zehx/8XcJ1bxfx/0C9fZn/G36ls5Va35DsSSjq4=
         "]], 
        PolygonBox[CompressedData["
1:eJwllltsVlUQhU//v3/PObvFB2nRxEAkXqgaa1VEqDcSDdViqRdKMPZCq6IY
SwWM0YLBB6KiPvhgMCCEVIJB4gWKRI0YEwNewN4x0YhaRAMFoZC2FBTUb2U9
TM6sPWvP3mf2zOw9ubn1gcWZKIrWIPlIfcKXgZ/R69DnxVH0RjaKdmDMhigq
S6PoW3BFLoo+wHYf8jp4K/az2CqZM5/5k5BZ6Dcw9j32u+B/DPduZDW4Hf4Q
tmVwLsh6zQh9mDW64F4LPg5eBr8d+xD8OdhawBvAB8G3gK/Hxz7wTOZ0YBtg
bAP61rwo+hv8DD5+ydh/P/gqZAX8qcg6bGfgH4C/Ef4otmbkLWxf4/8ibD2p
uW3M70Zfy9h18MuRTXDHwD+hl2Evwt9UOF3wZzP2Gfb7E889zO+Vgsux78V+
G/Zt4D3ISmybGQvYHgevRe9n/VJ8/4P8DreasRF81WF/E/0L7OOwTWNOD7gG
zi5sq+A8n/E/npAe2/d5+E3wGxgb5V8XIquw/cv8MvQO7Bn9G/Zi5pcg5ehF
sf/3mwLOtJB58LNwn8XnUew9jI8D98EfQl8P/2r4WeyPYr8d/hD+i+AsQe+G
U8T/HoJzTmcF/xr0F7B3Yn8C+THyGovQ/0CKwZeA/0wdQ8VSc9Yw/9PEsRHn
JL6P6IzgloAPo78LZxbc3YyNR78Mmcl++sBTgvekvWlP2ls1eC7/MhE5EjvG
irVy+GFwAH8OvgkfCfqVwb7mKOeCz0xnpxxYCL9NMcw6pgPgT5DKnM8wj7V6
4a/Oec168BZwFbgXH5cH14xqRzV4PnFOKjc7wU2xc1C5qByfgb0XOcbeGpAe
9LeDz1pnuB69I9jWCN6B3orE6PWMtaAXMOdl8EtIF3gbUp8zZzF6e3DtTyJe
g+x3JHasVUOqpcHYta+aUG10gk/nuaZV21+BH8q5ppPUa2rthLEliiXrN2Wd
o8rVp4NtjyA70QuRXfk+U52t9qC96MyPqtekzqUVyD70Ps70JP5OIfNSi3Tl
rHJ3e3AsVIOqxY8S9wLNqYU7nDhXVYOqRfUk9aY25u9VfjLn4oxj1o09h/2V
nM+0B/whMl9z4dejT4k9Vz1vKdyd+GgGt4IHwD+wp4mRe5h6mWpata2ekA/3
iuDcUA4rl5Vzyr3fGLsZfRE+Yri3MvZOcA9UL9TYk9hWJu7tj7HnFxPHSLFS
zap2d6tGMq7Z72LngHJB/6R/+4uxQdU2nPGJ19BaW/Axiq8KZH/WZ6yz/hKZ
m3PPLsC2LjhflY/qLe+DH0Q/zvyq4DtGd416ei324di9VT1Nve1A7FgdQu7R
+cbu7cr/wtg9Sb1Je9Rel4MnZB1jxVoccbUH7aUmcSzUcyZja0xd+7rDFqRe
Q2u1IL/CvTT2vytGx2KPyaYab0Xfn7j3Kef70adrj1nHQLF4LXGvVM68in4w
dq9VzlfBzQvuxXfC3xzcY9RrlPNF6JuQO7BtB/+n/en8sZ8AV6OfTn0WpYyN
oN8bbFMOKhd1h+ou1Z6WsvY0cCXcAcYqgtfU2upxafAdprtMd2I29R2iu0Rn
/By24uDeWoGPC4NF+h7GJqCXBOvqaept04NzVWtq7UbkXL57jHqN7kTdjXoj
jBGf5al7v2riFLUxBn4v3zFQLPTm0NtDd2oNcxuCa60W/3XBbwy9NfRmqYwd
E8VGPs6gzw7OPcVQsdQbQm8JvWnOJvYhX9rjguA3h94eunOfghsFn4XuUN2l
M4JjqZxWbt+Yuler56v3/w95pEBK
         "]]}]}, 
     {RGBColor[0.9017243634681774, 0.6243109086704434, 0.2953455267513498], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
sdYu/P8BTjdYEQ==
         "]], PolygonBox[CompressedData["
1:eJwtll1olmUYx+/XZ77Px1LrqKytsmCxYZuZLLEJaTSVjGkxJcze+Sp20gdt
J4qlZytmYZRWOCs7yIOYRglJYaYVOaW5NSOpyKS2uQ816QM309nvz38HF+/1
f66P+76vz3dG8blHn50UQngVKoHeTkN4AGZZLoS34GdBHfB35pGXhjAP/Ct4
HngKeC74R3AtuBTcDl4JHsfH2iyEe8FHwDORx8iPJSF8Dp4FdcIvgoa4wJUo
hAx+DvqdyGrQT9CvBXeDZ4NT8D3gT8AV4MngavAH4NvBEbiY+ezTfBvi21p8
HuK3FbwOvhsqcFYT1AP/T8xZnD93cgi7sc3z7TFwI9QN3oX/+hK/SW97B/2X
4f9C/ibyE+h/Bb4P6oJ/DZ056C8Eb4N/A1oC/zvf5me+s+5ew7dGfN2N/Ch3
GYYuIl+e2PcO7lMGP4ZOBfgAeBB5G/p12B7F33TwEXT2Kj/QYfjdyJciK4Df
g+/F/l3yepwzQ+KcKrcXlWPsR8C7SnyHhej+gd4x5NV8uzQRU8X2Dr4tQv4x
Nn3wTdxnP/xZZKdUD+hfnqgR1Uol3xrQ74fvyTkmo/BFzrvGWat40xTu8wh4
ADwGxeCfwVvRfQX6RbnOfFYH8s2KBTp7sD2Ir/JSx0ix2oz+CfRnQ59xXiXy
PPKN4Okl9jmUOSfKzQ/gKvBH2D+E72+hD/Ffj/wMfBE6iWwN+GrkO08D96ru
CWU7Z/6G/Td824+/Kuhr+K2pY6ccKVfb0TmA7afQzalrWrW9APl6zivF5nHe
MwKVgX9Cpw37Lfgfjf0mvW0L1A1/U+bcq+bOKM6Z36KcKXd1mWtNMVfs1QPq
BfX0FfhBfOyEv5VvA/CLY+dWPX6JuzwBrs25Z3M6G3/TuMsYb35RZyWOzaGJ
3lJNqjbzynHsnCl3eoPeMhWd8cgxVCx1ps5uRz4M34XNpsgxV+zvAg8Efzue
esZo1qzAZgOyl6CAbAHUoXhDM+DriF8V/JPYDMOvhFLwNqgiss/mxDFWrFVD
qqUlibFycJ1qC5of+ZtkvbxvPbgAvh78N/ZlkXWk25K4t3SGznoQeWvknlJv
KSaKjWrgFnAB+g/+eagP/c7Mub4N//2JZ6BmoXSaUteYak012pi6B9QLmmGa
ZYqBYnEN+9bYNaxa1kz7F748de1N5f1l8DvQnxl55tbDV6IzGPymC4l7UL04
Cq1G//3MudKM3YvuBc3x4J56HdkN6Dfh6xx0Erws9SzTzDqP4orYs049eVWz
PnasdQfdpTx2rvRNvdCMj5T39qM/wlmbMt9dNfgC/D709+Qc4xrNstizRjth
TPMk8WzRHZfCD8eOrWqiIfVM1GzUGS34ezjx3VWjqtWDqXNdDf4Cvoj9/Tnv
pAj8VOze1U4qAfek7k3FcGfiHaVdtRj50+g+E5vXjsyjezi1b8XsS/gW5A05
79QkdQ2rljVj/sTPxti1r5mbpZ5pmm3q0VXIlseePdoBl7H9PnPutMN64AuJ
a0M1fAr+PLbnct4RCtJ3qXejdlpX6h2uXa47NSs3sXe1Ztw49ttTz3rtNO02
7UztTs2Us9p1sXeRcjSq+yTetTci35A6p8qtdup43j2gXtAOGFStxJ416vEm
ZH2xd7F6vC3xfwj9l1BO1iBbHXv36j/FJPw3ZN5t2knaTf8DFRcmSw==
         "]]}]}, 
     {RGBColor[0.9298853331277723, 0.6947133328194308, 0.3826445326960942], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwllXto11UYxs+23/Y93yPh7Kqba1pRadkQu9AN04hKK20XK1GTRTUvM1C3
dVEjA83MaeasyCIr6I9ICCKi1E0t2+wG2oXKIAhbZTVLwjWH9nl8/njheS/n
Pe85532fM7rxodpFxSGENUgBac1DOAPwbEkIJ2IIP6K3ow8pCuHKLITOFMKS
0hAqWPQevjr0v/EvYG0t+AbkZ/S56BPBa4kZh16PfqwshEPkGMHaNnLswX8r
+tPsVYd0st8RZAV4M/5R4GXRe2mN1raR7yzydRBTDK7C9iW5e9HvQP8AacI/
AxmObwP6BPC9xPSz/3PseRG5i4lvJPdf2C4stU2+xcgTxE5lzRLwN/hPBx9g
/3/A28k3H30e8iH4AWJOgltZcz/4BWwT0VvQB8t8Jp2tHukC10ff5YvkawDP
IX4A3w5ib0HfhH416+ezfgDbZmz7g/fcobtkj6/BDdguBa9GDoMrqP8p8Hes
ORP/3eQ8Ct6E7WJ8y9mzg/uoJ0cfvjbkcPQd6C7+pJ7bwB3EjyF+O7bRxG5B
bir4Tk6Qbx8x48m1EX/IXbNq/xV9Gno1eiT+CvQt4N3kayVfC3IO+y8lprzg
N++Ptsm3FOlS/+B/k/w/4J8E/j1z7t3sUTmEd2RNKbXOI2YVvtmZe2E28ll0
zar9fWQkuDdzr2mPXeT/mJhLWNuOfxB8PBrrjfXWB5GzwbOw/Qu+K/Ms3IN8
Quyd6OvADaoJfSoyi3oeI+cU8Mnou9Eb6C10Jp1NNX/F2m1ID/6bkXeIHa4Z
CJ6REeAuam4u+M319mOSZ0c9PBa8KvmtK5H1mc+ss89BPo+uSbXNQPaAd5Jv
YcE5O3PPlGZLM30wd82q/RlsB8h9Izmri1xjDf5B9Cfx5ejNxH4RvZdq/onz
bcV/FLyXmD9YvwIZBm4ix6PgceToQe9G+pJ7UL14OfdRmftOdDeaWc3uIvJP
Id9K4vcR/2ruWVyHLRDbi+3dUvf8WPS3kK1F3uMIvv8y51aPq9e3kW89/qHI
2+AF2MoK7lH1ajE9VaU3x38Na6uSZ6sb/7ngGnFIkc+0HL0qd29ppirAH0Xf
tThT3Kk31duqx9Xrr0RzxwXkeBm8K5oLhokjcve0ensxtkN6G/Z7nNhjSLX4
LRrrzDp7D/rMEnOguPAR1VNqDtuI/7Jk7hVH1CSfSWdTzG/o3cl7TaCmfnx1
uWdtQPwN/jS69zXjmvWF0W+vmdBsaIY0S5rpX1g/LZmrxHnTVZ/4s9Q9o96p
T+ZG/REN4MZkbhSn3JfMQae4SBxE/N5o7tKMalavS+ZuceL14JHJb6MeqVSv
RfeuevxUr+c+i964OffManZ1Z93g15FrxY2cvzaag8XFsr0BPk/8VOSeOR88
Kflv0582GXw8c2/qjDqrZlCzqD9xp84nji4xJwzV2bC1sz7hfzh5JjQb5ejL
kv8Q/SVr0cuJvypzr65B+tBvj+Zm5TwNPD33Xann1furM3OhenQu/tbkvVay
Zwt4f3Juzdi3mq3MvSiOnYn+fe5e0AxoFjTDmmXdwWuZ/1T9rfqjcnFFcu36
I/RXaKY12+KMycSPyl27evh59Jei/wL96ePRH0yuTX9mE7gu+i3EIeISzYRm
Qxw7gO9/tvsVWA==
         "]]}]}, 
     {RGBColor[0.9580463027873672, 0.7651157569684182, 0.4699435386408385], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV1uMVtUZPf9//vPvs8/QCooVq1zszQbUBpORUsLFIoZiQ7mIJfpSEC1W
BEy0Fi+dGZhB6ACDNWkTUJAZW/oAM60JTQozYxW1ERwoQWY0YeAF8GWKOmLb
BHpZa9Yy87Cz9/nO3t/+ruv79k3L1yxaXU6S5NVSkqSYbw9J8h/M18YkacmS
5AWMidjQV2j91TxJZuB7AjZPxVwGbS/Wv8f4A/4dB+1mzE+D/gzGPeD1TqH1
x+DdVEmS57CejH3bM93BPYfKou/D/Gym898ua/8vsb4I/iszrXl2Au7YjPkT
zNvMh3L+Cfs6MHLo80kQr7/h/gOgvYYxBnfVY9/PQL+S6Nw2y3Ad9ndhfhP7
3yqJPh3zBciwG2d3YYzEGI9RCx6XQG/DuhXjAs7eANobONtXTZJjWN8K2WrA
YxnGBfBZZ714F3Xj92HQH8f+R2lrrO/Geg7GNZlolJP+WJZrpn9IX+X9E/F9
FPs/wr09GI2gH8X8HcoB+W7DvB13tWDsw/nD+L4O8p7HuQMYneCxl34D7QPs
35FK93WW8ydY7wetBeuXC9n3GsRGc1l3fQ76r8BnGWS4ugZ3gdc3ceYe0K5g
TMO+d3Hur4VsSxuPxr4Hsf9azEtLip0N+Hd9rpjoLaRfJZWOoSx/XsaeJqzH
gX475m7sewL0liCf0r+0UU1UTD4D+ncxnynLBveD/78xz7Pef8cdBzD/uKr1
rETrfqyP+x/nmYn+n/AextcfHUvH7UPu2VYW/5uoJ+g/gj1XlIZj91Os2yDb
AtBbMc+vaA/98kP8P4L1EduONmyAfoMYAzh/ELR/gDYik0+ewPdJ0EfAhn2Y
v5TJTyuDfPkpzq3G+gTWBfasqcqWlId3zrdsV0fpsilIxy/0ps232O6M9a1l
0XiGZ6kjY2q+5c8w57jjYCoe/bYL5zPO5THOr4NRsbYzVbwN5RLGCOwfLOn+
2kRyLjD/M+ZJ+58y3jyF9aJc59owL8nF595c/l+eKa5m5uJxVy6dqMsef5Pe
WCjXGfeM+blY1zgPTmN+xL5b5z3Ua31ZPiUW0fbtqew/uyQf3gc+8zCfwFiG
9XliAMZVWJ/L9M019djr+L87Ff3XsOOCTPnL89+AvV7E/Lugb9J5z8ioe+uD
bLkw011zjD+jSsJiYnI/aJ2Y3ysrj4jdpDMP6kyPWHdh7ilr70J8f4CxCvvr
jKFbcNe5iuSjLE8WwrifF+LRYz6DuG8SzvVWhZ33ZeLD/JibKn5eynX3+Fwy
E/sY9w/lyv2HMb8JHSdhTwPWjRXhDjGn2fFyCevRmc4SMyl/9xcyYP+STDqc
Au0HqWrXDZD1Xfy7sZDNaW/yuQXfvaDfWgjT2xxjJ43xlJ8+Zv7RX9w7lLe2
0/mKfH4/aJ9hfbYkn9OnvOcuxkcqv9enovHeHY4bxky393EP+RITWIO+X4j/
nYVik7jKOIxRcj4ZhKW8kzJTv7mO11uMycRmYkCf85g4eoexdHIuejkwmaUD
efE/bcc9tCVloK4PFdr3MObTVeHfKt4TFXusgZTrgUzyEBcCaH9J9X+Ofc0Y
a7Wd2QNsKCuniAltztPPqsKDDzH/lxidKraavYdxUAfac7YvayFr4ljIM7NQ
vM4qFBuMa+J2O+YOjNZEGMkaz/pObCJGvR+EQw+kupv1pctnW3yWeE+Z9zne
2I+wPyBO0u70E310xD5bnQur9zvfn8/lg425aO2us2Mz5doY1xTKSn0Z3+2W
eSPkDRXd3ZUqzhhP03LVu+/lwu5O53uP5aecG5wj1ImYyppHXD2Uyj8DibCD
tp7k2sc9xPUVmWoQa1GIyu01QTbZbtkoJ/1LHsyVC84X9kEl90KMp0HfcTrK
duzpvhJVx0dH8dzmetrhHob86ad5xtVxhXJkbCG9DllHynLG+9lXHnJcsYZT
H+LeokIYsRjz545hxjJrWovvJT4vdU6xF6PN2GMQ/xvKqgs9xk/a+umg+vTl
Gn13pMPxRrvQJuxhV7qn5f9O11niIvnxXsZ1s+OffS0xkPgwkGtNXCQuTDS9
2/6lfPtzYUi7+/B1rr/s18iTmDMAnbfi/B7IOyUVLtPW7NWILZeD4vFDx2S/
eRx2X8x7p9t/g67Xy6vqA/dY/lrnJvN7oevIkkLYeG8hXGUPzf/EGtK5j/5q
cmz/Myg2x0GXyUGxvBPrt3PhwDuYj+TK06OsEWX5ZrKxpNHrOxij4NkfVQOm
Ov7YF611b8T6stzy8+46xxL7/UvWh3atM87QfvXGcMY0Y5uxsrLQ+qeFeo1a
+5FvpuO+mzHCtxPji3KQRry5M6rnmBWFJTwbnK8bLA/7mr50uAaxTrB+UI/H
rQt7OuLIGNf6TvdVNc4/5iVr8knXNfaL7Btrce8mrG/Ev+cLYUu361Gva/rl
XL1ecL/3nm1F3zB+G5w76wvV5vpCdiadby7Kye8rzqm1XvM/6SuMUfXeTzyo
N/by7UMdeY79DrGbOMAaNcN1irEy1CfC57tzvQFewfz1KH2+FlWTz7nXqq8I
+4h7TYV6TvbpzNH1zvFG25/yvJwrZ3bleu/x3fdRUP6edg4Tj7tst1fdl7I/
/TP4Pgj+rxeqZ8yb/4HeGhRPzEv2KRPSYX1mOFaZe8xN4tT4KNv/JijHtroX
mu06SF34bqBPiQ+sw6dcZ5vMl7n7ca79U8DnWBh+a453b/ZoVJ8323j7Rqrz
7EeH3oCV4XxhPeIZvjfolylRvlprf30r6vzNUT3EPGPCFefy236H7rDMZ90f
UGb2JnxTMTbOuS/m+cdy2YRvzdogHG0O0ol+pR0G3bOQV4frKbFuj22+OFcO
TXcPRuzZaPxhH8q7mVO/KFT7niqkx6aKbMG3NN/UzxqbByz/YPB3rjwg/rMe
1QXl78gaxfwKY/7rVcULffi+30p8N2dR/f0jQf03e4NROPvboLidENXvvWUd
+I97rge9129dvvU3B73f+Y5/LMpfq6LqEXUmThJHiRMz/X7ZZXygfxgvjFe+
3YmT9D3f3nyDbyzUExBXWC/4XqUdFkbpSX2nR/XptAV7P/qB9ZCYcjGovvwr
6L110XnEerLF+Hmpqjy/Lde5F11/GGu7jAPEeOIm+wni3FL3HqzHjP9pUX4b
5zheFHXX4qh+9qzPkHeTc+Qq++a1qvCg0Tiw2dhM3CPOb/E3c2WH5WlwPRrC
saowh/ySKFuzdlH23bbzMefWKPPYaT4DloGxwTc/cXsqePwfeoCXLA==
         "]], 
        PolygonBox[CompressedData["
1:eJwtlVlsVVUUhk/vubdnuJogFAlgCziHAkJMKUqwRYxRNJG2UA28CBQEgfLS
OoCmxdDSqkDFRB5QwYKpRhmjOIIaIipVGmPaogGeHF4MQykOqUa/Pz8PK+df
415n7bXWnrBkbXV9JgiCbVAW2pgGwbt858G0gEfmg2BpIXL4/iQItkRBMCoH
xmlaHASdiW0fgt4AX4/sRXSL8Xke2zHEmFUQBCfQl4BXQhn8e8MgWIf+FD4t
6M7BV4Nr8N+M/VVQNfgOZD+gq8Xnc+xLkW0hfik5DnDGZPiT8DdhPwm8ITUu
wv45cE3i2CvhK8CVyH7mvLnY3AW+gE87/kPEm0b8x5AVYLsYeg9cjz6P/33w
XalroFpcxr4P/BWyZ9DdSoxz+J9BtjXrmKfBr+NfHl7JGVyK/RzO7sfmNvAm
6Dr8D/Ivpfg3wD+q/0f2FPjJ1LgOOgz+DFqKbwM2R8HFxOzGN4fscc57GtnV
uh/ObCJeB1QMfwB+OPpG7IeFznE6upmJ72IRNsfgK9F3ZNwDFeBZiWMtQX8c
/QfwdVnncBhcBvWg/x0a4OzW1Lnpn9rAX0Lrcq7RBfzr4B8pcI1XgHdxxozQ
Z+rsycj6sq6RavU98Zvhn8XmPPrx8J+Elkk3FZtTWeewgvirkDURK0K2Brw6
MW6FpqKfC/2V8Z28RrwpUC/8dPgJse9Ad1EM3wI/HxpEPw6+DTykmmXcEydS
28hWdzAR3Wr4isA2a8B/Y3OWf61E9kfkO9JdfYzPOPAI6CA45n/L0L+N/YM5
12ASuBnZvtB3qrtdD98VeoY0S2c4t4ezxiNr57y2yHe9H7qG2K3ISpQ78W5H
Vwv/ALms133ivzv2rOkf98SOoVj3Qz8V+p/17+oZ9Y5mQLPwDfHG6q6gjpxj
KnZV4l4oJd5A5J5R7yjnPLq92C+AH8C/GrwfWggfQMtSz7hmfSf2EfavRK7V
R1AJ/D7OuAd8FNqj3k69W1Qz1a4Sm9OaV+hQ7J2k3aSdpd31BDb5nGdMs6ae
V+/vxj7BdlA9B/8p+j50I5H9S3qH0F8Lfgf9vJx3SAW4R3cOvwr6MPWO0a5R
DrMT7xDtEp3ZCD4fufaaCc1Gc+pd1ckZm9EtJ+ds6JiKfQSqAu9Alkv8z/r3
I9AN8G/Cv1xwZQdq/ybW3QsdUH+n3jXKWbkvT11rzaBmMRN5l+vMZbFrrFpr
xrajmwE1h97JneBubBaF7vHL9Mdx+Ifhy+AvFbrn1Hvq6fbIO1a79hdyuFv7
P/K/aGY1uzti717N7Kuxc1buOlNnz07tq55R76hGqtVZ7GdiexFqCt0Te8Fz
sPlVuwG+HtsNsXtxInQRfj76S1n3nHqvSlRg2QLt4tS9rTdLb9fwvN+yJdCI
vHeIdoneLL1dtdgMZv1GNUSeMc3aF/A3oy9PnIvuUHdZHnmXKWfl3hW71zTD
b4HXRu59/YP+5YXIu0Fvqt7WosS9+L5ioB+K/RbqDv4Bj4Fe4qytemNT56zc
9YYX5T0Tmg3twIXgmtSzqBqoFv/FvkvdcZB4B2gXaEcOgrux2UjsQdRTyO3O
2HehHb4T3Bh5llQT1eaWxLVQj96YOCflpp0xGvs/I7+d2pHalb2Rd6VmULP4
NfyPoXfgMPx/gx+L/Sj4Y6l3tna3dtym2Dkpt23kuivyTGo2NcMn4Ucnrp3e
RL2N36Z+y/VP36XuEfWKativtz32WXrz9Pb9D+AmKm8=
         "]]}]}, 
     {RGBColor[0.9862072724469623, 0.8355181811174057, 0.557242544585583], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
5ujT6c2529Kfc3+jv2mQnP8BJJ0miw==
         "]], PolygonBox[CompressedData["
1:eJwtlltsVlUQhc//t3/PPqdYsbbYS6ISWwpSjbZUolWMyJuJ0fqg9fKAicQK
aSsqCpgA9YK2iC0tCiQGI6JgFBPUxDuN3NQGo9hSSgXREEm8IBCKFxLxWy4f
Jpm11+zZM3tmzzkT721ras1GUdSN5CNL0yhqzURRaS6KOtD/iKPoCgxakGPo
i5Fm+KNIYRJFy1Lb/gV/E1xFYD96RV4UDcNtwOYhbMuweQo8hgyi12KTwfbJ
1NxR8CzwKnxMBJ8B3wXuBVeB7ya4t/D1PPbN6F8Q60r0YfjjkW26wdey53v2
tnFmD9xPrG2FKwGvA3fAVxLbIqQqdsyKvQbcDbcSqUY/wFoBXD74ZvQXOCMP
/XfWpoDHkF34fpuY7iGeas7ogysuZB/cXM7rBO+Ar8Pfg6xtR/+ZPf3YHsHf
Mvie1Hv7wRXg87FZzd5prL0EVxm893FkKHHMir0eWQt3Lnge+lSkF3xW94Ve
jDwWfAe6i4vw14m/vaoZ8XaxVgv3aLDtA8g5sWugWhxBrkefjWTg/sT+K/hr
wJ9G7pFG9Ffx14S/dvyPwsfIaNZ3qLvsCa617nwV+i/EsB3bYvavjZ2Dclmo
OwS/HHy2zliP/h5rKXzC2r7YNVKtBsG16EtZm42vY8h4YrmFtRNwvZwxwlkt
ygluL5KDfwTchH4YScA12G/FfgY+N6Hn4E+hjyF3wh8Aj1NvIwvgf0UWwv2G
nISrjN2Lc4j/A+y7YtdeNWyIfae62xb1FHv7gmulnlJv1cEvz/cd665fD45F
OSv3J/BZDf8u0pE4JsU2ov3wNeBt4LPEMAl9hfqBs4vJfwn5p/RjfQHxs9YK
937iWDvhQ7BP+VZPfKveCH677eDPwK8g8zN+w3rLk5F29D5kCnpj4rts5Iwi
zrou8WyYCR4PLtedg2eBzwNfDR4BTwePAz+j+8nYphhueuJaKWbF/lrss/Sm
L9VecGHWM0SzZAVycc4zQ7NDPa5e11oX+kfIFu7mNvL5GD2LzerIOV1Jrnmx
3/YG7H+Ev1EzJ+s9M4NnjmaP3vgW9FFs+nLuMfXaxsS+9Qb0FvRm9XaV07Ox
c1buqolqo5yVu3rwYfAh9E8yrvFp9DWp32Ynsh7+svB/rxPPMPyQ5mvOPdrM
efXgG7K+kzr0MmQu+mFs/sbX/uDePYO/b2LPGM0azdA3E9dItdIbWgL3OWsL
ss7xu9Q1VW018xep1xO/VdnIVj2kXtIMOog+oJpoVrBnT+o71d2qZ77W/EVK
M56BmoVzgmeLanIf+qTYs1EzW7O7lDPeyfMb0VuZFtz7l7D2D7gheFZr5mn2
DcWeFYuRC8WlngXzwTvxVQS/OXKNZ8BfrvjRr2LtFDH/gOzA106kFvsT7P8y
5xlyv95z4m/JJvgi9FsTz4IB1j6MPQP/m4Xyie8XkXlZ16QUfV/qb4e+keXg
2xPXRjW8Q7kGz0bFMDVxDIpFPaJeUU7KTd/k07F7Qr3Rj001tk8HzwLltDz4
Desta2ZpdpVSzz0F/kaVoJclzkV3ckHinlHvHBIOzkm5DbB2Em5NbE4zXLO8
ITGnO9JdjQbPOvWoevW54FpphmqW7o/d2/pm69u9MXbsmmFV+NqsO8V2MvgN
9LbYs0szI068Jm4b+8vhDha4dprhmuUliWefemYC+q7Etdc3eDf6YOJvqWoy
Afvdqf9t9E0/jr9/ASYMJOo=
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFlktsV1UQxk//j/uKhbAQiqwUNIpo4jMxKQTRDSQmhoVo3VET2RQCCgV3
FNiooAUiLTFUjaWgPHwtILIprYotC1CJUFReoSGa+IwaXajfz2+Mi5OZO2fO
nHl8M+feuHzV0pW1lNKkVl3roj7milksejBL6apkW7Smi5+h9ZP4d0R7k/f6
xbdpPdvw/pqGdZ5pmL8s/okypadk80yR0h3NlCrZHpT8cpXSHy26N0/p5cry
L8VPaE2T/lbp3681RfLzkh2UnQ3S35Hb9uqwv0K6T2sNib9T9udp/SB+rfbX
hc4npfmPRdeLdmtdSfYDffz6OVm+S/R26S2Rzfd1f49kKyOu7bq7Wz68WFm2
SutCsr8rwgdysTbu3Sn956R/WPamh60vxL+XHNdu0SHdvbfpHL1ZWj4oOi93
HJ+Jn6/crpadE6IflbY/IR+m69ylmve6RI9k9me3zm6WbFI6veLXiW/X/Ue0
t6hmP49qPSx+n+hC0SVae8W3FOZ/rZwTsECuGpIvFb+zME4Wh3495Owf1/cb
meOry7cPFFOH7t7SYn/AzEb5s1z8t5XrTd3Pil6v83dJf5fouPSm1mxnkb4n
xT8kOqNwnH/q7Imo5afkTGu/zraKnqqZ517yMpKct2+0HqTe0rlbds5K7x7R
U7lxCB6JmdjPSVaAK9l/rOZ8U9dNLcb8aGacgIGR6IsFmePlzpmZfUN/EGxJ
3pfcN/TP4cyyX0JOXui3Q9n/mHxV/OOl9ZaJtut7X+Z+JMZ/80o+W1zz/2rP
d5/4GxRDh3zoVUw3565hv+Id0F4nWGsao6PRv8PiXxf/rujbme304H9mfFBr
4gNzxPiK5GPJ+kOZaw+mRkr3/6joTN27TPxbpXt2U/TRmdL8rMI29mY+eyBz
Tolje9M6nKPe1L2tMCb3ZPbnaOkazcqNJ3DVE/i6Gvkm/8TaGXON85xlZnRG
z9L3yK9E/zLTqN1XlesI1pDNDPmA7O1pekZ0hz54QBed7piHzE3m1Oc6P0e0
p3QOwQr1A+/ERbxbm54nxE++d2fGxkjYIW9XJf+97n7D99cy+98hu/2iTcX+
QuV+f77yHe2BGShzhF5YEDz78+Obmp6uOXfkbWPdOAADxNcfMXYFnrl/NOTk
7NHCuTmvexcUnktTctceDOwvXQfq0RdziHnUH7gk93NiHjzScB+AKWYAc3I8
+A3JOfuxZoz+Fn1Nf9NP9DX2iQcf6P9rNc8TbHzfdC2YresKz27enJPJutif
3XB9sbtN8cwW/5JoUXgeHCk9Jy5GXzC/h6MXmKlHw2fiWNX0uzUZ949EfxMf
Pc67yOw/L3pMd6zW3oeVZdjF5gN1n+fsQO53rq/yu8h7wbuxvvDdf+e+/3j4
gB1sMOfJ93DknHxMiRlLfrgX2ZrALrilRtOiR6j5YPQRuRmI/DB3uqIWN9Wd
F/DbyH0P2ByOHPGd5fZrW2HZUMjBPv1wIXqzK+6iVtSMmpCDa5HHnuipTaXj
G4sY5+p7hNzlxnZ74Pw2yY9LfmvpNwDfL2WuD3WqAvtbYnbwhvCGdcTbxcyl
j54s/A/AvwB6m2MOU5uT8dbw5l+Xue6nc8dztnBP0pu8yf25e+u7yjOjLeYG
51rjLHaY4eu5r/C/Wa/ogdJyZjxvPD7ckhv71ID886/BTGGecAd39eX2czxw
3po7Z92yeSj+r/jP+it37e+Nd3Jh9BRznbkMRiYKn8XGnHhfegr7Tj6xNRZv
AnrgEnzeV7h38QfMgAPwkGv/6+gv+mxGzMo20R38B0p3au6eph+Ig/qDC2p5
rvL8YQ79A1zKdNE=
         "]], PolygonBox[CompressedData["
1:eJwllEtIlFEUx+/4zcx3v48aaZEGQpBTkaVBTxAq0GqRq3DRaymBgdgQ0Wjt
nKlFpJUP8BHkpqwoalGLrDZlD9plGThq0CRFu14QtCj6/TmLA/9zz/+ce+49
/3tXteVaj1c45/ZjSexR7Fwu5VzM4mXw1dC5Bvx6bBj/beTcN3irIb8DDxI/
nbAc5b5mrZvYIpw1xGqwdnwfONfhnfuL/wv8EzsE92BkuJP8ydhMuJ21abhL
iAf4t/Az4Nuqz35HqHkHPIFV0usJOE/IfRwb/sraXvabxy8mrKcF8Az8AvgH
/TVQfwTOJ3CetVfEFuHcIP8o+x3Gn8HvS1lOFdyXkXFPYS/AT7Fc0jjiFiO7
myZq/k7bHtqryNp7YuW0xcbhl+Gvo+Ybej1Lj2Nwh/Bb8TvYf8HbGXSWL1gz
OIQzRn4Gfzt+F3YTfw9+N3gn9hHcgiXAw9imwHpUr1vxm4mNat7UasR6iBfY
fxScwcrEq+ivSH9N8D9XWE8BeAs2W2Ez1CzvUfNMwjRwV3frbfb74BTBE3Cm
4D7D6ohv89arzpAO7Yw6a4b8QfDSyGatO9Hd7PZ29kbWsuASdgy8DMuDC9Ro
I3caTp1686YdccTtj00r6nEIbmVoex2A/4H4CvZ7EJjGpLUs8e/EOrFqxb1h
3eFy1Q/tbehN6G3cZ60lsDvUXc7Fpg1prgSe96YlzWgO/Jw9TiZNc9JejTdt
DFBvVlrDasF58i+AL2HZlGle2pdmpB3tuSGyHOWq5lRkM9PsdKZq/D5vd6WZ
/6O/Hd5qr4RzHm4qNC1I89L+CLYxZW+8ntg1aSBlPVwE95JfG5gGNnubiWYj
zewCrw1Ny+ewK6GZsGbUo/cWmtZ0x7pr/Sn6W7TnOH4/NdYHpmFpWRqSlrQ2
AL4emfb15vX2e8nvStid6e4eRjZb/TmT+juo+SdhGpaW9QfpL9KZdLZSaG9F
Z9LZ/gPElKOf
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1817, 2474, 2473}], LineBox[CompressedData["
1:eJwV0TlM02EYB+CvUaEQWyZpgxOpGgm4eCUOkIhhNy6oo6uJbOhquyJaWtKq
CSyFRYHBRdTF4LmBtrGtaFJMGGDWwcTj+YYnv/f69xy8MXXlViKEMM9mdwg7
vSEckBeTkoOU2aZEn903meR5TwjrHDW7qa95dpb7PDF/yoBdUV+Wa/pVVijp
X5g/4Iu6yQIV/aKsyhH5ye1n8hT41RXCd0bUHdlxN6x+5v0vuH/IvllV5siY
/9Zn5REqvHZfN+tX19Wn3DXi99A3zTfUb6jq38t3vKVt1+Ky+Ve5zQfzjxyP
721+TOZlgTmKjJLgZ3zefkZ9mjP80V/1/GT8Le234m9h3mKatv6e/CvPxv9D
Xnd7SP5wf03diJ8n3pIyvy3v8E99TnbJWdktz8dbWfPcEsu88jovmbAb5xI5
xki7Ldhl3GU5TJoUJ+0f2e/an5CPucuePi+H7P8D2CBUTQ==
         "]], 
        LineBox[{2139, 1938, 2700, 2701, 2699, 2698, 1937, 2108, 2697}], 
        LineBox[{2344, 2345, 1958, 2346}]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1952, 1838, 2763, 2765, 2764}], LineBox[CompressedData["
1:eJwV0MsrpXEcx/Ef5XaO5F7HQtFggwZJ4zRR7KxY2JsiNmxYYIHJ/TL5B+Qy
aeYfUFJK5LJi5ZxS/gO5JbLzehbv3p/v9/N9nud0qn6N9Y1mhBCWcJUTQmFe
CLM8GQthJprjIfy0u5DjPM0juiku0CXtzuQ8nuB+3Tjn637Yncg5PMZdulGO
6drsjuUsHuHvumF+4Va7Vz4y90aZH3JDOJXn+MWc1lfIt5zgFPfzBT/pz/mZ
L/mRP/Apv3Nl9By/mVN8gH92/1GH++wQVviO39AoV2EJi2hxX+u31OEb9s01
nHbboK/HJnrs53zjN2axYU7at2MbO+hEB7ox72YBf71rD7v445kmXSYP8hBu
5EN31zxgbuYyt+UoxYxu3a7I/5wwb8rFvBzteIW33JTIrfIaqr1nNbrzTAlK
UYa0mxS+ALX1RGU=
         "]]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1816, 2490, 2004, 2752, 1815, 2754}], LineBox[CompressedData["
1:eJwV0LcvhVEYB+Bj0f4EvWyuumDCNdrc6y5G0aIu2mCSKJuNQUmURESUiLAR
ERJMFiFhxCLRYiLhucOT33nLOcn3FbYNxgZSQggTPKeFcJoZwos8k09yPD2E
o4wQDjnRO2ZWf0rOME1EPWmvRL6oc5177Oczp5cn52WBvOHNvEb9IbfZYV1d
bFbEnrpWvcqr91ZkXC/GWnKXBC3MMEy1nUd3HyhQv1OltyAXyafXrJ8+Ks3u
ZIw49URpYN9uK012luQyET5TQ7jlx/mXcy740rvnzzm4fyWv+dZ7oM+5P3nH
e5e+50deyQG9DZlNDlnkJf8fm5RSlvy/VFDOFvU0UEcjUbaJEaeZBC3s0kEn
7XTTxQHDjDDEGKMc8g8Xu0ib
         "]]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0U9Ik2EcwPEnD9Uc9udmbh52EQpil06Sl7z4L50SeLJy3QvSEks9GujB
4aYJBXlXgs6V0wqaoB3qENUliMg1Vt1cI0af9/Dd9/l9n+d99+5dKntr5OaR
EEIO1aM+joWwHgvhCSaaQ7iNit7AY+0RbmhZlLV/WNMeIqMN4YdWR0HLo0u7
iO9aDTltCee0s/imHWJRW8AZrRVftXfHQ9jHHsY8W5P9KeyaS3iLUb3Bd/U3
/BqvMKzX+Y6+w9soolev8aT+jJ+a09bdXOFL/Nv3n7f+wxvmjHU12nf+ivVf
6wN7FzhhXuGCuc26HUmkoq7dxwzuYQ6zSDt/3b0e8CbP8zX+iPf2T/Fz17/A
S6xGz89FbOG0+YNzfdyPExjXT3KWW/gyBqIZeWd/eZ/LPG2/zJ3R+4yH8Nn8
BZ9Q00rRf+WahL2f5iG9x3yVYzwY/UY9bp3kDm539j9jVlNa
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0T9I1HEcxvHvod6ddza3iNCUOURZSOTu1WBZcC4WdVfUkgl3iy1OTjY0
GREFtjQEkV6CBIEguFTeP91bjuqCuuGSdBB8fYc3z/N5nu8/fr9TxbmbjxMh
hBeY7w+hkQ6hjhoWUiFUMiF8xBq2zRlrntCCeZ6eyIZwWbbFp2mZXtOVaFZ3
SbbJJ+ksHdc9ov26Mdlnvpc+pMO6B/Ec3UXZJ76HFulJXYGmdBdkG3yC3opv
0M3EO3SjsnX+yPun435dnvbpzusq/KFuKqr5erxfd45f5f/rrtCOORf3687y
7/k3zmrzv/EDv/ATK/J/+gO6T9/hg3Pyuu+yZtJb+DrtYET3FEtoWVuzJslX
aV/8/rSB2/akzJPxLuta/B3+LjJ8DhNYRju+3Z4B/ireoitbpH9xhn8Zz7a3
hioGzTcwrHtu72u6I/+Gr3hlvq+/hz3sxvvkO/Ku9X/MX8ynzSX+GcoIaMb/
H++Mb6JDvuMxmLNRmQ==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1813, 2275, 2273, 2379}], LineBox[CompressedData["
1:eJwNzDsvg2EYBuC3BuowOc3ORibUYHeKxOwUAyWhmphqYOBHCBMhiIhF+AEW
IhHEJlKhCwaiShBcw5X7uZ/v+d7q0UT/dCSEsEhPYQj3BSHMRUM4MKdlriiE
G7tO/VZPcKanZFpuyCaaudO73EXkpT7EonlbLskVb62yzLoes29jlit9UA5Q
Y56XC5TTR7Vd3NsTjDPGo/2zfZnMeLPK/MSx+UQeylPZ4TbJeX4IP3Zv7r9l
Vh5yxItvFzy4y5Bijle7K+JurmXaf1/enNQnWNPf3eXI8skH6/Z/MshfmScj
bFBIEVFKKGaTMsoppZIKtqijnloaaWCHVtpooZ0Yu3TRTSe99LDHIEMMMMIw
+0yTYIokMxzwD/cOSfY=
         "]]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0MkqhWEAx+GXhXFlSFgQcQdkp2ywOgtZYSHDiowrZZ4ViqIoxMYNoIxX
ISlxSjKFBVGSeL7F0/+8v/f7OBS1dNd1JYQQxnlJCuGPzdQQNuhMC6GDZ+2X
dW2NRq2BR+2HVW2FWq2Ge+2bZW2Jcq2MO23ReYF52pNDKNZv9TnnWWZo1jP0
uD7tPMUkDXqyfqWPOY8yQr3+ay/1YTvEIDH9w57rZykhnHJCtf5l+90d2yMO
qdI/bZ9+YPfZo1LPSQ/h3eced5u+w1b0dzr/2QR3gULPtbovsDF3mQwzxBOP
PNDumTYmPFcT/d+40LvsnZ+Xqnf7nGYr9FvbG230+xngWtu2O5RGZ++V2Bub
467R+03EtUTi2g3Z5PmuWbbQ5pLPq/fe2NX/AUzeTAg=
         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0EsrxFEYwOFXuQyKYWOjzHwELI2IGSs2YzEzGwo1Ncplw4bPY1yKMZIS
pZSF7+C6RVi65ZnFr+f/nvOvczrphdX8SlNElHXTFtHdHrHNSkfEVmPujMhY
u/ZdsrbJAjdY5BWnuM4s15jjJYe5zEFWOMRzprnEAS4yxTMmOc8uzjXO5ilb
WWIzi2xhnT/uNcsv5vnNGj85w3dO84OHfGOOL8zylQd85jgfOcYn7vKBo7xj
hvesNt4hETHCPe6rqILKmvTPrb2Jxln6ddcs/5iwfsGa+VhHOlFdPfaq7OUO
+7x7SklzP/8BpRU10Q==
         "]]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048089290210533`*^9, 3.704808939437606*^9}, {
  3.7048089815930223`*^9, 3.70480899473503*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704808430661017*^9, 3.704808440650764*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJytfAlUzV/0771Nt1JJRV2VkkhEAylFZ0eDNGoeqMyZIkNK5swJGUKIjBFJ
kiQpQtJwK83JvZUQZfYz974/t3vuO+f3f2u9t9a7y1qtz2+fYZ/93XufffbZ
5zd41lLPuRIsFitMmsX69y/1g/36Tsy/TETiexiTzfWo9npUez1oyl7C/HtC
0asw/ktuqsW4UfgfMP7T8+/vOcYJf/u3YkzyY0LxY0LxY0LxY0LxY0LxY0Lx
Y0LxY0LxY0LxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0PxY0PxY0Px
Y0PxY0PxY0PxY0PxY0PxYwPXPa52csJfYEywt3ESyR/G9zAm+MP0KowJ/hhM
8Mdggj8GE/wxeMi/cH87xqT8HCj5OVDyc6Dk50DJz4GSnwMlPwdKfg6U/BxI
/hhMys+Jkp8TJT8nSn5OlPycKPk5UfJzouTnRMnPiZKfEyU/V0p+rpT8XCn5
uVLyc6Xk50rJz5WSnyslP1dKfq7gF3ykb6tBB8YEu+BB8ovxPYwJfjG9CmOC
XwYT/DKY4JfBBL8MJvhlMClPT0qenpQ8PSl5elLy9KTk6UnJ05OSpyclT09K
np4kfwVeJH8Y38OY4A/TqzAm+GMwwR+DCf4YTPDHYII/BhP8bfSh7MWHshcf
yl58KHvxoezFh7IXH8pefCh78aHsxQeOLc5dX6fTgTHBL/hR+uhH6aMfpY9+
lD76UfroR+mjH6WPfpQ++lH66Efyxwqg9DGA0scASh8DKH0MoPQxgNLHAEof
Ayh9DKD0UTT+6V48oHf+2xgLh3+IsfAvD+O/3fc/xXjK3wEbMF78d8BnFF3Q
iw3B+GRJVd67NoxJfuh4SzS/6EfzS8djNP8sSr4DKPkOoOQ7gJLvAEq+9PoM
8foyVK2vqVqzqfXqkevT9SfXw2ByPKr9f76vIfV9DeHGX3ZberF273gCjIXj
7e/FSr3ySMNYuNxsjIV/CzAWdi/CWLi+xxgL9asZzydsz/+f8cahvfO1YkzI
4z/j0fLXptY7gFofC88XI9c1NOswi6Tv84fwv8stw/z/pepXUvKpxlgonhqM
/7LTU4ex8Hs0YkzyE0Cuj5mftB9DCutR9mRIYT1SXzaOofTHhNQ/hk7qoyh+
b8N0AjN0cn3asNZRK/dPYztuT8pDm2o/gJKHNmVPhuT3Zb4/0Z7BxPfdaETq
M4N5E2UXW0I7xkL96OW/wJSyZ0OSX2Z8cv8ZQ87H9Cf3ozHk/Ayd9E9KlP9R
ovyNEuVvlCj+lEj+8XmJh/knMMMPia2o721F0guApDOYoIMdSWcw2d+R6u9I
9Xem+jtT/d2o/m4kXXcaSWcwQed7knS+J0k/5U3SGUzQQ31JOoPJ+f2p+f0p
/6tE7TdK1P5Cf09tyj7o/USbsg96f9Sm7Fkb9v1tL7IHbu94zykswFioT2Is
5P9Y73icXnoTpgvXy8e4tO5L5MWEVpRwYPKHoCguZY9cyh65pDzxfvGUkk8V
nl/49ynGpH9TorA2uV8w9kf4K4zrKP4aMBb2b6Tovf35Jnj9U/ddkIqeyqLs
lbK//9inBfX9LCi6DUW3IenMeZq030lUfweqvwPV34nq70T1d6X6u5J05vxE
2q8H1Z+yPxZlf8z5gbRvL5LOxOskfz4knYmXyfn9SDqzf5LzB1D2pQdGeya7
rZkpir9Hk/oJ5r36WI+/P2lPKr3jP8N0ob6I7YHcL7hU/MTqbX8e6zMZT4ni
kSxK329R9lCA2wvjkzuYTsZfonj2PqYLp3uA8ddt7Hezfz3G7YX78yNMJ/df
LhWfifzBZtyejGdE/JRifPMvA+UUnUettwZjIr5i9mMy3tKmsB7lT7TJ8UCX
jD8w/7WYLuyXgecXxnuF1PpKMBbKvxJjMl6youIlC3L/ZvRtq17biB3zX+D2
ZHxiScUPHCp+4FDxA4fyRxwyXmXiH3K/4lD7FYfarzjUeZz23xxK3tT3YjAZ
r3Ep++ZS8SmX9OcMJuyX+T6kPdH2Q9sHbQ8i/XpMfb+y/1le2F5qqPGfYn7I
+M+K8icTevWt114K1El9w/6jllqvuD0hX2Y+Yn9j9Ic8H9HxpyU5Hx0f4PPS
Mzyf3t/5WjAm4gccfzzHdDJeEPm3xF5+JLF/TJV7GNTwkoXjj30J//7YZDyB
x+dT44uxkN5rH6fMSP/L0En/KvKnZzE/wv4XMSb9rchfXsd04fe4QfW/hdsL
v+9NTCf9sWj+PEwX+r98jEn/LJLfPUwX/uciip8HuL2QnweYTvpvkbwfUest
xpj036L7qVJMF9pDGdW+nMI86nvzKP5F+cdBvTgDzyeU1xVqvkJKfgXU+h9j
3Px3wkqMyXylaa++92ImfiPzHaL7oF66rjFpb4w9Ef6UwYR/YOyPzO+Zk/G0
7jhqPCtqPCtqvAlke+b8RbRnMNH+lC0V3wKVvwVyvUx70p/YUflNO3J8XXuK
H0eKH0eKnynU+M7U+M7U+C7U+G7U+G7U+O5ke+b8R7RnMNF+3zSyPZ/K3zOY
aO/hRbZnzodEewYT7ZV9yPbMeZFoz2CiPc+X4t+f4t+f4t+fikdVSIzzkfWU
f3yG2xMYny/F/l6oH2J/Tt4HqFPnPxWMtX6cHX7UQHRea8btyfyIOhkvYn8e
R/mP/RSuxfOR+5co3yiiy5PxHV6vOP8mXG8Nbk+e/1RIzLQXyqMOtyflLcrP
1GM6eV5UITEerwHTCUyff3F+U2QPQ0iM832i9XCp9WqT62X8rXD8Xn8QOpaM
Lxl/SOgb4y9JbElhRMUXiKSHTibjOcafkPchdqQ+MO0JzPgbYjy+Azke429I
/XQk+zPtCcz4I5K/qRR/zhR/zhR/Uyn+XCj+XCn+3Cj+3Cj+XCn+3MnxMjzI
8Rh/RoynO43sz7Qn8D7K/y3zJMfjU/eRDCb6L6Mw4w+J8Uy8yfEYf0iMx2Ci
vwmFGX9JjPfehxyP8ZfEeKG+ZP/3PiTmUf41w4+Snz8lP39Kfn6U/PzJeJfx
VyzhwrB/Ivwhvt9pwu2F8YbYH5L2LvK/DZR/FWPSf4jiYfH4Qn4bKSzyDybU
edmIOo8ZkutlUfay0YmiU/oKlL6xKH0p8KLGo74XUPLG94v/h/0Ln5dyqf3h
IcbC+K8CY6H8RP5UtD+I/TmxX2Is8reDevXpGh5PGJ8WUuOXYCxcRxXGwvWJ
9ydC/v/mH4ebafDfi+uvCP+Mz7fV+PsL/4rWo0Kd94xIjO9zxP6dzL9S9zf4
vkSUjxhNYpYJ5d+A8m9A+TPbXn55eH2EfTL7Gxn/DqX014KSlyVFt6HoiMqv
2FD5X0Ttr5PI/nj/EY3vQNLxfiLq70T1n0r1d6X6u5J0XO9STflvUX9Pko79
sUg/vUg69q8i/nxI+nsqPsX1DaL5/ah8mAppj6BG5f9UyHiPoZP6NZQ6X+nB
qwuBJ2d3i/Wb5FeFyn+okPZToEzln1Qof6hMxjM4/yHODxD6QWPmvEbYCxMf
EZgZj5TPUOr+Uo887zH9iXwRY1/keo2ARfxE+brllH/bjDFhP9h/11PyFMWn
2iQ/OJ8pmp9LYro+A+ejRPqiSflrPTLfgvNR4vt7Mh82lOSHiWeJ78PIi/ge
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
77SxQMexKfZWLR8tfhm161wrC/4XAmK6Cw==
   "], {{{}, {}, 
     {RGBColor[1., 0.9499999999999916, 0.7499999999999843], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk1tLVVEUhfdxz90VoXwJulEPHUGxvJSl3TPrlJZlee2lFOyt8EERu1H/
oKCjaUEUQVRWiohm0E+x/kFlXlIzv+FcD4Mx5lxzrbXXnGPvbrtdfysniqIm
EIPLFkXDqShaJNgH+sANCi6QHyKfhVvAGLoJvgYm0GvgTdQ+Ag+I1yder32v
QQH5GnIH0S/IH4Cfgq/c+S32y++BTtZayY/DBj8ktyv2O0qJB+Bi+Dh4hT4K
72U9C67znQWJn7GW/EZyN8EW4iLiTvQUyE88l4Z/ElehG1jvCN+h/VfCO/Se
c6y9RZ+FT4M36FPwNBhky5dQqz0ZcIJ8hvg3eg/6Mfo7fAS8RFfCjWAUfRX+
R10jesC8F+pJGr0TfQeMsBYlPp+R2OtUPwgvhfV69DLQLIfJrTN/o96amM8w
Rs+o/9RMUnMX5IW706EnP4hj817mkOsi3go+hverD7PwLLkP6Fr05nCWztGn
DoX5z5P7hK6jphD9BLRwbp95n2oT74V68sd8rprvfvP+qs9nzL0iz1SYz1tz
Pwn3cMZ28Jl4G9wd7vsFV8OHqelF74jd05fMaxeIL5q/aQ79N3zXnPmb3sm3
YJr8eThjPifN6z88Bfp55wTr/eEtepO8tiH4TZ6QN46Rvx/7vyGPrO4hX0L+
uXkuF642v0t36v73KZ9Tbqh5Zv6/6b9L0bca85oZ6hfR7fASXGbuZ/k6P3hP
HtT/IF/Pm/tDPilHHzLvlXomb8ljVebelYeb0SsQGnjF
         "]], 
        PolygonBox[CompressedData["
1:eJwtkkcvRlEQhs91x4IdG2sLJUKi10+Lkk/bSAiWJGKl7fEDsBAl2qdGIspO
RMJ/wW9QovO8GYsn55055557Zt7JHZ3qn0wLIVSCQWt6CLMxGqrQByQL0GtQ
R1xHnIpC6IBadETuGs12COg5RBYMkpuBXs5csPbBM/l34mLWVajl/I752QXY
RTeSW2SvEI6IP6AEvQ4N7LXANDoDHuDN/D+645u4mlj16I016AFoQ1/pDHoP
ljiXD/voQ1iOvUbV+gqnnE1xxwu6wbzWA0igf83v0j9+0E2wgz4i14zuhrPI
a37lzj7eW8q6CfXoB/ZX2Nvkm3t0Jvnx2GvIgVbzu5LQYt4j9SoPUsTP5m/R
P5/QXzDGXhEcm3skr9Qz9S6pN0VeUxe6ErYj70mFeQ/VS3ku7yvgjeJmdIf5
DGgWJiCBzid3F7yGAnQnnET+jw70fezfyiN5pZpVe/G/9/JQXurNn8Rb5t4n
1SN0Nut87Dl5WmbeK725HD1k3hvN3LC5h/JSM6PZeWE9j9wDeaGeqXfyXN5r
pjRb8lzeP8bed/W/iO83yF1GXuO6+cxqdm9gRLNkPuuquR19G/us6J89xH+B
umKi
         "]], PolygonBox[CompressedData["
1:eJwtkL1OAlEQhQdml5CQYGNiIiBYm0iiRBsq/koEOkMjVlTQgCgWwitYyFuA
WuGTgT8JfONs8e2cPXPuZO49vR92BnEROYQQLvhsMMYqsoyJNAORON4d3pt6
7z+Df4t+xdtRS3gKPfQCb0u95D9B7os5BbwZNELHdFE9H5L5RX+Qy1GfoEbm
CtLoR3in1yK3ifY6po6gQqYKE/SZ+k7f1J/oTFa9Z5k6vKDP1e+jzAtgTS6v
3rOMzbTZGVjR21LLeH1qCo7wkpy7Cbz/oL6n7WvvYO8xje7TJtOBT/Qz3gFc
h47pufr7dAO/s939RD3/R90DdgcsOQ==
         "]]}]}, 
     {RGBColor[1., 0.9499999999999917, 0.7499999999999847], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
MNqNvutx52MPRzl2Ovi3YII9KXQ/Dfkp7HZSilzFGw21mxqAvXZq/Fe+K3Fn
Yj/sq38VbxU/8XtFxzLeF4i5ub77cAd6u4zaw1sUbw/1/s3Xqrjr8obN+x25
7PspcmW3MjBKjdqpZcQ8+65xzpptLA2mBl/kxhj9rduZVbyXkYdHpvDVpca2
EHfz+1wjltiHP7BPfujczH2f3EuuJ2aJ3XeNmXiPeTAFJtir9rky7ihNnGEZ
88nxvIODQa9K8cbKfWlainxB3rguxTs1d+afp4jv4Y5x7kLcQ6akiAXeUve/
q1ZxV5+p8T4pzutffkfs6bdE/H+rY4R7/GDL3JxCT/SlpoD3yOPcseqMZ/gt
uQXcW3oufO8qZL5TBmZ6uWh/03jFOOrbxpzH+hw+cAwe63EwKWOtHp9sHj1f
thzwT7fKuTFFbb7TWIn8SJ6cl+Le09B2RkW8vaA/47OcN/g+03WhxeP8njNf
6nMHBy10vOMPC8wT69wzsSd3TXhst939Z5wrFhpHtXouscw7Ke8d16RYc6bX
ZS56cndeVsT/VKhX1GD8mrxBvaHu/DpFraIW/JLck8I33i9DXrP3xZslOIO4
oaY95xrKOncU7e/F8NiJ971lXneZ+2Kzg6row693PiTf/h96cTn0
         "]], 
        PolygonBox[CompressedData["
1:eJwtlnuQznUYxd/f+3tem4z+aNqlGV3WKuM2CBHlkrUyNpWoXKK2ZghhqIaU
rlJKLlklurCh6zRljKSZTKlmmsw0uqkm5G532Fjrttb2OXP2j7N7zvf2+16e
5zxvYdm04VOzmUymAgSYx5+eSSZTD38ePhN0QB9Hz4DXpZnMSPR0cAf6NvAk
/E5whr4/wWJ4XxbdRd+L4AZ0A/Pnw0/Q/zj6PdAfvQU9FX4P42vRu9EF6Emg
E7oWPSzxmKHo4+jZ8HdAL3QXUAxfCa6DdwYr4M+BS6VzmUwr+FjQBX6EthK+
NRgcYK1raTsEPwzawi8GRYzdCprBX2X8UfgxsAjelbZ5idfcy/zTqc/+EBhG
f0fwOrwGLIO/BA7Dj4AF8CuZPxleCA7r+7QthdeCr9GT0W3hR7mvSfB/aFuO
Lgft0VeBcvpeQV+tb4HTunvwBvxLxj8Mv5vz1KA3o6eg+6F3o68BlyT+Zlt4
U5CvOaAN/DP+T6BvHOMvoD9HT0SPV5Cw92r0C4nvWHf9H3oWfBXopvsJv4W+
qW//DZrojUE/5k/UHuirYrkJ8OmgHboaPQ3eCvyi2KPtCngN8+bA14NB6Hr2
sZK2Rfyvpm0hbVWJ7+QL2vP4xiP07dP+0YnGgix6G2MOML4/fDN8P7wyHAur
0V8x7oHw21eiy+C/0lYH70bbT+jfUudGD/QO9O+pY1s5sxMd4D74E2C03h4M
Yv089B+M/RnUMr4TeovOij6L7or+Hr1DMYXurBjU3jjPAtq6g3bwPeG31Bvq
LU+Fc6cUPRhexLj5qe+jkrabmPMt/IJyhv63w7wevBW+y9apx+pOWyoGwRrm
LKLtLGPG0H4I3Zu11sgksl5Ta59Bj0bnMzZPY1OvoblbGHMyHIuD0b3hSc6x
NF4xim4Ix9o49Aj4m+Bc4jXrtbdwrGutwnCMKlZz4C8wIOwlQ3RWnT/ntx8l
z9Fdhr1qhM6CLgnH0lBws7wp7CUloIc088cyvwH9LnooegnzgrYKdPdwrMtz
5D0twdPaL2gRviPdVRnjb22cm00de1qjD20tE3/jHOOzYW8aie5IXxP0/ei5
YIzuIvXe5bG3o79L7Q3KoU/QP6TOHXnGp+gfU3u1cmoDelvqXJOnfYzejq7J
2NM3oZ8Nx7Ji/Jmwx8hr5GG7GHsQPTDrGN6PTnP2Zu0xR19f9JTGHFeuZ3P2
QuVASv9l4VyWZ+bDl4OT8HW6H3gL5sxM7SfylQHMn5G4BuxJ/QZ6C8Xc6nCM
KdYq0e0Z+29qLg+Xl8vD5eVa4yLGlub8FvJIeWVhzt4rj2id8x60l7WgKXoD
623P2qM3wm+h/4PEHiQv0hvrre9VfIZjVrG7EdwFv145lthD5aWlYS9QDTuV
OkeVq1pzSLjoaq2mYD18b9iL5FH74GvDsawYWwefHfYGecgs+GNhL9GbPqpv
hb1EHjIH/lTYu+Qxc8MxrljXHnvCD+qMWddE1cZjqWNRNUu1SzVctVw1cGdq
D5OXaU4Vfc3AMtYu1hvA96XmihnFjjxGXiMP6cX99tH5Etdw1XLlrHK3QjUq
XGNVa1XzOoRrhmpHG+0Tvjjs3fL8JWEPkZdsAqPkhWGu3xj6rTEy/DaqUapV
K8K18hvWaA5/P3z3qjlb6T8fzlPlaB385XDt1hl1VsVqQerfF4rZB+GXp84Z
eaa8t7lqXWNN6hs+m2qyarNqimpLc77xEXx4ONf1m+o8/R+G+xSDGxrPrLOr
BqgWDFS8Jq7Jqs3yRHnjCfRr8KVhrt9gRWHPlffqzm+U34O6xB4rr9Ud6C7U
tir8m6WmMRcLwr9J9NtEOVse9kx5p/ZQDP8fZYRP4w==
         "]], 
        PolygonBox[{{986, 773, 877, 876, 1342}, {988, 269, 866, 935, 1353}, {
         1043, 387, 874, 789, 1033}, {1321, 820, 936, 269, 1320}}]}]}, 
     {RGBColor[1., 0.9499999999999919, 0.7499999999999849], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
9JmT
         "]], PolygonBox[CompressedData["
1:eJwllllsVVUYhe85ex8hpWlLS5G2dAScIGLVmBin6IuJU4wmEmPihDhGqoDi
POCAASQKzxpNEA0OILOKgNhCRWhp6czY0kKhFWMc3kS/lfWwctfa/z777POP
t/bhhrvmprlcbgWIoDwDSS73JIsV8FEWb4EfB8Mhl3sEfR32T9FjZWftdng5
2IytlLUe+JWgHf0b9jvg1eB79AGwkPfUo9vgZew/DD8KTrF3PmttnH8QXYSt
H12IvhF9Al4OlqC3gY3s70RflfrMDvgksBhbM7oAPhvsQJejN7N/PGd2sL8G
/IDtC5AHv489n8OnYB9Cz0KfY38lWg4a5vnJ8GngJPo0uEh3Z89YsBpMRTfy
W4Ctkecf5bwa1p5Fn+X5avhk1pZi2wDuhr8LhuAnwWL4O+AEvJdnJrK/KrPv
x/P8Js4+DW5NHRPFRjFQLPqx/4RtBNyGLgXrsc8BuxLHTLFbBI4njpFitRT9
PPp6sAQ+AcTEd6yEfwD+gB9i/3bOfh19BN2NnsDzW9GV8CrQgr2QtXbdHWzA
VoBu0/3BWnQ+uhVeCL6W79EtqX32Ffq76LOUU8qtBeiDvK8DPAdfB0r0btCM
faNiDi8Dv6JXoIvZuxyshF+cOVYl6Jvhu4NjcQH6G+yHwTL0New5Aq9nz9+p
fVAanTPKHd1xnGKpHE6co/OiY6xYN4HHlKtgNOccrZBvo++unFPubYq+q2Kk
WJWgFyi/QTF8LtgPbwEN8CfAHuWzalKxDI61arRMuQNuSl0jqpVl4J7UMfsQ
/kz0WYqJYvNttO/6wRnOqka/L9+CPPihaF8s4h198Kei360YKpaPR3+rYqhY
DkTXZoNqkvPqon2fB6p0tvyR+E66W8zcW1TzkzLXjGpHNaXa6oWPSxzDKez/
UTWZuoeol7RG946nFRP4K6CPvV2KMc+f4/cj9q3kdw54A/uxxDn/ZvQ36lt1
p63se1U5kDinX4vuKeotqpkt8IS1fzjnL3AZ5++NfvcM5Rv8Utb+TJ0zA+yv
RQ+mrlHVageYmfoOuot6nHqdekqWuemq96hn/RsdE8VGPeM87MsV38Q+6cF2
ILh3daEXYpvOnpHUd9Rdz0THogoMsff34Ny6E0zE9jG6Ptg3+bz+M9bG6F1g
FfxncCH8Xmy74L9Ef+tsdLN0cG9RDaoWr0B/Ip+pn4L98IrUNava3R59Vh1r
O+CtwbNAPUO9Y1/w7FANq5b3BPcK1YBqIV/zInGP3oltb3BvUQ2qFjuDZ80A
+i30DZlrPV89S3kV7Iv5YAT7zMyxVMwUu8uDfSJfrFGNRvcG1XCRvj3ad0Xg
aPBM0mzSN27Bdja4d46iZ2BLo7liotg0RvtOPm2KrgnVhmquRr00+GzFeDq6
K7r2NNO6o79J36aZ8Da8nf3TsPWiX1LuB3+reshUzQ7NrMQ9/ZR6J/qS1Dmu
XNfM0eyRT+XbMZlnnXK2LvOZOls19TJ8W3TsVINtnNUFrk49szS7XgTd8E7W
ijPPCM0K9aRBbMPRvtedBoNzVrmrZ16IniGaJaqRfdE1rFrWnXdHn6mz9c07
0e9Fz8o+9PnYmoJniXqkeqVmpman7tiDfhBci62WfQ/B74+e5Vp7IDrnlfua
+f+xZ030rNV/hi+j/0Pov4RqZDX8f0tNK74=
         "]]}]}, 
     {RGBColor[1., 0.949999999999992, 0.749999999999985], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVktolGcU/ef/v5FCC+rOR2sVCkaxolFqNNNlAra2M3mIJfGVOJNlsk2y
SydKsrBrk7RZWNeiMvERjZL4IDMjiUpVaBMKbgragoiUNIj0HM4RXdy593vc
53fu/WdTZ09zdxxF0SNQAtqHnw7Qd6D1qSj6HLSA/degbZAbwNNp7f+FO7Og
l9i7EKJoErQd+/9g7xDoPxiuxdnlIN2/fbcG8k7wS9jfCvkF9l9FkuvBx6B3
JiX/VZ+VcHcuURxXIUc4qwMVIWZx/wvQDqz/jRRDFnwp0l4beB4605AL4G+w
3g25G7wZertAX2H9NhLvBW/F3tegfVivSCvm5/D/JlatDkJugVwXKw7eY0yn
wTLeexcj7TLOPR/4qXG8S/bJGBjXraBcboLX+jwP+jLWetmxkzP+2lhr6j6D
XE0p1o/Sypd5P0xUlxvhfY3aXCfWk7WiPdrPGwut0NkPKibKdRJn56G/Cj7u
YV1JSd4cCQfEw9q0cmEsva49c6E/1o5xXYSN0VhvS1zdxXoL1nfA16S1H8hB
i9hfB349Jf+8T1wsWr8JfLvzz8WywxxWwdaP4KuD9Bg/czoBuRO0AXIT6Afs
fwPKp3TOfP+EjU9i5UOivOCa0xfr9DN4KZbeT1gfg9737hnKg77Dc/qsBulW
gt6ryTH3xYqnBvf7QYeh2xeprg9c2y7bYGz0OWK7D4Mw8yDoPO87tFewTfIu
7z8NwuoT8CHbZB2IT+4Tk8TLx7HOBx0Pc2Jfsm/Zm2cdY4/vD9kO8c9+IeY7
4GMK/HiQDdqiDnPiuzCvF7Y7ETQXOB+uBdWPNR00HvmmS9an7373Eu+cdh9l
3UucO8T0FOwsYy+HdSaSzwH7PZDIDuP/JdY7DXkW9Bm37LWcscSebXbf8v6E
dfKuAfUKtsv1YlAdFoLeYsD16XVORc+HFs+I8Vh2h1OqAWddg7HaZbz2x8JK
GXK7+zUXqa+y7mXiYtRYJaZzxnjJMc97ro5aZg3qXE9iZ8RzjbOVM2EeZyf5
don6b9TYoy5ryvnN2b4+KMeVQXFWXOeXvkPM7IGNc4lq1ODYs+7lMdv8NK3e
+4zflrRm2UbP3aq/FyPO75H7ouD65FyzRlO9Y3xlmWeMq2w7bX4zviHtTbr/
idV6Y77DvUx5bdD7zCSy12ib/CbRx33sH02kz3pmwI97JhwLquNRYzvj/Z2O
kfbOGZMH/H1rcH1O+Q2m/C0pGvNl9zfrP+eZMg++13EwBuZxxPHnjAlih99p
vk05kY9216PReOFd4uJX2/k9CK9/BPVHt3E/E9R7t4PecdwY7vRcIwZ+C+qf
x+BXEvVBKdGMGfbsIPbHjYFlvwl9DPtsyN+TbvdQj+/w/WaDerUM/q3zY54T
ns/vepuc/TThXpt3HIxnXVDdaY823toPa03cVYyZgutEH/xfk01U/3H/V6HN
Jd/Jez4V3fPttl1wT/D9qMs69btWZdetxjq9nkfsuzF/7yqeBbw7nWj+8js/
4Lpvdo+UnCO/Xdf93fwfiRcrxw==
         "]], PolygonBox[CompressedData["
1:eJwtk0tLlVEYhff5vv05UVFn6iktaKBiDoyswKYOVEgtCANNg2ZdfkMXBf9B
f8FJUKCRV7yU2jEvZIWaCM0rE4mwiJ7FcrAOa737ffd5z1r7nL3zsOdBEkK4
AiJY56OZwl/4e/gMOIe+Br7Bm8CzXAgjoAq+C1p1AXob3pKGcAt0gg5wl9oc
ZzW0vEIvoY/hTcwU4Cm1m6CZWh0oo/aI/segHD6f+ruK6R/VXeA3ffXoN/B3
0Xd1gx/wj+AS/B89H+CL0b1d4Du8D0xyXwl6gbtX0OcT76TdLlLrPdm9HUxR
+xXswSx8DDQwf0itwPk97YAugPvwATANH+LsdrQn8uYq83vwT+Ay/Dr4Gb2j
dlXtM/x0FsI+vJaZDP4levYGOIzORNlcQG/CF0BdYk/kzbT8yHnnTXY4QPck
9mQL/kL9nB9wvsz5a3Qj+gi9hq7K/N15UJl5R+2qjHeiPZSX8mw5+k3obWiH
+egMlIXe0Bq8P9oLeS7v/ygrdDff1wa6UtfEW4MzUTby4FTmzJW93tCc8kq9
uzJ4Ge25vP8qz+h/y3l54kyUzUa0V/JAXrTTM5w6o0H0auos5cE4ej21F/Jw
Qr8NfZx4N73Riui3uUGtlLtiZq/20Hl4dfRb1xvOw58y/wRM5OyBZjSrHZ9z
Xp15Vv8p/bfOZP4tyqgI/h+RjHk7
         "]]}]}}, {{}, {}, {}, {}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzskuhEEUgNErusVGsNOa4AU8iKW9NoSd4blsBGljDGltnsUU01pi5gmc
uzj5/rpVqfr7xmYGpxsiosJfIeKZFx544pFf7rjnmltu+OGSK8644Jxvjjnh
gCMO+WKXPWrU2eGTLbbZyPsaIzZzrut5r67m3bqmH7qsp1rNd3RJ33Ux39P5
fFMX9E2bihG99DBlNsm++Zy2mLVrG62U6aRqf4UJ3+M0O1ezns3/1pL251nz
MgU6KPFqv6jddFG3HnK2wjAjjDJg7x/V8zwb
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0msv1mEAx/FLhzWHVQ7Fg6IbbZIlb0AP6Wm9A7aIjQ5EhdJRCB1eQgej
1sYqW615UGxNW9MBHWwpIq1eQYfP9eCzr+t3/dnt3j9R1XigISmEMEL2+hC6
1oVwmUu8XxvCrG61X9QLnOedfVq32M9pJ2d5a5/SLPsZ7aCdN/YJzbS36WlO
MW0f1wz7SW2lhdf2J5puP6HNNPHK/lg324/rMY7y0j6qm+xHtJEGJu0PdKO9
Xus4zAv7fU2z12oNh3huv6cp9lQeOVc7VzHMEKO2h+S6X9afthVNOOezgb/O
BfpPb7m/zZ34Ocghmz8E7jLIuGfT9CDb2B6/x/gdU+ZvLbjfo6XsJcm+W9do
if5yf8XP3fSQyne+2pf0my7rjK7qkq7oov7Qp7oQn+dL3OPv8Mw+oNfo5Spj
thTNYwe55JPgBtcpYM5z8zqrfdofPzOfnYt1Xkv0ZnzH+O1cGt+H+K6QTCEf
7OX+x4+6TyupYBdF7KSQT+73639yp1um
         "]]},
       "0.25`"],
      Annotation[#, 0.25, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0UkyA2EYgOE/khgWDmEhqlSpIpGYgiDmGMts5wAsncTsEuywcBRxA7OY
Pf/iqffrr5PuTqdlZ295NxFC2Ce2KR3CXCqEQw64TYaQ0TZaqXLHlX2XZumk
mxwP9qu6xgp//HJhX9Ae8vTRy6P9gBbp54Vnru2HdJhBRijxZL+hm6yT8LyB
S/sxx2VGmWA8Xst+SqeZ5I1Xbuxn46wzca+VeH/d0lT8vusmtU6zzJvfnR81
13TBccG8qJ/x/uYPfY/vw7ykX47L5m9djr/fvK318RnNaU1qjo74bn2uZK7q
iOYp0hj/A81w71y7NtjV+HF8qmec08wJxxxR8dl/b+Q3Og==
         "]], 
        LineBox[{1355, 1187, 1276, 1275, 1339, 1274, 1337, 1184, 1185, 1186, 
         1341, 1183, 1182, 1181, 1336, 1273, 1338, 1357}]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], {}, {}, {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {2, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.70480844125287*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WF", "Section",
 CellChangeTimes->{{3.704857518687388*^9, 3.70485752120373*^9}}],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.7048575243173943`*^9, 3.704857526773238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bWFI", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]WFI", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"bWF", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]WFD", "-", "\[Beta]WFI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"cWF", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]WFD", "-", "\[Gamma]WFI"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
       RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", "mychange"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"combined", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", " ", "bWF"}], " ", "-", " ", 
    RowBox[{"c", " ", "cWF"}]}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704808364528508*^9, 3.704808374976536*^9}, {
  3.704856760449975*^9, 3.704856764168376*^9}, {3.704857557093533*^9, 
  3.704857588225906*^9}, {3.7048692426413603`*^9, 3.704869253548462*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
     
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "-", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "+", 
   RowBox[{"d", " ", 
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704857590355349*^9, 3.7048692551055727`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
     
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "-", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "+", 
   RowBox[{"d", " ", 
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704857590355349*^9, 3.704869256038275*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", "n"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "+", 
    RowBox[{"d", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704857590355349*^9, 3.704869257282337*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"d", " ", "n"}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", "\[Mu]"}], 
     "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "-", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    "+", 
   RowBox[{"d", " ", 
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.7048083757556267`*^9, 3.704856765743043*^9, 
  3.704857590355349*^9, 3.704869258132419*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dbi", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"bWFI", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"db", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"bWF", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"dc", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"cWF", ",", "m"}], "]"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.704809050987014*^9, 3.704809064544387*^9}, {
  3.7048567698480177`*^9, 3.7048567731708527`*^9}, {3.7048576064563303`*^9, 
  3.7048576193327208`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.7048567744458838`*^9, 3.7048576198856897`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "3"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.7048567744458838`*^9, 3.704857620636587*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704809059787498*^9, 3.704809065791934*^9}, 
   3.7048567744458838`*^9, 3.704857621276682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"dbi", "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"dbi", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.7048567924042263`*^9, 3.704856812363995*^9}, {
  3.704857168717469*^9, 3.70485716918032*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704856797675395*^9, 3.704856813040648*^9}, 
   3.704857169884136*^9, 3.704857634581438*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.704856797675395*^9, 3.704856813040648*^9}, 
   3.704857169884136*^9, 3.704857634634344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mc", " ", "=", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], "d"]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.704857836653247*^9, 3.704857838437944*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "40"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704857146717655*^9, 3.70485718664694*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "1.139520521443789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0.7706499980278109`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.704857155221304*^9, 3.704857187187117*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dbi", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "40"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.01"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704857215155217*^9, 3.7048572277399693`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
D9OnLZhw57vtos1NHMKEyp96rZnwL7H4cME=
       "]]},
     Annotation[#, "Charting`Private`Tag$165705#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-2.851782435741527, 0.06359600441369097}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7048572281780243`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mc", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
       
       RowBox[{"(", 
        RowBox[{"n", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", "\[Mu]"}], "-", 
         RowBox[{"n", " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]]}], 
    RowBox[{"d", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.704857369371187*^9, 3.7048573731688223`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"mc", ",", "d"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7048573745232677`*^9, 3.704857398580618*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.704857376797214*^9, 3.7048574063440113`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{"db", "\[Equal]", "0"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"ss", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"db", "\[Equal]", "0"}], ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.7048083886378717`*^9, 3.7048084081048517`*^9}, {
  3.704808892208358*^9, 3.704808899238381*^9}, {3.704809068373622*^9, 
  3.704809087444141*^9}, {3.704809131008202*^9, 3.7048091312369833`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], " ", 
          SuperscriptBox["m", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
          "\[Mu]"}]}], ")"}]}], 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "d"}], " ", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "\[Mu]"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], ")"}], 
             " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", 
          "\[Mu]"}]]}]]}], ",", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}],
          ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]]}], ",", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}]]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "d"]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048083928817387`*^9, 3.704808408425716*^9}, 
   3.704808899708881*^9, 3.704809088065707*^9, 3.7048091323073378`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]}], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Mu]", "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
      
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
        "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]}], " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Mu]", "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
                    "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
      
      RowBox[{"d", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7048083928817387`*^9, 3.704808408425716*^9}, 
   3.704808899708881*^9, 3.704809088065707*^9, 3.704809134170844*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ss", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "30"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704809133236075*^9, 3.704809138716748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "+", 
     SqrtBox[
      RowBox[{"4", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}]}]],
      "+", 
     RowBox[{"d", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "d"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "d", "-", 
     SqrtBox[
      RowBox[{"4", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}]}]],
      "+", 
     RowBox[{"d", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "d"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704808920217132*^9, 3.704808938664143*^9}, {
  3.704808978761506*^9, 3.70480899383943*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NvhXC27JmrU+f0sbOPl9uvfXCdrQqHftHY+kVmD26t7P/FVa8J/QM9P2X2Xr
M9L7pRX0dvzNjb+iBfO++oZd3noduG8PN4/3Ekf8VvCyJPDIbHH4oiZwxZiN
7O+n6R8p+tS0Ow/sSApTTpopBMv/qGaJLs8DfJlqwRc7RVC8zcCMR+yViS7K
f/mn8cYUZV4FlO/jxqt+ZVyxMnQ7HiLW+KcJXDmnsqO0lZv/1QKC53dk3t+m
ivL9fG+dsX1R7w2d8gp3Zq5n6zXmjwLrTEMegVrB+pWvDsvCPZeW/ErJawC2
nfGy103l4QaPaV8WnGwASzR99M2MlaC5p3S3uVcT6F2fwiuoqgxPX4wpcStt
AoM33H2npCrDta1R+8CoJuBlPXlZTL8SvJNreMNL7zE4Jaz5eYsJ975vKfBO
TBte368FncADgXn774JD52MvbWvVgp2bVsrx/Zt/cOVm+piDWlDsXs4Ws4hi
4BU4Svu6FPt7Y4fVrncmXdBG8lb9qoG6xDwduOKJxu6pCjXgguqeK/dldeDU
jCAeoRfVoOLmjtbdIjrwSERfZkb/Y7AiXHy0eSUHjrUfaHQofQwabuh6Gl/U
gPXHvWfeFWDvU9D8eQ+A0xebedapwGet++e7vb4HFEPG18VtZus93vog0DpG
SBU6zOD7JDKjD9wrVgtbNoOt9yiQOLD05HRlmB9u/T774x2wcZbv/LMzlJH8
TN2iV7s/RRWK/3IqTHGuAUIZV69lXlGF/N4TlSLf1ACBlz5JH5tVoe41+815
j18BOZlHT62z3eCaNyuvpH94BV6PPZH9caw7Ot+dMPtP9Jcqth6k1N4Vu0zC
p0KN1mPTQ+ew9SG3nzGwW9xRBkJy7vts1taGTrlmJZNW1oEfuuBe1xYdWLCB
t8VHtw5cMA+zcVypA++Wrf24ufK/9SEdOnd8W/rBEpZWvx7ac/k+eF96/sQd
fUto7fbCao5QPRgWWvPAtdgSjoWnjMrnNYJvDy+mGYVZwUkXVaTlixtA/2DQ
wi0qbP3I+zNFk3ZdmQwPz3TaFGzbDEyqbwhICE5G913K3+1UO6riAc2s9oQr
DbP3SxQrS+9e3dYELs2wa9fJ0YPZIfPNNik0g3kJSSk9f/TgVsmZNmW7+oHY
932iYgY+cNPJTbILYvvBjnk/3+6V9oF+m4fet4waAEL53t9OHPSFUXdtWsqH
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
NL/Qxn8BX5Btug==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{2229, 915, 2248}, {2662, 1598, 2664}, {2248, 915, 
         1731}, {2246, 915, 2229}}], 
        PolygonBox[{{2245, 1, 915, 2246}, {1731, 915, 1598, 2662}}]}]}, 
     {RGBColor[0.3570378680835159, 0.42918263734564455`, 0.609185406621831], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1737, 399, 2092}, {1959, 408, 1742}, {2088, 1614, 
         1735}, {1733, 916, 2232}, {1819, 511, 1994}, {2092, 399, 1957}, {
         1991, 511, 1819}, {1757, 1614, 1952}, {2134, 408, 1744}, {1742, 408, 
         2134}, {1952, 1614, 2088}, {2246, 923, 2245}}], 
        PolygonBox[{{2233, 917, 1614, 1757}, {2230, 2229, 2248, 2249}, {2249, 
         2248, 1731, 1732}, {1732, 1731, 2662, 2663}, {1735, 1614, 1147, 
         2470}, {1994, 511, 399, 1737}, {2243, 922, 408, 1959}, {2470, 1147, 
         511, 1991}, {2420, 1086, 917, 2233}, {2232, 916, 1086, 2420}, {1957, 
         399, 922, 2243}}], 
        PolygonBox[{{1745, 923, 2246, 2229, 2230}, {2663, 2662, 2664, 916, 
         1733}}]}]}, 
     {RGBColor[0.516732100844538, 0.4853052111594223, 0.5153076467878754], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1950, 417, 1756}, {1997, 723, 2167}, {2132, 1565, 
         2130}, {1733, 398, 2663}, {2138, 1609, 2292}, {1962, 696, 1658}, {
         2139, 1609, 2150}, {2420, 417, 2232}, {2148, 212, 1664}, {2292, 1609,
          2139}, {2077, 398, 1949}, {2663, 398, 1732}, {1757, 417, 2233}, {
         2233, 417, 2420}, {2167, 723, 1999}, {1756, 417, 1955}, {2154, 850, 
         2153}, {2236, 918, 2234}, {1664, 212, 2041}, {1747, 924, 2247}, {
         1734, 398, 2077}}], PolygonBox[CompressedData["
1:eJwtkTtOw0AURR8B2cManBR0RIKF0LoAiTJCFBShhz1QUgGyCwxiAWChNAiI
4/CJIGlRtkBLx7l6Uxzp/ebN3Dsbg+N82DGzLqzBbWp2A5+J2QxOIYMd2A9m
OfSIz1fNRsQVs9fwTPwCDVzQO1sxGzP3DV9wT/0BusxmMIU3+IMF9+acOdKO
xM9qR0v+GPyuJ/glvky9X8IV8QnzNQIK+u/0l+Q/Ha/d0Z+QN1Ctowsm1Jr4
Br1FO7V7zvwHeZ98M/gZnZ1CC1vUtoN7Im92iffgMLg30nAQPZAX8lBellCk
vrMfd2iXPJN3dXAt0vSauCfypo13S5O0ZfEvpEFapEFaZqm/XZql/R/CnUk6

         "]], 
        PolygonBox[{{2231, 2230, 2249, 924, 1747}, {2135, 2134, 1744, 1565, 
         2132}, {1955, 417, 1757, 1952, 1953}}]}]}, 
     {RGBColor[0.6764263336055603, 0.5414277849732001, 0.4214298869539199], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkU8vQ1EQxYcn791XC4uS2NrZkfoAEgkqkUiESCQESwtWGv8+B7FAVKJq
TbqzUVraRFViyYcQaYuK32Tu4mXOPXPumTP3Daxtzm50isgIX8BX6xIZ5Vvi
sB+KVOBuI5GJWKSOsAqu8WU7RN7ppxN255d+wYkcwdfhT9Bcoz+mzsFP4bdA
PfX8Fpor7/MB/qZXQtOk/sTmqd6DaAL4BHwb3OBud2x39O6z5oGbCWx21Vnm
Xfrj4BbcmHqiS6Iboq5ynka/4mwH9VkG/+H7prOor6H56U7boeWfBze4X8X/
K7KsmnmdnJecC/gXnb2XZvgE7/k31FyaW/Mn6ee9fof+Y2Rvq298CO4Dp6it
2P5Dm9rP/V74A/g7v3ORuuj31Tllzi/wOfQZZ3vpv0p5z0lnszVDD/gMfAM+
p2ZCw1nwcGSzdKbuozkv4NKx+d9H9o76nk3qg5+r/ZzXlPF7Cm2vimpCy1zC
7x9K12AT
         "]], PolygonBox[CompressedData["
1:eJwtks9L02Ecxx+3+D7PvHSwQUEdgsA8BJ26BkJEYAR66FBGSTlImKfVjKA6
hndlB40UpDoXQdqlcps2ayp0UQT/gwaNtdXS17vPc3jD+/PzeT/v5zk9Njmc
TznnLoAj4Ld3ro9EDd6CfwVbxB1wEn45OJeFt3ucuwT/m3GuzuBomhz8UcIM
swvU39B/k54bYBzkwK1gNfU8prdDTxvcJz+hGvwd+8+w7zn8C6gTnyDOwxdj
fVdgvpeZNLWLaChw/nXiK8Ql8D2xnGrS+Adei/fppz4Nb9L/K2qU1kqw80po
3GZ+iZ73sf9csBlx5V7DpxLjOu8T9cFg3lSIO/Bl8AH8BI1gmkpx/hXzI+SG
wQr4GLESZzQ7Q88xeveYyaL/ONhP253PUiuw7230Y4d4zlssv04xX6W+Gf0c
IP5GfQM8hBfBqre63vcA3sv+H/ReBWPBdmq3PH+QmAe6vzxcJ256+ytD5O5Q
62bsL2jHv4xpkBZ5Wqb/GXia2Jvr7RvRG2mSNr25tEpTGX6UWitlHpz3dgfV
peelN0/+e0M86+0Ouov0rXn7s4q1rwp/wtnXop7PxPfYdzeYJmnLxb+qnGr6
c9IvT194+3PyQ/G8N4/klTR2iW8H80JvpLfSn9B7608WmT0ETvuEOg==
         "]], 
        PolygonBox[{{2155, 2154, 2153, 531, 2043}, {2291, 203, 2138, 2292, 
         2293}, {2133, 841, 2132, 2130, 2131}, {2168, 2167, 1999, 418, 
         2166}}]}]}, 
     {RGBColor[0.8361205663665824, 0.5975503587869778, 0.3275521271199644], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlElIlVEUx2++4bvv+V7lwoiQoI2VQbVt0wRqPFs0QtmoJZGRbdIMjGrZ
AEWLahdEi2obQVEuGhSsEJ61KjAIjEAXTQ6ZZr8/5ywO5/+d+79nuud8y1pP
7eioCCG0IymkEEPowXA5CWE1ksFYxDYI/sL5D/AAeAg8h55BxuG35ENYmwth
azaE48gf8GCac/QVOOfgvJPmuw2fF/CzH/2hwvzu5HsL37vR8+H9xB7hfgIP
cN6Jz/s5478Fr4JXC78O/QIpYRtCVxKzkLb8Rrj7dF4IY5zlM/h1+9JoPivd
RzFt+XXA34V+jX6FvIdznrsnotU4nVidwlXgxpzFugpegRSwL8Z2C/wQXA0u
IQvgXE8svrD624m9Bp3H96XEbHcTy6XS81kI5yP5VaG7vF/d6FFyekJdF6PF
U9zD4DIyTc43OL+WWM1ryDcNp8zdSfRe9Qq8x/st/IY7zSn71luox/scd2ft
/CX8RdH6c9LnQr1TnpoJcZ9F44l/lnvPqaMfzraU+Wt2n61wiqqdfPq9dvWg
mNidr9gn4PTBL2Brz9pcab6We58z4G8+S6PolYn5nM5ZnLLXM8b3AHoGf9/x
0UvfHidWg2q5h55EfoOn0DXR3r06mo+S+7njfM2I+q7+D6Mf+GxrxhVbOdSB
Zz0f1fo5WlzF19wrZ+We8f6pX9qVctrubObNNvB2m9D/cmafRSc+M+vw/dex
5khzpnm7if22z94RYpWItZEYTdF2Uj0cQdqivckx9IT3K5Uzv/JZT9yj8NZj
b4BTHw03oh/5Tmm3tqcsT/nK+BzW6n/gb/cLfQBpAh9SLN9r7Xevz5/2viWa
fRz7maztpna0y7H+AUui1aX6erLm82C0vJX/ab1XYrOr/8Sc/6P61Cv/R2mP
G/LW6yk4w4m9o/bpP3iKqD8=
         "]], PolygonBox[CompressedData["
1:eJwtlEtsjFEUx6+Z6ffdbx6dabRCYmNTr0SxsLBQKjWjtUAQjxKvhliw0apE
JbZCiI3lJGLDSiISQhdCmwxNY8oGMRJJbViJdrQzxO+f8y1Ocl733HP/53/u
ipMX9p5POOcOIClkW9q57hbn9iSdO+ud68VeTkIJXxH9WmCx3cgg8Xzk3Ef0
XfjPIfdC566QX6HWMHY78S/EtyCnsevYVfTDyBx6GsmRX+Xyf+gNai4gf5B5
ZCaw2n3IS+ws9cc5O4HUsZ9gjy1yrsz5Sc6vwddJrAVZR2wmsl71ph76bxKv
YG9F+tAnyRnl/gznd5Bb454ysQ/43hEbIudIbFexs+RkkMXo7chbb/n9yFH0
HLHuwDARNjfJyaWsp7XEr8f45PH1CRvszeQ/Iv6Z+A98g0nr8Sf6Dd2Zsv56
I5uJ8J+lRpPYtDdsFsC7in7G23uFzwD6fqSE/ob4SGB36K6nYFYLbaaa7ZTe
j36VnGlndxa5705cWz2NYt8OrfdWZCf2a+x99PKenFfo3/G9SFkPwl49q3dh
ICwy3rghDLLolwPrTTN4QPx+XE85lwKbgbAfoN4w+R3Ym/B/wi5Quy00LALs
VnEntoWRuKoZaVZ5YgXkoPBKGgdTkb1Bb0mDwS3yUt76Uc4h9KI37orDG4l3
ah4J24mQs6X4vN4zQazmDVtx8qt4jO933F8Xuif/V8JqrMQ+7k2X74T44427
6kG9DAWGhTApk9/hDWvZS9AvetslcVRcPUX+w4T1q937G9luab7z6M3IdM28
xLzT3t6iHlZRvy0ybMVhcfk58W/OODSm98TntbOrQ6uhWqrRIDYeGn+EibDZ
zpmeeKe128JQvanHu6FxVFzVTs9622nZ4lAutJ3Wbj8Dz8eabWhYCdM6er+3
XdYOaZdGvHFFPU9pPwPjj3ZUu9qVtlmrR3G9EM9HNedC45BmJZ9imlkQ71sj
tD9CfNb5CvYxb7uv+vo7NuBbjyzFvyzmnLgnn2L/AR38rrk=
         "]], 
        PolygonBox[{{2118, 830, 2117, 2114, 2115}, {2073, 2072, 1942, 682, 
         2074}, {1834, 525, 2045, 2315, 2316}, {2143, 843, 1660, 1982, 
         1983}, {1983, 1982, 2291, 965, 2294}, {2297, 2296, 2666, 1590, 
         1813}}]}]}, 
     {RGBColor[0.915305878454889, 0.6582646961372223, 0.33744822321015566`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lkmMVVUQhi/v3n73nicNzTxoVObJQIi6gyAQaJFWEokJQ4wCLtCFstBo
GNwoC0HFCBrHxIUx0YSFAhogpjEuTISmoRtEaaAJCkZlg8wBh+/PXyzOq7p1
qurUqfqrzhu18rlHn61lWXaalbM+52dGPctWQJugddZAFB5oyrJ9RZZ9y+po
svxAk5f0rvTJsoMpy36AboaOw34zdi0123zHusHePPZeRvZ6mWV/JMtGwJ9P
1vkL+nDNOgNY9zWy7Ct8beWMBck+30J/L7p7WJew318hE0XnR/iP0f8J/mCT
9RT/G6V96vwd8N/DH4C/m3UV24HIJrCOYFsh+5r9kfCPQbfVrb+T/eGlY1bs
7fAHkD/BmZP4/oT8rUa3ht1/yG9jzWk4hrPsT0L/NHvX4IeyeuGHQZtL3+Mq
fp7B/mfk/ZNz3o7taPy0Fc6/+PfY31D4zvKxPvjmZNsByXEonjvhP8D/duze
h77E9x3sbagcl3K0J2oqXrnS3XXvtpplHaFzS28rfmfkrpNqJCx0hK1yqlzt
4qw/k+MfmZwnxa04T7LXy/dCYuipzEsm3K3Kjb355K0Vn63QlXWfeQ6dVnzt
Fj6EOfgO/F+FDs8dt2Iegt41zrmO75ZkXrJ9lWNor5xf5ao5MCWfus8Y1RSf
l4VH9L7E9ixn5chqhXVmYVfAL6o5VsW8EJ3TlbEqzC6tjIECOrV0nibDl6w+
6NShdc7ogp8MfRf7m9zxG3QP5dYRfvqiV4iHLmXvIvy05Pr3Rj7H5Mac9Hug
BwO3K+qu0+zKcvlpCRwID93I+1Xu3QHIHr/VR9ChrEHoD4EurplXbhfF92Dd
Rfu58yB8C0/nkr+v19xXq0vbTUB/ZGX9EdCThXtBGNUMOZ+7xg9Wzu8C6AR8
XcZHf3z8W9rnMOhDlXvwZmUcqHbTyPlF9i7AX4JeqYy59sjZzNw4qCrnKsX9
hse9Nkf9lZ/f8fkF8iPoHGZ9Bt8FXV0Z47MbPkf+1bdPob+N2AcT74t14/BT
zn2zblz0wv+K7S78LMZ2ZjKW7m143gpDqv0L6NyO7fOV86W4nsZ2Kvp/o7NE
d4/Zuql0PcdFTeVLPp/kvBPCLfKTleufB26FqTGBkywZJ32SMSqsNkNfrRzP
uso507m6m+zlX2dNV12QLyeG6aVx0FK5ny5HnmcFLmQ7pfLs1QzeHbNd/nbi
Z6Jihv6mHCHbWLnPhYVxyI/i51huLK1Jnu2a8ZrT6h3ho0i+0xLkr8Evw+f9
Dd9XvaScHicv81k9UQ/VZYtmNfqd6IxFdgb7nfAXkA/LjQ9hfV3kZD10bcyE
Ecln6KxNyRhpi/msGqvWy/HzUTKv+v8Ts+5M3W+k3sotld+ZInr2nZgDryDf
kOzzbWQpcjEKOja5XyZCW0r3b7+YEz3hR1hU7ldhOwj+BPKByXUWr3k0N2o8
H3q07lqoJt2F/ajW6tGj0afb0VnDWR/G3OoOeZnMjyeWX1inkG1Et408PEJv
L2/4jeqNWmjG6Y6666l4C/QOaJYfCnyq51XbKfjum4yBycj25+4Z2cu38q6c
byndw/qPMD7yozzdiDvOjXm1KOaS3lK9r6Pjjp2F76m5pHdHspul+11931U4
Ly0xY8Wrf/YGVvVGtcabNQ96rm6crI35oVj1fVfUMcXbqBj0/+hw6dxoBshv
Z9RR53TFWfp/oHnTN3plf+ThRGGsy7477qC61MJWMet+x6KWeq+b4v9bT/TF
cXwuazgfc0rnT7hSDTZFT3Umv4t6Hy9BrwT2hEHVVnEoBtnKt/b0TmpuK+8d
8X9R+bonMKQ3sDfezVPQ/wFqe2PJ
         "]], PolygonBox[CompressedData["
1:eJwtlWtolmUYx++9z7vnue85w03dnIllNQ8zZn5ctJZSs3QUFIFuRK0DtKD0
Q1AfXERllEVKSkgH6ENEBEKmM8pKpQ99qFzO1kHMlU0XKZQ5p+Y6/P793w8X
z3Xd/+t039fhmXfv2tsfKYUQnoLK0O95CKMc/AKNFiEcLyx/Bu2EfxialYUw
HWqIIXyB/uaqENZj/E4KYQDaCL8QGgYbQ38rfv9EvxXsVF7xXbLvY8gj8DvA
j+DvUehS5K+RM/QfqAmhHZ0+5GfBdhXORfbKdQv0PthO6GfwcfDTYOPk9DH8
YagTnTbyWYu/aegU6J4DnwFWW1j3S2wmwE7mzkU5HQW7Bptx5O+hh8CqkYfg
v4EWgDdicye6g8glsBc5ewL5Q2gFcndh++3Irxa+k+72FflMwE9if5H4+5FP
IefIVXoL5DJ330TMVdAc6HHw5fi4Al97wX9Dvi/3+97G2TawDs7KYB34uBlf
T0OT4L3Iz8BfD56BX4fci+230BuZa6banUzO5RPoV/gWbOpKvtNi+IWqIfpn
yXkB/FvE3F1yT6g3+nLfVXfW292DXCo7pmJfUth2QgS/F5/bMr//B7lrrFp3
o/88+ndHY+qxu+CX8Sb1yHvAl9c4R+W6D3oSfDM+XwBvxsfK5DNhXVA/8gZi
HA2+8zrlk1xb5ataDSbH/px4B+AvYH8evh38YnRPqV8+QmcUvKEwfhZ8KXIf
clfJPaHemJ1cK+U4Bn9V4V45AAXkZmhL8JvOh68v3JsXsP8H/kTyXRVzKvLL
ue/yNvoHo33Kt3poVuGclJt87kHu5Y2qc7/ZJPKG6PlTT7zCeVNhW/X739E1
0Htrhs6ov/E3Qqx+fH4Kfii6vjuwOYHuXPA38TWMzmXw/dG9+i7yGN9l0b2m
Hroh2od8qeb74Ocl2+rOl8M/R8wrM89AAT4f+VDmmdPsLanxbKnGm8D+4mwQ
fz+BL0Keis2/JcdrRb4J/RXVIfyIThvytcityOuIt538zifbSqcTbAb2d5Rc
wwfR7+Hs1mrPXHeNd5x2nXbUQfC6wr2sN9Zbd2A/VHbPtyfHVGzdoUA+lzz7
U7Avw/cU7h31oHpxKLq2et/90TtAu0A1aABvSsaUU5f2Q3Sv6k66Wz34kcxv
0IzvFui7zG+kt5pR6S+d1SbvRO1GzcQPYDdG9/oZaE3hnaLdMhN5NtgotBt+
mLMhsCXJupoBzYJiKnaJs4huD+8ykNlGtgOV/a19/UduEq8dPgLeFB1LO3op
uq8l10o+XoefGf3vaYTmRO982cvnVnydhnZl/mfo3zFFb6jcobnw7+GzraJz
DLmx8Kz9vzOT76S76Z9xGFodXSvdaQ38LdG7VTtX/7aY/C/QTtNuO567PpoR
7cKWyv9CM7IoOQflop35WO6ZUK+qZtPlK3p2lKNyXZzsWz6uhl9d+F+qGqlW
GwvvOt2xFnl99K7XP+MlqK6y31SfafCromddM78SPkXXSjOn2eus1F/3ux/7
quRdpZ5Wb/8HlQUcZg==
         "]], 
        PolygonBox[{{2178, 2177, 2270, 946, 2272}, {2269, 945, 1771, 2177, 
         2178}}]}]}, 
     {RGBColor[0.9408161392793334, 0.7220403481983333, 0.4165300317659333], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl3mMltUVxt/5lvd972s1EXVwAQRhrExFU0Sl44KVcYvFphKjDv6BY3Bp
1BmcGMuAXdxSTYsLyyAqalJTjWiayqABA2pdEIwaBaxWowKCkFBRLCFtxT6/
PKfhj/vde8937rnnnvOc5R3V3XPxjbUsy2a0ZFld81f6WSrCRI0pjSy7RvuV
+m9cnmX3ax4u+vBmlq3XeoXGXWWWrdI8o8qy0aK/VPP+Wp17Q+sXWzwjo0dj
gWT+VfPTIevU3LI3lT77lyLLPtc4T7Rvcu+hr9f/j0j+ZJ3fJNkfaP+M5u3i
mSvaBI3HkCvac5q/1lsGRFvY8N3don9W893oio5f56Y9F/r0pCz7h/Yf6c6P
9J+m7D39dIi/V+fv1Z3faz5NPLeK/79122mO1meIr9K+Eu81Wl8o+llabyls
g68k70Gd7xfPYs3L9JbtGiu1Hyq+WzQvFH1M0JfWrSv6odsqvWOtaGs0WiVz
r+gnSt9ZGoP6/0vJfyP5/RskZ4V43hRPN29NlrFZPCdqDJX87/S2tQ3vWa8W
70iNp8Q3XTJ+GW/EP/ipVeM+yZmuM/cm2wy/YOeb66aPbfG7eNMorSeJ79+a
h0qXM7V+QLzTJW+V9Bvg3aL9S/u/ieeecj9WwAn/o/+SzG9gvVy8o8T3qWh3
5cbCZvF9q/06yVqCjZKxyRp8/kLz4xr7MvsKn50j+k+S/fYCfuaeuuWCObD3
u2T8LAq8Pln3mnh4Nfndf8yNr4Hg2aH9s/r/79JxWNM4RbfvSvvuCNnhYZ29
QfwPaf5e9LdEP1r032vMlh5JtCGiHaPRz76yb/4g2ZeKlnNWd20pjc9pos8U
/YqGbc6bV4cf0eGopv0Jfrl3QshYUbOczYEp9GRGT87enRwjxDe2xx+ztf9z
3fLABn6eFveCnTVxdr50+o/kfV7a9q/WbP+r69YPnq25Zb1f2t/4jDMHJcfX
ND1uT834AVfbknU9UvMh8Gh9ls6StO4RX6Xxtuh/0n3vaN4r+U9o/W6y3fAx
/h1ZGO81ne0Q/UlszH3iGy3+K/BLMt5PEu++mmMZnpeT89crml/Uf2tF+1Zz
b9P8P9ed62q2F7YqSvsU326v+z3jNc5IvntS/H9R6I+8p+Is/j80MDCCWNa9
3yTbGFvjrx9q/0/tj8Mm0qG7aUyMTL5vlOayMv+Z+uPwwjbEluNET+I/QfNg
07kUTINFMLlPum1J1om3XqKxA1wm8y+PHAXeiXkw0FLaDhPEO7ZyDplTOKfB
PzoG57mLPLcs5HD/YKzHJtehds1Z5fzTURgX5N9zyT2RQ8glS3NjaHzlXARm
XtOYIvpU7R8mj5bG322ae0vTr9e8oLDNv9D6fq2foB7o3nmFsTFf887cuH1T
9Ntzx87Tondq3yc5D5TGHbFATMzNXW/miP4FNa62P8cxj9O5Z3LHJLXlJtEv
07pP81beWrP+1xbOBYeWxhi5GPtSo6h1izUW5q61d4pnZWASv5ETiHVqA/WA
uvCa6NsK33GBaBtrti11/Tf67xjp36V5g3g+EH2j5oGoD79O7gvGR717v/D5
9VHfeiJ+8QHrrtz+HRP14JTk3NuR7AN88Qn4L4wT8EL9ow4OlI5tYvynmj8s
/Gbq800ap0vPvsD+7rAvPsAX80r7B/uQ387R2Tbtr5L8lobxQ+4iXvD1YPQk
CyOHk98Homf4uHSu2pQ7x6APcYr/8GOrZLZKzmHN/fHM3KL/JxPvDcc2ufnZ
qIm7o7eiBnWW9vVl6Bi2Iue21y2TesncGuuTG45NsEuMgQVyFe84JGKf3mxE
077oCDngeHnIJ76GVdbtqCp6n7r7g0mFcwU544DKOfsHleUhF5+h76y68Ukv
Myvi8fHcb9olGXeUtuPtmndGXiW/LopayX/k1IM1P5q5HwF74AzM8hb8Ml5n
9lDbyMNRD4ZE70Mu4N4xkVNWRT8yOnLL+tzxcV2yjh3BvzjySJfmRuX+Ii+N
7S/rxjc1s4oeqD/6K/qs/qgF6Exvx/qAwjkM/2LbrpBPHaM2vd4wdnojHsHA
5YX16Yz8sLNuDKPnnrAtubk9atuuZDnDC9dUfDsvd77HVsi9JWTgg9PiHJgh
39M7UjfIMZdGn4Pd2iI2qc/HRo3uCxtQc4kZYqdT9x5Ymefcwn3juobzBrUO
rGNH7NEftZLeZ1j0HuAG/KyI3hL7Yltq/vDAai253g0tXeuwHbEzMfLGKRFT
F0VPeH7pPE+PuS03jm8tjTF6NWK5iruolUOiluK7Y5Nt3pYsb3bIhHdY8C+P
OgWejhffLvH/KDl+WU+MnnFq2PPK3Pamz8UP+IMc0VX5u2VaZT/NDAyQn/hm
AaPw7w7fkbvmxrcMumWRc6gtvXE2S7bxGHJnspzbotYtiXoHvvYG5vEFvTLv
aissb0hyXtgX/iIvZg3z851APnhdPM3KeZ58Tz81M2oKtqfWgpM1kYOon4/k
ph1c+m3QyUsHkVPQo3AeozbTL4E1MEdN6YvcPlPzjmSdz/5/fY4aekJy/aKO
9dJHiedOyfmV1p18m2i9IXfuH4zvj61RT8ltVfS6fI9Rt5ZJzo+TbdUaPc7N
EYO7C/diz8d3IvLBWWsyXsgfZWl7tkWN6gjfkQfx56nJvSa5jVpK/ub9vJ1v
GLDTU9oe0KdGzm6P3rS9ss58X/Ie3rUxt07otrp0zBA714Wt1kUPuSh3TJPL
f5u8XhTfEXc33BMTh2/XXBPB9NKo73yHTYk6eHoyNmZI/suF+V8qnGPQE9zz
HcW5ycmyueOh+G7qjnjkHDWYu45Ozrcjkr+xwQjfNOBhT+Qf4pV3gU/yzcbo
VX5WGdNH4PO6Y5u4/h8Gbymm
         "]], PolygonBox[CompressedData["
1:eJwtlllsF1UUxuc/U2bm/nEJSEBUkLIKKkbBoAU12oIaFaPEiIWH0kS2qGxR
lIILyAOKQGzZl0iiEQP4AmoCyiIC0ho0sYCChgpagQQEWUJUir8vHw8n+c52
77l3zv3OlFZPePqlOIqi1UgJMjONov6AecjmEEW16P9i79wKezGKXsd2Cb0r
/jfAs/GXgQ+xyM9ZFA3ANrgQRf8lUXQPeByyrOA1x4NLkeP47iI+gD8nZyf+
C7Kh/4B8ROxn2KaBv0c+VC343wHPZ78K9CbyD5N7NzX1oLYtxM/BPwI/5qga
2zB8c7GNJH4S+QvyKJqBbCh4jVfxLST+CfBu1vuCxK7YTiSuSbW9hf4wMU8R
MxPcB/lLZyM+Bdez3gcF38FE9Cpi32f/9uzfj/1Hs0YB317it4NfQVL0Z1lj
Erk3EnMBvRx9KHpZ8N1NZ817g/fU3i2s+Sb4DDI0ds5N5L6rM5f4jvaCH2WN
Zvz/kP8IuA3SG1yFfwH+r3Vm8FpsW4K/sb71JnJmUXsVegaeg20jeDnyos5G
TevxP0T95egrOV8l+5eiN6DXI2eJ3YEsKvEe28FT8V8GD0Imox9hjU/Yu571
LuX+RvpW/dGPov9NzJ4Sn1FnVY+oV47hv1lnLXrvI+iPg0dm7p3XkCW5a1bt
y9ljH3udwT+k4OYehO8cej3r1WA7C+6ObQD6SfJ7gnsE4z+wNSsWfRW5jcSv
Yb096JsKtjUE96R6Uz2oXuwcXOs68scSPz/47l/GVkd9tciUxN9kJf7j+Lfg
P4rt+sx3qLvUG+uC/nzm2i/jHxh8R7orfZMV6kXVwF670E/rvvDXoBeRPHeP
qldPk3MbuAXbd+An2TsCd8qcG2FrhX5rcOxZcq7Fdwv6qcR3pLuaQsxw9MOk
lII7Zv6WOoPOshH9y4I5oy51T6u395C/Cd+E3LnDsE3MzSniltHoTei9kK7g
tshY4uchfcCBmNuJLUrQu7DeA/h+JP5j9BnsuRS9bfDZB2K7DjwNf1XimGbq
6RjcO7LJNz93b+sN6S3pm+nb6Y33Rp+LvjX2Nz+Z+o50V+rRzuz3Qu6z6E4v
g39CPk3MOeKeymCu7IacBFer/2P34ObMPaXemoCsA4/D1i7xHeguuqOH2LaY
/PPqx8RvtBu+2cSMTXznv6OPQAbiu4jcSezW3L2+mJht4F9z37Xe4C/gc8Ss
KHhNra0eVa+KA59hrVFIG/BjrDcGvBj/1MQcv5p6D2bmfnH8IfQEfwv6GqQW
X3u+146CczqAy4O5TW+gAlxOTGu9H+IHg2eRPyYxJ4ubG9G3xebsP9Hb6r3H
niFdyK/BvyZxztvg48Ss1/tD9qPvCua6tei7NYuwTUvMCeKG98QRkXMO4DuF
vrlgDhOXNek+U8+A38AP5u4tcfwobB2C73aVOF/zLHWvNyBfEb8fORCbA8WF
azNzrWaAZoE4RlyjnlBv7E/NXZopmi3T8Y+P3fN9ir5j3bVo4WDqN6q3qjfa
S7MuuNdUs2pvVA2xOVpcrRmnWaeeWURMZere05l1dtXccKWehaotN9Y3PI9/
g+bzle/diL4t82xTjTWZ36DeonpwGfhY6lmunG+DZ6JmYxn734fet+i3LQ4T
l7XL/fYrxFG5Z7Zmt/4JLqae+Zr91djmXeEwcVl7bAXwVUXPyp7oV4PrMvei
OERcUoZ0in0nrYqewZrF4rTJuWeIZol6ZCm4debeV0+rt/tl3ktrROQP15qx
Z27fYI4WV2vma/anuXtDnJyBbwjmes3QE+AhmWvVG7im6J5V74pDTqi/Ms9y
9XwL+P7M3CdOCsSfSf3vozdyhNydwb2unv5Gby33XemN6K3cEcwNqvk51qrI
/PbUo/v0rxL8bcQ5Efh/s9FWrw==
         "]]}]}, 
     {RGBColor[0.9663264001037778, 0.7858160002594445, 0.49561184032171113`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmQmMVtUVx9/M99bPFdNWpVYZaA12cYEgoDNYRLRYcEGRaHCpIg3a1A1c
uuBeJM4AClYHJXFAg8oMTbXBauvC6hbasgxY21hAtLgCGrQuaP8//oeYcLnn
u++8c88995z/OedN08VXjP5lY5Ikp+q/muZH0iR5TKOrIUnWaizV+odaf7ww
/UfNb2g8p2cf5UlyhNZWaDyv3/2qJFkperGeH19Z5qWiZ0nen/R8p+T0bzRP
L/1u1/qSRj+7RvMzGg+Jnp4lybGijxE9RmNlg/m3lqY/0b7j9bySwgdrvh5e
DYlLljeYhv86ydkhnsH6Pbv03jMqP+8fPHeWfue/mrdrHhFyrtd7HzT63VbJ
uVPjLj2YofndmvUbVE+SIegsfX6m+SKN7sR69Wy0bp2SuVjjY60fpHdP0FpL
DN69R+t3aX2mxgOSv740/9uSuaG0fdpy26RN40lkad6pMYvzNdjOInfvxT7I
HFqzvaGx75LQZaAYF8T9dscdjw0dX4z3Z5amW2WrKeL/rcZ4vZNJxhfYh/3E
k2j+ju63Jvoj8e9V+Ny7NEqNZo1tjdaxpvlzjUaNrcXuV5M/F7Yvdsb2+NGS
BvtSQ2n+RPOH4tsuuq75KY1tel4Vtu9lovcT2+8r04/JVp0a54h+JLc//YB9
NQ9otJyjRc/Xec5OvV9zFXoW9rkBwXO09l4g+m6t70hNc+99NfYmWMRzpOij
NM7CRzPTh4q+NtZ5fkTEB/wd2uslzd+Q7xxS+fmZkr9J727UmKPf75T2jfML
+yr+iU8iA30bND7Q2fQvOU//DZGs4Zqf0Hhf77yjd94rfJct4WO8Q8w+JHpu
g221XvSqiB/kn1uz724U3SSZpegBhX1tk3gWNTh2myN2Jmr9k5p9ulv0eo3v
ir4dnVP7x7SgubP3dd6los/TfFpq+gtiL/W7b6XeC/9mvZ5bLjJnxzo+v1rj
P5nxCr12Bj94xBlvrWxLbNqu55+GbSdxb7lp1nuk5sHmG0MmPLMivhaFT84P
P4Hn0+Anhh6JOGLmNzi5sbBO46TDDo0XWdd8iJQ9XvTFgVstqe18iuaTU98V
cdVH45PAiuFan5f4+fDgWVsZnz/XOS7XvEhjjXToFP9nGgs1Cj0rNRoabSt+
3yCe/+WOa+J7TWae1WFT9GffhXFG7PBonJFzfRryOfvSeMb6/jX7Kn7WO7ef
4WN3p8Z9MCgLzJif+D7XZcYcns+J3PBCZXplZR7uHj7shs3AV+5nr9z3zsxd
co8/rPk39DOFz7oY3ymMDSdpfl+/t4tu1XyF+F4lrsW3mXwHHmj8XHzD2Evz
cu21LDNekhNWRYxcXTn3XCeeGdp3U+Lzckf3a0wERyvTW7XX3NS4zt7PVfaX
LVqfqPgaRB7T/JfKeeOW3Lh5eG65pzQ452yJ+B2QGwPwQ86OPbAzPGBBEjx9
4n3uA902hU/im9i0ym0X1h5M7efYAD3ZszXkcnfwchfE4LLK+4A95CzOBs7O
I09ofkrrS4IH3m0aK8RzpM44GZ8Kn75Iv/8qeV3Sp700ntxXGpPAdHDpSdn2
FzXf5b81bqy5FugtGU2Zn7WVXmvVfEdpDJ6qeV5p/g7N61Jj+tEhu2fIZ/8L
az7vleI7R/QVpe8WPuzTS3qOEz25MAb/K3B4Wc3y0aundDmYc9WMn7tijzTz
c/Ly1ZJ7idau0nxa6bj8tmT3En/fmvHy0tw4/baeLyqdv0eWrjug8YEHS+vw
Ve6Y747c3TPyLecaGzmd2EQnahLuBttsD/1fkcyXNZoz56zBkX+PKb3PNMl/
I3VsHNbo2CLGiLvphTF9tubDxd+kxamFz9EUZ2FAb4s8syZyNLY5N/JLFfZC
92GZ7V+LO5lfsz/iK+AKuEe+JY/i42ML5+ijSuceMAi+cXXn5p8Uzmn71pw/
wZfOqD9nVl7vUdqvq8CZq+KOrqUmqVvuBaIPqRvDwXJs0CvscLWeHwbdYF/C
j7AdZzkxM2YN0dySGVPuyZzDwPczJO/0iDvqXmqUWsTgvJqx6IbU+EL8Tg3f
XiBdny7sP/gRz2fWfO/EwY7wN2J/Rqw3R/1FviZXdMd9rM2cA15IPbgz8jW1
0j4110tDM99JY8QnssZp/7Pr1nOq9Pmm3h0gundi+4HXYDVxT96fFjjbN+6u
O3VMIvPMurH4RskcWLffzs9dt4ErL1euN/tE/iCexsQZtwe2gDH4Mvvgbx0R
l9gQG4+NWHilMl69VFk/7qcj8VnRgfOOrvs+bius++0h8wDJ75FZp2fCRtzZ
Y1p7NHOsH6S1xzVWSuaSwjX5BM1tkbvYq1fEB/6Dz62J+F0QvoCekxtdO+6p
K6GpJyfV7Lf4dY/oRfA5cngReZyagrgCw6g1zonceWHEE/zUuaeGT/y6sC2f
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
OHuP7Otve5yTWvz/naB79w==
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.9918366609282222, 0.8495916523205556, 0.5746936488774889], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgmwVdWVhu95957pGsB2gmglggxG4SlhUrSTDkIlTPoeM4iC2ibSKCJg
MIiRmScm2rFE0KDMgwqBh3aMqJno7uquxKmHaoQkHRNRwDAoJt0xaNLr8/8p
uuqd2vuus4e1117Dv9Z5nW6aPvL2hkqlMrRaqcRf5atZpXJVdK4uKpXZaaXy
lei38r5WqeTxe3NSqXQuK5W2QTu7HrT4/eUY82H8Pi3efyqe7tG/O69UpsTC
3epa48teZ1TQewb9zKDfnGj8OdHOinZmPJNi3LTYe3S03w9eute17zdj3gnW
ibkdY51eifpdot0Y7zfEsz/enx5tu3j6VbR2G/MDjXeHYvx/Bv9b4zwfxfpt
T45PxAdneDTGd6jpXRa05uBhbOx1R/Dw6/g9KPp1r9nWez0c9MFBPxD9DdG+
Hbx8Jmib4v2Bqn53jUkvxfvbY99m7wVv51S1/uvRfyLahV5/alV91oG+Mp4F
8bTEc1+D7uCOaP8+nlqMeTd4PhTPX4K+PvYYErQ/R3uipjEroXuNEMEntO+Y
3j7GttYkg5019Z8O+iPxfn48n4r+imgXmbd10a71743B51Lz0y3m/WM8XeMZ
aX66xZrVmDQuxnQPGa5LxeuFltM7ltXgROv0SLTng973QIy/PcYsbtD7Fu8F
D9BOi/7xRHTWaFeVfKCNziTjyws99McE7WC8/31Ndzkzfv9L0P8rhDI05kwJ
+j/H72mx70XR/0X0nwx6Y/QfifamaG+M55Lo/21Nv+nfk6o/PPrLY60+sfbD
0b4evycH/WfRbo69rol2NfZV1XzmXphq3xWx14Olxj8eY28ute83M73/O/PW
zTJeVVHbxf3tMW5mrDcu5j1aSgfQhZXRn8qdRv/+eN6OscPjLr6S6x5Oj/sZ
H2NnxJgLEu0z1XvdGe3MeNpEf0fMnRXvx5eizTD9maDPDvqEoP8p+i9H/9+j
P8M6hp4im62WzxXx9I7zD4+5jfiPqmxrdczti7xy+Rfu+Tr2jHnvxdM53vWr
q39WtJPj+VPM7RN7Lc50V7eW8hV/qMnX9I7f82LepFjz3LroN+e6+w9qOk+H
uvrXZ9ID9GFW9C+0zWK7/1QVz3+M3x/G2P+1btD+sSb7vRT+qrrTyZnONy7a
/kG7PJ45yDOXzX0t6B/VZJ/8fjLV7/YNaj92HztlTBprdqqL/vVcfgTeWoPf
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
3060jeEf5hjLvRrt/wHpfrJG
         "]], PolygonBox[CompressedData["
1:eJwtl3eMVVUQxu97b/eee1+iWAhiB1FEcSMou0hEo8Qo4C5tlwUiuxiK0kGw
IQoqLB0SCNhAUKnSFrCBYkONxhqjhiZSVmkKGqwgqL8vn39M3nznmzPn3HNm
5sxr3HdEt+HZKIp2IQVIVT6KlhRG0fe5KCpLo+iNOIpqMlG0DqP5IYrmMfYw
XCfGlsFdx1h7fnvA55jbDali/g/4mgBXi/0EHD+J/Rr0O+Hr4OvgV8N/x9go
uF3IbvQNSA32N4PXo89Iomg4641AZqIvZWwta02Ff4t1VzD2OFx9/C1Hf07+
mH8vskn7Yr1HWa8Y+0r0lfDj4OaB+6EvYM5Y5peCZ6Pn2dMx9FascQz9U3w8
AY7Bq7CfjPRkfi9kir4NKUd/AfkV246s0ZH1zsG+hPlt8Hkt/t9HEnAF/Gj4
avAXcNORYegbkT+Y/3liroI1P0PfgSwBn873bUf/MvVdfAx/XOePv+b4+wRc
hf+u8Nvh94O7oOeC9WnYvIR9G+yL0MsYWwrOgquzvsPW2P7N76fiWPMrfS9r
DkYfgkxBvwr7B7BvgZRj/zJjc+Ba8/3DsG8L3wr/H7DfrfiqBi8DF2HfBftZ
ie/ydeRP+Mrgs/6F+SXYLgCvBxeCR6OXMVbO/CsZKwN3AleCD7HHO8G9wQvB
l8N3ALcGNwPXwp/C/zvINPQB8A/CfxY7FvXNa9nv+mBbffMG9NmM9WXtfsgc
9K74uwN/DfmecfCH2P9m9t4OGYCvs8D1co4ZxY7maO79jM1LHCOKlR7IJPSZ
qe+uD3iW4i+2vhr5BnwePrqjv4ccBc+HTzIeqwE/Df43csxNBPfH/nf5Z4+d
845BxeI+vq8O7sfEsb2Ksa+xbw1uwd6a46MC2yrkV7jfkHOZ3xOb0RmPNQS3
xcde9J/w9zN6/bzvajTyPLYrmT8YfRDyBLgY/0X4Pxv/XeHOyPtuDsOfqdhn
7EO4PeCQd4woVuTjScU2sjlyDVAtGB9897oD3cVE8D1Z1xjVmg6SQufcSHyt
UYxlXWNUazrh40DOMahY7Bwci6pxqnWTY9ci5aRyszS4dinmFHs6U51tA8UE
XJ/wfy0pdCzuVAzBrWTODvTXkDHo0xnbiP567LNSTVJtWhS7tqkmqjaqRqlW
3acaAn4GGVrgGrMKriI413TH5+V9R7qrg4wdgrs++Cx3I7FymTmvor+G7MXX
t4qRjPe4S7ULvjRyTaoET02c2/uRrvhamLi2K0YWoa9KHMslyPXoG7H5iLUP
IAfRp+LvDfTm8C3he8euVVMYmxMs0q+AbwG/P3Gt24L8i+048HHsbwWPR39F
34w+FVkNviXv2juTPW2B6w+ei36AOYPQL+Abfsj5jrux1lVIvaxryAjsz8dH
A7i/+P4hcFcn3otytkfwmensFOOK9ZvwF9BT5HFwN3D7rGtqOXrK2JGsz2AT
+jWJv10xp9jTmevsVSNrwPvAGwv8ZhaAL8P+KbgxyCRwL/j7M76zPalzXrnf
FKlKXRNUGx5j/mLmnoydy6pRqlXtg2uTaqBqYZ1iqsBv3Iupa55qX6XOA/1o
cC7LRrY/BZ+lvvEI+sWscb7uEn4g/HBwd/B14OHgfcG1RW/wEPbST/GS85xG
6JfozhgfCN8EfUywvgNpxv7q5V0LVMM6Br9JeptKkBvhfmbOWzm/2d3BRxLn
lsaOJn4z9HZsQg6Cn05dezpwhk+lfgP1FqpGH4a/S/We+Yl6CvjvY79tc8Fv
qzYk9qU3WG/xEMZ2Yn8F/NDUPYJ6hSJw/9RnorM5gVzM/ipUswucs8pd1QjV
ihP4K1a+I3UZ3/EG1u6b2rdq4Cjws+DvMu6B1oIfBncscE7MBi9M3RupJtfG
fmP11ipHhiXOIeXSOOS5xD2Geo3GnPfN6I8Ff7tiWrH9TupvV0+h3qI22HaZ
1kd/kbEauMnIenxPDo5VxXxTuMPBtec4fF/0kcGxpRwbjH4hZ/Kn9q8zAS9O
XdvGqx9h/lZwSeQz26baydgM5Q/yJuvdzdiKjHuuu1LXJNUm5bhyvVXqs1VO
Kbe0B+1Fb04r5WJwL6oaUBQcc4o9vSmXo7dLndt6Qx6FfzP13WrNvbHfaL3V
6nl/U6ylruWK6U3o1alzcz7+tjB/aeK3Tj3oMr2trHFaoWtuIXxp6l5aOX87
+j34KS70m6W364a8Y19j4qqDz0o9mnq1JbF7NfV46vW2xe591WOp1ypL3Is8
xFgpegjujc6AbwnfPfZbrz1pb6qBqoW6I93VI+BQ6JgbmzoGFAsaa553j6Re
6R/4JuDi4N72FLgxeHHs3FPPpd7rvmDuJNIo7xxRrqiGjAq+Y921erJ30Tcj
M3OOAcWC9qy9K0Yq4Z5P3AvrP8AL6JfmvRftSb3rOt1ZzjGr2NWaWls5fy/r
tU38dunN64Nteez/CprTmW+7KO9YVc5PjF1jVWv1n2A++vLYuaUeWL2w3iS9
TW2QG9C3x36b1AOrF747dmzom/rgv1Y9Pvptel/Rb0w8Vz1Cr/j/HMu5RmSD
71B3OY2xtaqtjC3PuAdUL6g3Um+lfK5DX5PYVm+w3uLNqdfSnD3g/wAYSMwa

         "]]}]}, 
     {RGBColor[1., 0.9499999999999998, 0.7499999999999998], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXuMVdUVxs+de+859wyNEfDFIKD1gQoygCjqAAqO+EBBQBCUYZDhocww
WJFHVRQYQKxPNLamovzRaGstIg8VEPBtMamiSVsBlYqNaYUCf9REm7Sm6+f3
TTC5O/tx9l577fX41tr7njp1zpjWqiRJ0mKSxC+5LjovRz01ysFoHygkSWOU
J8tJ8qsox8TYtVFfE+VgjNeWkmROtPtE/X7U/4ixc2LtJ1H/M0pTlF967Rsx
3rda4+PSJOlXLfpZJrrMmRz9CVVaw3zGnnT7rfi2I9otUU+MekKUjTF+Y8zf
F+2JUY8KmldEPS1ofl7W+KpE3+hD+7uy2ow/G7RGRPvraC+L+vUorTG2gj2j
HE5cF9Rm/WfRfzMRr/D5erTvi/b3UfIozVFeK0sOO6PeEuXsRPXWKAOi/WrU
m6P09Nytnk9Nf2qMby/rvC8mOjP9SVE/XqX1j0V9nulCs3f0/xffDybSR2uM
P52oRkefRbuOdVG6R3uhz7kz2sVUbc4I3bZoj4j2goLk0tN1m9vDoiyP9tuJ
1i03Hb4vswzry9qbffdG/antY3fUe6J8hUxLah8q6Rw7LQfmv+85O91mPA39
dg/+6kK/d8S3L6N0i/GTY31TzKmJdudot4Ux7y9Ib+iPs35R0NjJMefdsmx0
quX/rmW+IdauC/q7bfd/LUjmXaPsijkbYu1HZbWR83NVshnkNKCSJJdHf2qm
mv06xZyuidrsO8y08YvjU9HCdtDbR6bZvygf+cSy2mn7eS/qP1p3dW5fbF/E
Jw8ksuVr3MY/aWPjDxYkt0MxPivGvsT+o/9AjH8cZUhBMt5rHeFDe38k/91u
YxusvRT6Uf+rrLXU9FfH+NqQ4cYq0YU/+D7LmICc8Y9TShrnLPgx/jw61mwr
y86x+Vr7OJhEOVAWNj3g/VabhwNuHzAP1QXZ027LrSZs5kj0r8+kS/ZYG+O3
F+WD+NPM+L4o+pdGe2TMHxp1YyY9oLMm23tVKpvvFP1CtD9PNFbweE2q/mH7
Xb19cFhJ/ol+kQ26QCfMLXr+KWE/N7FX1OeUJD/OelbwUxV0fh789KgW3t2S
B37GWN8oK2PON6nwcUWMzwTQY3xG1MWoC2WNDbEdvBKfG6x75DYt1vTGf3IV
2r+Puku17LfB2ACfyODh+DY55jwU9faQ2QcFYcLw+Ha5/b3ebTABrAVzwc0n
Kpr/WKydV5Ad47/gxUmpMKfOds14z0Rt7GdX8PxtWb6C7dfZftqi/yH+Zx/6
1j71TdSloHl+Iv3RxseX59LFU6ls+Xvbc7Pb+Mcw4xf8d0pFCzrss8t7fVeU
newyjnxjHG4BAwuiCZawBh5PC3kuDbm9GPs3V8lXDxgbppcl6/ft71+Z3r9N
E503Vilmsd8P9llQfEO+Ex0ziU+vW+afud+9JPrgEPbFXOIpeDktSsdEc5rc
xj+a7SOco8X+CLYTd9D198aQWZZZs2XYI+jMKB/dc4bPtda4c4nl3OL53Uri
AfzuEnJeU5BPzQ47eSbas0NWqyry1dVRN4cPjAn+u1ZkD8RcdN2tKFvHzsHV
41Jh9PqK/GNb9BfEHvOjzLY/oxN02mKa3apV4xurnQuNrjqKLde53T4PXuZk
ykEWZrJhsJZcYl+V8PdZ6+hG6+78XNjalEkO2yxb8Inxr4xdx8V4j0T7j/G+
teaB3OxUzwFH+8TZv65SzDkxlR/BA7EVutCcVtT5OXulrG/QXxv8LCHm5cKM
ZSXhxvpc7Q254vPh0tF4fchrF/rsbxgHWbclEU/MAXvBnsR6KRtPyQG/yHWG
iVE/XxEWvJTKR5usl5L9bqrjxmuOHbdWiR57DiwqBhN/sRfiPD77mPEBuoMy
4S25A9izwHi1xrSgszt4uRlsSBSn73BegY/iq8izGOs/jXkXZtoT3aLzPSWN
H+O8iTFwjHUtUW5IFFfgnRyGfdiP/LFfUXGRbzsc+8j1uhS0nrUnVcuvJuTa
i7XwOT3mzIhyc7Rnuj0+UU1/faL9Z5tOF48z58qSbIJvreYTLBpvuuM4e8zp
XtT3HZ7HnCmew77kEOQEnPfYgnCTOPi4x/HxSwo6K7jUEPWUgmz4gPMrcOzS
guRyifG10Ri7PJOt7c8V+xu8lnXIaZLnUYMxg0y/zjJGJ+w9JRNmEtv/FrQ2
xbd9UR/OFU9q4vvfc+VHh6P9Za48aEDUE1PlkUPCTsen4pu7CzzB22TsP9ob
g+ZnuTAN+mAp9ctuk0cwZ7f54yybLId1JZ3pruhvj3JnlL8ErbOI0UG/hnhk
nQ5ym1yUGEYsG5kpZ1jrvGGW87tLHIvRC3nIYts58r7a+hth32Vsi+1zsnWx
xfpblkiugyz/zrHvYPPQUJK+0fXuXGf5JFeORo5B3rG3JNvFbqs99oppNlge
0B5s+vXuc15Kne1ts2MQ+4HlYNoK63qP9V1Vrf1Or1bcYO5Ztql2e2lzDc5s
Dl4fjPmv5srlub+AEeic8TX2xxrzQ93VZycP4vzESdaCC63+zjz8Dn2TB7Dn
i5l8aV0mbAVjX8qVE5AbfJAKj5daVuhisdsvxJx7o/2nmPNUpj1fS3UHZ5y8
63nbMLZ8BCwDV6xf9kLH64z5a2JtVq18dG4qLECm8Py18QI8mJMqX+idybY2
OndF9gst/7cyxePJQbtjQfkxtnOpYy5zyJE7GR/grXO0V0R9QXy/syRb6RX1
T2wbNZY7/GC/x9qGOxQ0h/Zm485Ctzt4nD06epwcgRwgt33ltrGDvrtUez/W
zk6EM9Vuv2Y6W+w7S6wLfHqO/boxVRwaFPjQq1r6Rc+/zoVR1+fC0dnGWXJf
4tCqXDl1lfNq7Ah7wlafcxsdo0PkhaywSezxsDG2wfPfsUzBDnSDDXAm5E18
g/+hmXKSSiY+mo3n1MgZnQ8tSWfoizz6I+fb5BStnvNQSXETPl5IdUbOujLX
HeS+XHzDG5jA2wN3Id4koImdkLN19rng/fpUsXBgRfPQ78cxPjpVfnN+Rb61
z3H3iGM6sZ37PfcTYv/XmfJN7i7kQ+RF5NeX+y6GjxAHDjp/fqSkM3Ne8uIJ
zo3P9ZtUr0z2hT1hS/g18uEeN9+yusF2PtTjy1LlkN2rdR/s4vsh34d5Dvu8
mSgmorMdxnywlrFl/sacRxPJ/0Tfj4YkuheA7Sd4HD/tkiiP5g1ksPETjAID
uaeR81wc/doofRPFKeYfG+3xobOu5BjOmzknfJK/T3c+f2aiOwT5UcW2dFFF
b1a83ZDb/CeV7X4c9N4o6o5EPJ+CjhPlFeQn040tk6OMiTI2yqQo16FzeE4V
z6YGnQaPMa/Rc6G1uCibIXeaEfP6xvyZuWyEsxy0DOqM22Mz5b69Qy+nW17I
Cl1dYPxZFvSOK+ldiXXEZ+JOS6I2mIBN8cbEW9KoXPPHpvr+sudwp2nyvWa5
4+9Or2UdNkn+S67c3XImx8N2Zxr34Bl+4IV8FLzpYcyh7u42Z6CNblpL0uux
5qGb59xi+SLLW10j+8EV+c0fol4c/blR7kD+8AQvHptpGvf6W/u8W0zvuVRv
KE+EPO6J/s88b1GU29r7me5BvGHcW1H+eU9FMWSB89EF4JHlzb2f+z95+BLv
Nw98Mx/wC+a/apmTO7WCN1FeTCWLp4Ofuz0GHxti/DZiH3lKKpk+E+1H4tvS
KG32tzb7ILaPrpDtNPw2ykTGXd+YyAb7O48nVhAzwIr2d8ADmWTJ3JsS5TY1
9s2VRcUO8o2Z/j7JtomNnmb9nuE+vodMzvTcUfaZvbneLj/NfZdOZAM/5C5+
X9pvO4IG7+q8F5DnYV/ck5BzV9NmP3Kt240b61PN4a6GLJssD3C6g+MnuQGx
h5i6NZEckGF/88wbDm/AvCty1+3nvfh2WkV3+J9WJDvWL7AetpoO73OL7e+1
lscZ1jm6Bz+5Zy0qHr0nQpO74nzTWmp6baYPj1tMv6/pnWk7W2q762S9vm0b
XGLbI3aB2+A3eVV7vjzX37FRYgc2Sk7Cuxr5zSF/w44fMB+v2mZmu93iM62M
ct+P7BI7xZ7v9zf86xfu97R9oMd7TJtvfWxHyGtWpjeF2zLts9n7djCfs31u
9nk40fsL9+pNoZfWXG9QrRXJgO8P+awP+Tyb/G6zJ1X8etSybc+xoH+7z9+O
E/ckR3Fikc/X4HsZ9zNyw3OMz43R7wnOB/1HS8J88gRy4D5uv+GY86HzRMaf
tq328hzq3m4fch/+yE2gT85I3lLrvJr3GmyW/5eqMvkCPvFmqtxye9S/rQiv
f1cRnoKrL6eye3Ce9xDea3nHIQeF91rzACad6ljAvYS7LHeTt1K9q9bHvi25
4lRzLh+82zbyXEX/dzxbkf2CF/hxXUX48kJFvs8c/P83FeWM3C95R33P7609
/c7MezNvS4ccn3hr/gG3uf/GtyXx7Yao/+z334MVjRHrkf1LxnYwnnvP60Xp
ApqckTvz4YrGD0U9rlrrjlQkR+TJu12L3xV5H2v2WyNy4T8BbJi3sAdsP9hT
k/OUH+JhUW8c5NxXJsoXyBvWVIQPz1QUt+bZp8Fu3p14a7oq+oMT5Vm8eUCL
fLku+ldEGR7lwijn2rfqE2EwWAzGg/XTXd9uG59inya2NbqelSgGU8PLRaYH
thEDiK3tcRcewZX2+M0YfI7z2TaZPrkKfr3AfWjP9znHeL8Gy6LR/adsD9gF
Z77atMf6vMgPG+a/RrB8pM850We+yf3L3B9pnq40HfLTE5y7ljK9q/C+0mw+
55vGTMtsns84y2u5c4y3Tq4y3XFuw+ton2mS5Y68b0uO5i7oYJrH8Bvu423W
NzK/3Dq82Lql3zGVrZFjD/KeyII8Fzngy6t8j/tvqjWjbQcDLYthiXC3j20F
eV1r+fC/HG+L3GV6Wq7Ew7mZ3uhXZ4pDjLXHpb62jeHmtc5yH2m5n+7vfTw2
zHwMt+5Hm48LzeMof6837TrTvcJtzo3exlnO59kOzvY+zEV+vI2D7+S+TZZx
q/m4yPutSvWeeHeuMw3yHtAcYt1yp6E9wGvqzd+1lt0Ey2mw1/P/A2+MvGHB
81if80p/H2y+h1iPl/ncF1pP2At2x/qrPWe/48r2XPEVfAVnyRPIGxbajqb9
yNbafX1Lrrvx1qi/SHW33JZLfif4jkYuMsNvztytj/d9a7rvSMwlRvDf3kbb
4kWWNbjY17HjPb/9o48Vvnev9Fv9bmM3caav6fDGUON7KPEdH8Pvunic/JBc
gfgLnrbHdeJ8wXdYeAZT4BOcabDOwZ6HPRfaI3xeZNqOd6yBb3ji7aXN++P/
oyu6f6+rCNtrzfN2y5/8537rAf7wy47+X68dQ9kDXCH/4x7KWzoyIXZs9X8I
A7yuk9fO93p45L7MmyY8YkPD7Qe8NbbZzrBX/AT75X8J6GCz6I//m8jneQfg
7nyD7e482/M7Pg9n2e7/fXiLnGBbarLN9rONQxdesUlodzZ9fHqkfYL9O5qH
9jvJNNt9f+/d2f+F8d4y2vY03DSP9/j11k+j/aLe8+7KFf8WZbqzr7fe6+1D
2OXATG+tvLl2Nj1k+H+b0S/O
         "]], PolygonBox[CompressedData["
1:eJwtlktsllUQhs//9+t3+RfGqAsDochFMVIvGKCYqmlR1MSotPSqaauk2qil
xYqCaBW0VaKiYEJiYmldYBUqtLbgFRS7ciEaEoMUKl42CpV240ITNT5vXheT
zHtm5pw5882855u3trO6Ix9CeBmJkMsLIeSKQ8gji9DL0hCWFIWwBVmO3h+H
8Cf6Vux12J9lrRV8B8E7sM2Aj4K/yYXwO3qShHAOfYpDYvRp5DznlIBn0I9n
IQwS24PPW+C/2eMY+hH2+A7bS8g4uB0ZwlaTWT+B1KI/lThX5XwF+cwC/4Ot
lP17se8lZiX6b6wVYzvN2ijnnQRPoJcnzmUMSYh/krVK7K8jPxF7MWvT6Cn7
r8H3Pe7UQ24biN+D3oFP+P981a5C92XpLvCd4HJkCfo2/L/Edx1yIPhOf6A/
hn8jZ9+HXMZ+tbFzvZ4zVoBbsFfmXXPV/hCyCXs/sg77UvL9Ff00Z7Rw1lrw
VeS7GXkAPcfaBPoppIy9NiNF+M5hvwXE34r9NvAkOc3Hdjh2rv8io9hvRqZz
PvMm9BuRMmK3IeXoNcTMRK6RajVC/BP4/oLsU7+QQye2Q2oufHeB29AruNNu
7LcQs6rYOYwTu0LfKHLOyn0SfAbfQaQe+zJiruHsVeClqffU3geRH9m7j7Uu
7Feqn9DrC+5V9WQteiPyJvgC4q8mtoE9Z0c+Q2edYI/9kWvYFbtH1Ctj4B/Q
JzPr6in11pnMZ89B6tGbkW/z7sEm9MOZe+lFcBX5PApeDm7Cp4f4I+Ad4ONc
pRv8KXg7eAD/D9XrrA3n3bOnwE3gi/CdC76UuzSD54LnqV+xL058N9WwCPse
1jZFntGR1DVULfUNW9BvYG0q5xrU4fs9Mhx5Zuuw98WuZTNrr8mW+i7aU3ur
x9RrulM7+jH8n0ffiuzPPAOaBZ1RmbjH1GvPYR/CPhDbdwvyfuY76+6vgj9G
/zq277XIg+D57NcbfMaCgntevX87d1qG/W38K4jvwf5B5h5UL14CvgdcrZlG
P4v/VOIeVC9qhiLwmti+mvF3sW0kZmVkThA3HMS+MWeO2oV9tXqK88fIqZP4
jzLnrplpxHckcy7iCHGFOEvcpRqfRJ+IPctf4bIB/fHYXKQeVC9qBjWLi8At
mTlYXNyNDKTuOfVeB3KA2HdYe6HId9RdP4vNreIccY84S9wln8HUnCxuFsfc
n5hDxWXiCHFFX2JuOqr7EV+aWNcMaZYWFswt+ib6NvpG+lbXIQ+hn0s8q+rZ
s4nvqLtq5jX7dyfmatVYtW7LHKuZ+BnfnPgZ/zfwb8B/Pbgq75qr9qUFc7Nm
oBdbf+raiGMGie9mTQ/c58hifPexf2nkN2gvemvi3hGHzSr4DJ0lDsurX1Nz
5cP4vMJ+Q6m5Tz2gXlAPqZfESVWxOVvcrTezRrMJvjdvjhfXnwd/UeSZ1mxr
T+2tmf8kMweIC5Rjq2YBWR+5BqqFZkSzoh5Xr7fF7g1xznjiN1dvr86YRp+N
VOdds0ewP6OZjFyTp9EbM3OHzhhlr4bM3CLOHgZ36A3K+w5dxG/PzAV6s/8S
NyWurd48vX27M/fiheDVqk/qt1ycvFP/BrFnRW+i3saSgrlQObYTvxCfkiLn
uDP2P4X+LbQm23/bHBRl
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0k1Mz3EcwPFfRcXVhYxN5WErG1spK8a42So9d0hUtOnJZJ7jImzGZOui
Jxsi0YOFPLTRmYPNU57jRNTFxebg9T28e38ev79fv+9/WXVzYVNMFEVx/hTE
R1H3vCga5DL+jC+IEqKoh4fUy3nh/CiqFC/iH3o/UY2MxCjKxHa9aXkhX5f3
4Rpu4gaK1POdc0s8LO7nEY61U+7MGO7Vv6tWwV+xQzzFbXrpZop4ARdzEtdy
PtdwprkqcQZ/wxy1bs/oEPc5p0fci3XIQrFaNpfwGntzzfeLP5r/hEl8wHs0
qP82O4NfmA17dspQih79Kvt54p0cjwSsDX29t854hxIU4zIG1M/wWZzGH3kj
HqPT7ku1v+LzfAFd4td81bM70YV2TOOV+j/9dr6EDrVR+QDnIBdV4X7D/xe+
N5eaW6+eKN+Mbd51Ew9hEGnyVj5m7jja7aSav8gn+GS4x3DH4TcS7h9Pwr3p
H+RDyLPfKW8TJ4lnuDLcKybkdeG7hTsPu+IRHudnyPH8p3zYXDMK5Pt4Lxab
q+clag28lE+ZrQ93hV2oxn61N9zCCWZywt1wLs+G98F3/f7wu0QNatFqfpyn
uI73YDeeh2/Kyfa2OmdCvoUP8CRGvVejfiPfk9/mDdiICvkDvTHcxyM8xDn1
ZP0UHHXuCucd4VW8EsvRZGY4fCeM4Eo4m3t5iO/ghXiQU8wnIxWxyHJWDGdz
HKfxalSI08O3tdfFLfgP7BqHjQ==
         "]], 
        LineBox[{2147, 2080, 1905, 2079, 2408, 2591, 1906, 2158, 2414}]},
       "0.9`"],
      Annotation[#, 0.9, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0rtLlWEcwPFHBE2XbjpVkISNVkpWYpktpZ5Tx1PYohKCLkEXsMGlNEXT
LkOKpZMekyAySJd00P4BK2rQHCtKHQ0Uii6fZ/jy/d3f9xzeopbr6WtZIYRp
rOaG8AZV+SHMch4Obguhj0u4l4u5DHV5ISSwB0k02bmgv4tT3Mzn1fchLd/L
9dxv9168iec5IYzxP/7Om3yff2AVW/JH/BAPkME4NrCId+jAe1zyvD7zH+J9
fulZV9SmuFTtCPrVp/gVEkiiVW2N19Fk9ridZ2q75ZN8Qt6sXub9U2oTnMFs
fHee43EuMFeOBrOD8iFsiPPjf2LvMh/iw3gsbrRXaP6Auc9qK3grXsA3vU/8
mz/yL5628xp/xMfsTfBfZPDUzAiG8UL+hJe40twyL2DG/Xme1LvKX9z6ip/i
brWeeEO8yKNcq7fd/k7swFl5TXxv8Tlewm3Uy+9wHZIReYIH4l1Oy3u4E2fc
vsunuYuruc1cu3i/uVtcxEe5HLXiG/o1fJNP8inMiLP1K/ymVPyusCy/GL81
/AeOBF7v
         "]], LineBox[{2028, 2029}], LineBox[{2660, 2665}]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0jtI1WEYx/HXovJW4GJD1+OmYIOGldkFtMYGwUVdVCoS0VQw1EhTcAgr
KysLHNwEdRJEDCWzsssieMnRECEFU5PASf38hy/f5/c8z/897zn/EyuvKayO
CyEMoexICHdxPTGEJD4YH8Ir7sYzZOqfw0ZCCJs4pXfIzmn+J2/hpPkJ3NIf
0y9XjxwOYVz9Giv6/+UnnGk/1fw43shv0We2ae+C2UXkIBeXMGqWzwV4Gd0N
vXop3KX3HN3qIs+nqUc4i0u5R/8d3mNLztO/zZf5Dk/iI5qR7j4POYOvcCJf
43i+ygnc6XPX8d3zP/ED/fIgssyL+S+m9CfxCRNY1vvK05h3ly/8GU/1f8mr
vMBrvMidZl28I8+om9CIP/I3fuE+wzwn3+NKtKk/cDsPmDeg1hl1qEcMHWY1
fB9V2MMZe7scEIfz8p5zsjn4TrnR++ZZnkMM2+Zn+UD0/pz5SG5BMdZREv3+
WLLzO/qf2Hkc3RGt6JGTnJmMo7hp5xjn8w1UqAt4Hgt4gDrP1aMW+4SEXWI=

         "]]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1827, 2549, 2548}], LineBox[CompressedData["
1:eJwVz79LFGAcx/HnJE6vwaDCU4fyILvKUMRchLoSh4IgyKW85ToIrqVrDH8s
/iILcihFrX8haEhuKKq5QaEsyBTtkpNaJGo1ej3Dm/fn+32+z69MsXz9biKE
sIBrDSEcRak+hCzf4TTXpUI4IQdOIKd3nnsOhlBIhnBBvsWX9C/iiPow2u1p
UKfwQK7nJA7Y12Q9jbfq93iHijP+mPuLN9ix/pqL+jVuV5+Mb8EpZHFIv4PP
IokzOI2SPcf4OFLIoC2+y/y/+C/k1JfdewW76k71DR5Q3+QudRN3c54beYiX
sIhP5mruGeYWa1f9K48h9Fv/pdeKXTSrf3IL75uv2rfBmxjHNs7Z90T/u/yU
X5nd4x2e0puXK/IcT6gnMYJRPNbbsjbL990zFv8kr/FL/Sr/Vt92x7Q8Y6ZX
fsirWMEjzFrr039h9pn6OX7oDca/xbfIH523Ln/Dulw28zW+UX1P/mDmi7ws
f47/4AL+A6gTTH8=
         "]]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz70vQ2EYhvFXlNZXtUkrISKxEJX4GI1I22AzMYj4GJBg0ZgIqxBi8gcY
7GIWM0utgqkiqcHke/A7w5Xree73Pu85p3txc3qjJoRQwlt9CJV4CJe4awjh
it9lz4kQnrCPqv1J/mB+5CmexB/ePFPFK/bsO3yqXzbf4wYV+yqGnK1xK7cg
jRSy7vzW+8U4CljWyzhb4jPnHbJ2DJtTnOFm5zn+4T7+4kJjCEXkMSKLy3q4
jns5wUn+iO5B0l1pXtD/4xX7qHkMFd2X6Fvln/Lm6Dm+5nmew22Eb7zQK8tL
9i3U2j/wiRhmZLOIoQUDujnux5E5r3PIRd5136D3H9sn7Cc8yQfRP+s3oQvb
eueydbTZs+jEPyIMObQ=
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNzj9LQmEUwOHTYnUdGiJwdWsz/AiB5tSQtEmUEEGCTopCEI7ibmPQ1meQ
GvoHQUR74HeQkEyzfIaH33nf93C52WrjoL4SEftcpiIeVyOeqHNN092ntvRG
e7xQWo941n9eKTq/aZ9bOvYf1iLaeqhl7hgy5t1OW1t8mEf2jswXeu/8ZZ5Q
4YxTut5m3mrmueaY8s2EE/fHZPzLtnNibprnlJKIX/1hwR8JVTsLu2nzpm44
72hGB7rl/krz7LkrsMuMKee+uwTeAzAy
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1746, 2231, 1747, 2247, 1734, 2077, 1949, 1950, 1756, 1955, 
         1953, 2089, 1736, 2471, 1992, 1820, 1995, 1738, 2093, 1958, 2244, 
         1960, 1743, 2135, 2132, 2130, 2236, 2234, 2288, 1997, 2167, 1999, 
         1759, 1962, 1658, 2252, 1659, 2138, 2292, 2139, 2150, 2148, 1664, 
         2041, 2154, 2153}]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1744, 2134, 1742, 1959, 2243, 1957, 2092, 1737, 1994, 1819, 
         1991, 2470, 1735, 2088, 1952, 1757, 2233, 2420, 2232, 1733, 2663, 
         1732, 2249, 2230, 1745}]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2245, 2246, 2229, 2248, 1731, 2662, 2664}]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048089290210533`*^9, 3.704808939437606*^9}, {
  3.7048089815930223`*^9, 3.7048089945452843`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx0vQVYVc/zP46dIC0S0ilISNcO3c3lgondit2C3Yrdio0NFiAGiiAoIiUd
lytlYzf8z9t7zp7v7uf39/F5fF7u2d3Z2d3ZmdnZudrjZodP7ColJaXVT0rq
v3936fkxf8WuUpI/IEX80QFJ+TVE4ocY19yayfx9SpWXYPyvuKYcY7J9C6p9
C6p9C6p9C6p9C6p9C6iW/AfGHZ3//WnAmOzfjurfjurfjurfjurfjurfjurf
jurfDnZK+I0xSY8rRY8rRY8rRY8rRY8rRY8rRY8rRY8rRQ9bvqHpH07QdCXp
S3An6cP4IcYEfbi8BGOCPgYT9DGYoI/BBH0M1v0P7mrCmOSfN8U/b4p/3hT/
vCn+eVP886b4503xz5vinzdJH4NJ/vlR/POj+OdH8c+P4p8fxT8/in9+FP/8
KP75UfxjsXwrxiQ/gyh+BlH8DKL4GUTxM4jiZxDFzyCKn0EUP4MofgbBzX/V
WzAmyIVQkl6MH2JM0IvLSzAm6GUwQS+DCXoZTNDLYIJeBhP0MpjkbzjF33CK
v+EUf8Mp/oZT/A2n+BtO8Tec4m84xd9wir/hJL1ZESS9GD/EmKAXl5dgTNDL
YIJeBhP0Mpigl8EEvQwm6GUwQW+CgNpvAmq/Caj9JqD2m4DabwJqvwmo/Sag
9puA2m8Ckl4G+/zr8NU/nLheQNIPQmo9C6n1LKTWs5Baz0JqPQup9Syk1rOQ
Ws9Caj0LqfUshMR/37/CmKBfKoZa3zHU+o6h1ncMtb5jqPUdQ63vGGp9x1Dr
O4Za3zHU+ubKX1H9n2SxMktfJsaS7nMx/jf+/JfsfDrCjH8Vmll+eErofSOR
r7INwSy/2iTlWmEs/az8FYWTOCmS4p8yxV9lip/KoP/vc5afQ5XA998HVWy5
McU/Y7a8kaV/GFvOjicLqP0G5PiyfODGf5+XSPiZ98wHdP6dJ21Y3lX9a6+N
kket1H5ncWwUyX+taHK8DCboY/QVgh58PnPnmYCazxh2v3Hr2Rmm/6vP0hfK
0cNiWa7+Lra+DLseLmIsYectjP/x3ypLgq0HsPxl6Utyk7S/X9J+0vRwCf9q
2P4sIil6Zaj5ZvtTY9djd2lJe7OrJbiPPks/N39IMn+DJf0n5QO7/tj1L/IG
7/86PN2G19+/+XrXhtffv/ncxeJ2Sp4y9EjYU4bXE7lfufXWhOfr3/7Mb8L0
EfQw80fMRxY1H5z8NXtF0cPOT2I0RY8OzPqvPd/SfxgGq8O/5jor2Pb0SYx0
yP3ClJPzH0POB9MfKQ+MKazDfl+Ey0msw67fOrz/CMzYK//ov/WMxRrsfqxl
vzel5E0AJZ8DJPyLZ/eDViC1f4Op8zOYLefkEaevcfIohNxfeD++wpig11sZ
/pGrV4zpJ+W7BsXvYZS8siDHy/BPIt8b/t/jZ/RXYj0l+Uroe8djopyRX5L2
2fEw+uS/9d61jRpvA6ZPshxEbH1LSf+2jRhL6M/H45OIhxd4PUn4XY+/l4yn
Go+HlMeOJKbtR6Zcst44/cielI/M+UOe356kPIr1oM5fY5J+vP5LcDkxn0w5
MT5mPZP60TByfBy/brHjARsSM/QT8xPrT/Kb+Z7ATPvE98z8/5Mf7hIcq+xF
8pv2BzD0EPxi7EliPzD9k+dLELn+sf7ErZ8Y8P+PPGtW/sVrUfqDMYkZ+gl5
wWDJd0UYk987Ut87Ut87UvvJkZIvjmR7zHlOtMdgoj4+7+uo8kaMifOGOd+I
9pn1RrTPYEI+4/VYhTHRHy5vxJik34ei34dsn8HkeHyo8fhQ42H1l13s/Mv6
UeMJoMYTQI0ngBpPADWeAIr+YIr+YIr+YIr+YIr+YEpfCybbZ/RLon0GE+0z
mGifwUT7DCbax+XNGBP9icLJ/hhM9Mdgoj8GE/2Jwsn+cHkzxkR/jH5C9Mdg
oj8GE/0xmOiPwUR/uLwZY6I/Rj8l+mMw0R+Dif4YTPTHYKI/XN6MMaFvFUVR
80npG1qUvsNgcj6jqfmk9Gdc3owx0T/Wpx7h84w4bxj9mTw/NKjzT5nSt0yp
88GUPB+wvsi1b8PKY8o+ecf7T//DtlMl48l7Zk/pv0Ced4x8l9hr/PlHjJee
H2Z8Ev5w/HKR4J6sPjLEUMKPUxJ6Et7YSNpbKmk/64+bpHw8i6+6QSXzHwu3
SOTL9onepLwJZe2pw7x+LuF/JTseXZCMuwjzm9CPmPOM1JcsKPlvyvKHs/+H
Svg7WXJ+xdpy8os9z4r8Sf2PkS8Ev1KEJGbWz7/qGSx9u1Qk43/K6gsdg0j9
YfAg9vyux/QQ/LDwJTGjv/0bT73k/E94wd0HsPpAkhWLn7DjHcTSz573Iu6+
gNNHTMj1zJyP/743lsw3FNmR64lZL5L22PXT7s7yi60fa03S206dH/i+JBPP
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
owU1y6emNp7xBpUpU15Kr+Xff15XfjxBbnULyq0OPWli5wMqqydvRotb0HEp
mUSVfj7wR6Uz8/rOFHRvrHZeU5Icjrefqf1+5dwARTAT2ocWxKdif2DBVvXT
N45cZverDCvfUtAn69M9u9+XxfGrN1P21Lh2lwOrnx0eDttrUJle9vG4Wj5f
6oslQx0XZhjA3SUvbz9ybEHp88RDhKle8Fb/lfxpHz4/6pZH3b+fmVKNAjsH
XsqQ1oeVOfWyE52rkGm2YHnf73w+1LLtVxeHpBhA96890JjefL7UPUF7N087
WommPtyX9mqUPtzYtGO39lX6914rkdqzvk6XP+lDVcq+hEa9VjTMbdD19TsC
oX3+YR1Txr768KXL9O5HQqDj6OEhAudW1O6XO23cniC4m1B0WAu1orrbU+Si
0oLgi1rbiPf+fP7TDfnaCu99WtEUjxtzawYFw58RfacfZnBNbevvM0rBkHWz
YMXBUXz+06q9acfPj2lFm8WzPNZ6hQDIbunWbFOIGjcUFvVwGAgps3cY+54q
QtJvFx79M0ANzs65V72stAitu/Cius8JVRBZvFzf8LoIackoT7lZoAoV0ZOm
irOKUb3mTMe9D9VhpnaL2YCv/O+pSv4tQeY76ndrGmjAgfZVjrClHhkMKAnc
ssAM9t9f/mvJ7RakeC5JP7jMF1ZkztnqebcFqRrKfC9q9IWJ+cryCWat6Iha
UFPEp0BwUCzdnmPRin7ZXl99RT4InBMDdqxybETvo0KCwh9bgu/S5T6z/RvR
6nx5m36mVuBulPGr7zA+X2rUSt+X6bteoLlvr7yp36sF89RSpIzfvUALg+U2
X6nSwveppxtTH8+4qgU3y6JG3c7i85ta3Ir6VX1dhPrMjRprmWED1bPKf1T1
4+JdhsE0BSPTleVpaGeyyvWXYywhfqx91WGHdBSx1/C8dK4NmH5X0rqwJB3T
82vRLrv2EelI/n1G30JTe3jxecGUt7vTUbTh3/ikNmcw/TNWReZLMar9en6a
/2o76N8Wv+X+wBIUUXM4aJS1I0xY6GszSVSB29vuM3OucloF2i2wGzM81B4q
Lu5qsM2tQHVTzv1cpuIA2wZ7dy3sqEC2J9ZuLXNzhnujDjTuYfC2kDk/S12c
IVs9ZM/NcXW4vYHaF3d+S0vH/qzHK0eUB59JR4t+thenySJIWfR38d+8dPRq
jdHaxR1uMDfB8VCQeyX+3sw1av4gUTo+P4vGFnaNLU1HPvELj2/udIcU+TGj
+75NR3usZP+YrfMCW/tA2eF389A6M5ely+09IKdfxLvweD6fqdMcl4q+s0tQ
at+ngd2PusOUfS2bc1eUoMr55/5eH+gJ496t2T17awly65DZvbTAC9SmHbTt
TChBLgueTcye5gkqgbE3dBMqcXvvRrzqpfGHG58PFGtHe7R9SkcbtNW3rFri
DWdmHO/40j0DFay50/Spjx+8thUHXRLloZ4Hi752yfWGmJtreh86xOc3Fcdb
PqjfUYJeNb/aYmDL2DcnTrz6cqAEdSKtFU2rfWCS0dn92adKkHx+Ezrm6AdH
Bmh0mXKkBH1B1Un3O33gZZH9cZ2Llbg9uUrfrFxZLv4nANSelL0p7pOBwrxq
iwd/9YO/h2vlDwzMQLUOR9TWbguE5U+iOnV/5aG1DvcfPwjxhwU2NvHXr/D5
TU/cGlqnea4ElWULJ3557Afv1222Hnq5BC34mHN8ymd/8IjKdp5/k6FnztIu
CpcDwaTMU2VSSgmac22PicyOALCdvvbb/SeVuL3x5/ZPOaPFxT8FQ9L1b9G2
ahno2OMfB57MCYJZG2e/kjXIQDtMhcf0eofCVf18l0nS+WiW1Dld7Yog0Fks
fKN5j893+niy/u5V6Qw9p5KtPQRBcKPHT9PHd0rQSeHOVYsmB0NRivKg4OwS
FBo6UdVZLhS+PTzy7dz9EuTVo+jAHdUQWJT43eqHuBK3N6Nuh++fl/VocfWc
yrlVQbDE98jcrU31aOW5+xt+twQBXG9+dGAcnx91iknNvtgoMfp4oLPFQzEI
9trfLUwaK0Yj3GZlrzoUDHP3Vu55N0OM9pj1VT2kFwo9a23v/RwvRm+kPKcr
vwqGMAXp/XZmGVj/eesntK41ykAzz/x9u29RKKx6H5F3wjIDRfS+9Bvlh8El
6a6Ky9Xz0bEJZffnXQmF9y+uBAue8PlSc9++vdQ1twSdvmbV89nsUMjvne5k
lF+CTm3VPdjxPhT2f3IumlVYgnQu+u75WRAGISszbK89LUHDu362/xUWBqM2
31mr8a0St9djUuZ7UZcG9NH9SJMPYz+H/lK5X9OtAZXuMNRcej8UXA7tM9m8
mM+vejPw/PSPs8Uo89jM8hujQuHPldyN2ovEqKfYJ+LJn1AolV6uOTZBjKb1
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
qZY2N922QuqyXkJoZQ5abXdKbMzYAv8AR+WoPA==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVU1IlFEUfdk3fvO+WaRtolZKbnNRhBP2I5pB0LiwhQ6EQQlBgdWmwGpr
2xpLF5WKGYWT/eooRX8wi2IaN0lk2Q+1KIOCAp2giM7pnmjx5p5353733Xve
vfdV7znY2lXmnLuHtRRrd+BcB9Y48KHQuXng5si5Xsi6mHOV0JfwwXpgD/wc
HwXAo5BHYF+CXTvs9wIXgauA9wO/Al4L3AH8EHgZ8FY4SJQ79xu4HfpJ6GPA
/ZAb4HMV/A8B1wPXAM8BtwJ3Ai8C/8A65uxM7g8CpyPTH4W/S5CbYV8L/SPg
7cAtwFPMCbgJ+BpwI3ASeBo4BZwG/gj8ST5H4841IL8s5EvoZgOzSceNi3qc
NeqMg5OQu2LGC2Nj3i9l/7jM7MlbDvIJ1kSZ6YnJfxY/L+SnLW66fZDHQ/O5
LIHlze5EaGdmZd+K/RjO+on/dwCPAH8D3go8CPzFm49RxbYF+j7o30O/LjJ+
D0C3ESsD/Bb6Bchu2HY54+aVcskj3tdLLb4u8UWu5sUb7+g8VgaL9fUUukJg
/F+FzAZ2L2cgV0JWYN0n/5CNWA8C2/OO6O+jfJKvuHwOQHchsDrh/ZTE5TB0
a6BbjXUxsD3r5zTkqcD4fyJb+qMP2jKOs4HFxDrnPe+FbOe5gcVVx7sLbJ/U
nfPuySdz4v88u1Oc8HueyfwY9wrc3x3IqoTxRX67lONncUjZFjPMWmY90X+3
7Im3RWZ3ODTdovT8riQ/7JV58UbumQf5vYdvz0HeBBEe/ReV213e8Nb/495q
di74nwdjZC6N3mybIS97y4U5JeSHfpeQF+DbzmYJz2C98H8vG/p4o/ph7AuK
2YsvcsU58UA1QPlI9UPuc9Inta9T3UxIPymbpOrtmnBa90ouOA+K8sn6nFZt
V0eGO0PLeVY8zKqXiSsii2d3aLPkoc4tj2y+pKG/jn3RWX1QPsPqEZ5hvTjr
Z/bkRiR+S/zzHjiTJhUze/G06payV/V5X/wwfs7jjGxS+q9FtTql2JqkJ0/M
+6lsWlQfKdV6QTzUqaaTkleFa7VnnY9JX6teuyTM3hxS3333pk+Bk6/e9M2h
9eVF2XPGj8iefoelH5EN9TXSs1c5zwbU++zXs8IrtSd+542rTaH93y8934Qx
+S+IB+b7y1ud7AzN7oJm02rhGskB4Uqdxd7uUwzU8e0a1Fl8M/uk/+AthobQ
5j9nT5lmUU7zf0b10aO6yarvK0N7k6+oZ9k/7KljsutWffFb1h395eWTc5i9
mNF/tOd7wXc7q/fgrmxoy54el/1t7Yn/vVWssbxizsiWff7X3tue8Z5S3TL3
CvV1pXzllDu/Y81zJjR5mwmF0HLskP6KfC4PTZfXuUXxw3ziodlytsUVq1f8
zI0z6Q8FuSb9
         "]], PolygonBox[CompressedData["
1:eJwtk9uLjWEUxlezv73f/X27zORamfkTkKQZYxp7K2VutouZXTKFUqMcbrjh
j0C4UCiEmUFjT2OiMKUoh0vJYZxuEMKFkVN+T4+L52s937PW+67T27N1d3NX
R0T0gwzsTBHPMZ6CZUXEjmpEif/zfNblEZ38u43WKEfM4PsXXqtEnMCnCu+G
P0TfgD4LvwueEDsBOolfjv4MfQj9BtoQOAc/A76gT+U+axR+Fbu7FnEd3gZd
+K4BR9AOgXn0EfK71+Ech7EnwEDJ/6QpRrHj5Lik5hjFHgZ9aAPgOPZR8Brt
D/kVFddUhy9Gnw7ncB7egJ/G9yT4mDtGscfAWrQ3ue1V1HcRPsx53+ELYB+8
BWaxZ0CGdhPeLLvnK+CT8NVl5/SWs+7AN8N/wFvoczoT/gG+vvjfQ/gjeA+8
QcyLkmtQLdO5e6ka2tgX8F+J/wL9adGf7cmxD8BS/Pcmn/0O1OFjIMP/MWce
QNufnItqUm2j8DnsW2AR/Bd3XMLuJ2YK7QroLbtnn9E+gVOZa1StX+FnM/vI
Vzun3dOOjCXvkHZJd3ShteGD8Mvw37nv1N3ayS3JM9FsdEc9eae0W7pjY3KN
qlU7ui15RpqVduoVvi9z74Z6pF6pB+rFe7AH/hN9MnONzeQZapbXwAi8UdhX
M9Vs9Ub0VjTzClq5sK9qUC19uXurGWvWB5Pfinqu3vcmz0o7PV51T9VbvZlv
xN5Pfpua+aDeQ+Fd045oVzYl90o5K/d/ptWPLg==
         "]]}]}, 
     {RGBColor[0.3819315051035968, 0.4379311998766634, 0.5945514474790358], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
1J/3nHtZx/ut/1qqs9hv+D+U+p/oP575gk0=
         "]], PolygonBox[CompressedData["

1:eJwtlFtoz2EYx9//f4ff7/0t7SBMZCNxQ4oJYU7bTCFtkx3ktEkOORYpRCIu
KDQ5jWwXhgtzmqLNDW5wRS4w409sDitkxTCfb4+Lb32/7/O8z/u8z/s879AV
G0rWx51zNSAZbAucK4059wZURM7lpjnXkOrcaTAAnsvafWz5oBrfs+iT8C1J
zp2DfwhZJ2CcYCu9cxtABH/JWoT/WlCI/xMwDv9N6Lnw56AIvR//u/A8sA8+
n3hd7B1D/Cz4ZPwHYDuh/NCF6Fx4I+jCfx56BPwK+Iaeis6GnwGv0YtBN7EW
ELOd/e3eYslnCr7vuedT+ARy/gmfztogdD14i+9S9MSY1SCDfEvRo+DN4Df2
y8TsjluOl+B/8UlwXjsowF6nHLClpDi3DttwfGrxfwteoQsjq41qspHYs9Gf
ki0n5bY2sr0J9MdUg/gsfP7AC72d9Z21mfDyyGqrN91KvIOsPYBPAgfgNYG9
5SMwFN8brC0n1j16oQleydpP9AvsHcSvZi2WbG8yhL0VYBy2VpCK7xHsRfA2
fMajcwJrLO3R3gS6H/n1AZu4e15kvo/Z8474q1hLSbIaLoKfZE9ZzHKowjc9
srP0BkuIlRJZ7ZVDObrGW+/9Yv9edDy0t87Se6O9kGw9qd4sQ49mbxP4g85C
l2FbCBrRXZHV4xi5XcDWSryLqhVoCa0n1ZvZYBe8GdRhGwhuhjYzmh3FvEC8
q2AZfDNv2ELsL5HVWmfoLJ258P95mZx3nhh949Yj9fAc4t10ticbvj20Wsqn
Df876AbOHgxuw3d5u9tIsBOeH1huq4nfn/1fvPW2ZqgA2xRvsz8De3qa9YDO
Us7X4L2RzXoG9hj2U956T2+kt9KddDf1fKi3TzNf9YB6QW+gt9AdXsET3mZT
MzYNXRnY7N8CQWQ1UC1Un+veclJuVdh3YBsbWe/qT1mD7vE2+5rJEvTDwGZB
PTUL20r0tJjNwDD2fiZWJ3wO8Xvh8wOrld74O/7H9Ydgm4euhT+jpvG49dB6
vWVgs6Q/K5N4E0L769Tj6nXVWLXWH/kN22Fvva4cDsF3BnaXDpDubcY0azqz
B37U21+kmdJs7fFWG/Xsbnj/wP4O/WlV6LPe7qI/Rn9Nsd4zyXJW7jMC6w31
6I/Q7qS76Y8pJv+iwHpbPdQd2gxplhRjNr6dofW6/vgO+Fdvf6/+3Ln4/gMY
ysjC
         "]]}]}, 
     {RGBColor[0.5582191751726613, 0.49988533312777234`, 0.4909190791317263], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

         "]], PolygonBox[CompressedData["
1:eJwllVlsVVUUhnfvOffec04NDWmtQhQsodTogyVRWirBSCI0UMsQn2hRHNqC
mrYIJgy2VC0iRn0whknFaFTCA9EHbaWiD2piMCYOCBqVMtg6RA0qUByo+P35
H1byr73+tfY+azpVd3Ut68yFEPqQGOlPQ6gBXI1sAd+XhdDDeSP6/eCKJITa
KIRJSB/4ZDGEEfBRgtSij8DZlw+hjbNO/Dcn5q5HpsH9BDlbEsJE+F3YnoEz
i9jt3PF3IYRNnF2GrRL5Hu5zxJtJvP/Qt6A/lvptt8A/Dn8P9lnYSznrxvYS
/g3cVY4cg59DPwSvE/04eBB+O/z1yCHso+j7wdXEL8e+lRjXEOta5HHwbmRe
7ByME+cLOONwn0Uvwf9bzhrAB+AUifUq9jncVYGcwF6P3sb3Po3MBn/MWUfe
b9BbDnK2FO4y5F3wO8gScBnx1nJ3JfyDxN8Jfxj+9MR4B3IM/SJSxhvm4fMD
tk34XIHvldy3ETyG/WjeOT2B/U1kEdwm5C3wd0XXQhxxBxLbJhDjAfzvQe4m
1jrO2sB1iWvzAm/K8H2Ys2mxc6BcpEXb1APqhc9VI/yb8f8d3At/KvxaOF+j
7yPeTZFz2o/vrsy5Us2fB6/DXhY5h8rlVXC+Cq6Zaje5NIQh4gwgl4Or4ezK
uwdeBj/EfVNi39kDPsDZ4sg5HgL/RoyP8o6hWHPhfBO5RqpV4OxIcI5LwLfD
/0e54WxF5p5T7z2Cz5/EW4nP+7F7SL2kHlWv6mwi/FJkPvoQ+iXgS5Gl6B+g
V2buKfWWZmoh/vWcDWNr5axO84f9VM49Paz3cfYG9pnAi/CvSzyL6kH1omZG
s6McK9fKuXL/Oj7j8EvwvzE4Rg7cDOfOnL95Cr63Fc2tQjbDH0F2xq6patuM
/bXYOVauz6d+y170v1L7yFc90gdeXvSsaMdo10wip4MFf5O+bSy1bw0xzoF/
5j0Par+g96h3eeOv2DvQF4I/zDzL6olf8K/InEvluBzcmHoXqYcXgFtT7wLN
VAt4OzIH/hr0f3lHFz4F4vWid4LLiflKwW/UWzck3i0D2LvBGxPPunaadtsi
4o1GnpGT2N5LPNsz4H9JjGpifha75tPBbyeejcn4D4KzzL2hmqTgDuK1Eyvm
bHXqmdfsq8fV64eJWZfzzP8BXpB5l+qbGsHLM3+bdlgL+HqkJXjn3gC+mTf3
R54JzcYZ5NHIM3AB+9yie1s7Q7vjSd5Qq35Dnkq907XbL/CGVuzz0bdG3mna
bdoh2iW641zinabdJs5Y4m/Wt+vOs+BVqb/1NPGqiDW11LOtGqgW+icot8px
E9wVie/WjjiMbU/qf9U2zUPBO1C7UD07Cr4jc201wyvBqxP3Wj0x7gW3p/4X
KOfK/eLEb9E/T/++bnyeCO6RNeAjBfsWsK/Cvi31v2MJnFPYZmSeXdW8JvOZ
bJ9qJjLvbO1u/cNe1O5LnVvVaKTgmIqtGqvWbUX7qgaqhXpKvaUZPIM+O/Ns
aGc0gJsy7yrNzK3gHxPvcs3UT4lnSrOlme8F/w+W9/56
         "]], 
        PolygonBox[{{2275, 2274, 2160, 182, 1813}, {2273, 534, 2161, 2274, 
         2275}}]}]}, 
     {RGBColor[0.7345068452417258, 0.5618394663788813, 0.3872867107844168], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
zehx/8XcJ1bxfx/0C9fZn/G36ls5Va35DsSSjq4=
         "]], 
        PolygonBox[CompressedData["
1:eJwllltsVlUQhU//v3/PObvFB2nRxEAkXqgaa1VEqDcSDdViqRdKMPZCq6IY
SwWM0YLBB6KiPvhgMCCEVIJB4gWKRI0YEwNewN4x0YhaRAMFoZC2FBTUb2U9
TM6sPWvP3mf2zOw9ubn1gcWZKIrWIPlIfcKXgZ/R69DnxVH0RjaKdmDMhigq
S6PoW3BFLoo+wHYf8jp4K/az2CqZM5/5k5BZ6Dcw9j32u+B/DPduZDW4Hf4Q
tmVwLsh6zQh9mDW64F4LPg5eBr8d+xD8OdhawBvAB8G3gK/Hxz7wTOZ0YBtg
bAP61rwo+hv8DD5+ydh/P/gqZAX8qcg6bGfgH4C/Ef4otmbkLWxf4/8ibD2p
uW3M70Zfy9h18MuRTXDHwD+hl2Evwt9UOF3wZzP2Gfb7E889zO+Vgsux78V+
G/Zt4D3ISmybGQvYHgevRe9n/VJ8/4P8DreasRF81WF/E/0L7OOwTWNOD7gG
zi5sq+A8n/E/npAe2/d5+E3wGxgb5V8XIquw/cv8MvQO7Bn9G/Zi5pcg5ehF
sf/3mwLOtJB58LNwn8XnUew9jI8D98EfQl8P/2r4WeyPYr8d/hD+i+AsQe+G
U8T/HoJzTmcF/xr0F7B3Yn8C+THyGovQ/0CKwZeA/0wdQ8VSc9Yw/9PEsRHn
JL6P6IzgloAPo78LZxbc3YyNR78Mmcl++sBTgvekvWlP2ls1eC7/MhE5EjvG
irVy+GFwAH8OvgkfCfqVwb7mKOeCz0xnpxxYCL9NMcw6pgPgT5DKnM8wj7V6
4a/Oec168BZwFbgXH5cH14xqRzV4PnFOKjc7wU2xc1C5qByfgb0XOcbeGpAe
9LeDz1pnuB69I9jWCN6B3orE6PWMtaAXMOdl8EtIF3gbUp8zZzF6e3DtTyJe
g+x3JHasVUOqpcHYta+aUG10gk/nuaZV21+BH8q5ppPUa2rthLEliiXrN2Wd
o8rVp4NtjyA70QuRXfk+U52t9qC96MyPqtekzqUVyD70Ps70JP5OIfNSi3Tl
rHJ3e3AsVIOqxY8S9wLNqYU7nDhXVYOqRfUk9aY25u9VfjLn4oxj1o09h/2V
nM+0B/whMl9z4dejT4k9Vz1vKdyd+GgGt4IHwD+wp4mRe5h6mWpata2ekA/3
iuDcUA4rl5Vzyr3fGLsZfRE+Yri3MvZOcA9UL9TYk9hWJu7tj7HnFxPHSLFS
zap2d6tGMq7Z72LngHJB/6R/+4uxQdU2nPGJ19BaW/Axiq8KZH/WZ6yz/hKZ
m3PPLsC2LjhflY/qLe+DH0Q/zvyq4DtGd416ei324di9VT1Nve1A7FgdQu7R
+cbu7cr/wtg9Sb1Je9Rel4MnZB1jxVoccbUH7aUmcSzUcyZja0xd+7rDFqRe
Q2u1IL/CvTT2vytGx2KPyaYab0Xfn7j3Kef70adrj1nHQLF4LXGvVM68in4w
dq9VzlfBzQvuxXfC3xzcY9RrlPNF6JuQO7BtB/+n/en8sZ8AV6OfTn0WpYyN
oN8bbFMOKhd1h+ou1Z6WsvY0cCXcAcYqgtfU2upxafAdprtMd2I29R2iu0Rn
/By24uDeWoGPC4NF+h7GJqCXBOvqaept04NzVWtq7UbkXL57jHqN7kTdjXoj
jBGf5al7v2riFLUxBn4v3zFQLPTm0NtDd2oNcxuCa60W/3XBbwy9NfRmqYwd
E8VGPs6gzw7OPcVQsdQbQm8JvWnOJvYhX9rjguA3h94eunOfghsFn4XuUN2l
M4JjqZxWbt+Yuler56v3/w95pEBK
         "]]}]}, 
     {RGBColor[0.9017243634681774, 0.6243109086704434, 0.2953455267513498], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
sdYu/P8BTjdYEQ==
         "]], PolygonBox[CompressedData["
1:eJwtll1olmUYx+/XZ77Px1LrqKytsmCxYZuZLLEJaTSVjGkxJcze+Sp20gdt
J4qlZytmYZRWOCs7yIOYRglJYaYVOaW5NSOpyKS2uQ816QM309nvz38HF+/1
f66P+76vz3dG8blHn50UQngVKoHeTkN4AGZZLoS34GdBHfB35pGXhjAP/Ct4
HngKeC74R3AtuBTcDl4JHsfH2iyEe8FHwDORx8iPJSF8Dp4FdcIvgoa4wJUo
hAx+DvqdyGrQT9CvBXeDZ4NT8D3gT8AV4MngavAH4NvBEbiY+ezTfBvi21p8
HuK3FbwOvhsqcFYT1AP/T8xZnD93cgi7sc3z7TFwI9QN3oX/+hK/SW97B/2X
4f9C/ibyE+h/Bb4P6oJ/DZ056C8Eb4N/A1oC/zvf5me+s+5ew7dGfN2N/Ch3
GYYuIl+e2PcO7lMGP4ZOBfgAeBB5G/p12B7F33TwEXT2Kj/QYfjdyJciK4Df
g+/F/l3yepwzQ+KcKrcXlWPsR8C7SnyHhej+gd4x5NV8uzQRU8X2Dr4tQv4x
Nn3wTdxnP/xZZKdUD+hfnqgR1Uol3xrQ74fvyTkmo/BFzrvGWat40xTu8wh4
ADwGxeCfwVvRfQX6RbnOfFYH8s2KBTp7sD2Ir/JSx0ix2oz+CfRnQ59xXiXy
PPKN4Okl9jmUOSfKzQ/gKvBH2D+E72+hD/Ffj/wMfBE6iWwN+GrkO08D96ru
CWU7Z/6G/Td824+/Kuhr+K2pY6ccKVfb0TmA7afQzalrWrW9APl6zivF5nHe
MwKVgX9Cpw37Lfgfjf0mvW0L1A1/U+bcq+bOKM6Z36KcKXd1mWtNMVfs1QPq
BfX0FfhBfOyEv5VvA/CLY+dWPX6JuzwBrs25Z3M6G3/TuMsYb35RZyWOzaGJ
3lJNqjbzynHsnCl3eoPeMhWd8cgxVCx1ps5uRz4M34XNpsgxV+zvAg8Efzue
esZo1qzAZgOyl6CAbAHUoXhDM+DriF8V/JPYDMOvhFLwNqgiss/mxDFWrFVD
qqUlibFycJ1qC5of+ZtkvbxvPbgAvh78N/ZlkXWk25K4t3SGznoQeWvknlJv
KSaKjWrgFnAB+g/+eagP/c7Mub4N//2JZ6BmoXSaUteYak012pi6B9QLmmGa
ZYqBYnEN+9bYNaxa1kz7F748de1N5f1l8DvQnxl55tbDV6IzGPymC4l7UL04
Cq1G//3MudKM3YvuBc3x4J56HdkN6Dfh6xx0Erws9SzTzDqP4orYs049eVWz
PnasdQfdpTx2rvRNvdCMj5T39qM/wlmbMt9dNfgC/D709+Qc4xrNstizRjth
TPMk8WzRHZfCD8eOrWqiIfVM1GzUGS34ezjx3VWjqtWDqXNdDf4Cvoj9/Tnv
pAj8VOze1U4qAfek7k3FcGfiHaVdtRj50+g+E5vXjsyjezi1b8XsS/gW5A05
79QkdQ2rljVj/sTPxti1r5mbpZ5pmm3q0VXIlseePdoBl7H9PnPutMN64AuJ
a0M1fAr+PLbnct4RCtJ3qXejdlpX6h2uXa47NSs3sXe1Ztw49ttTz3rtNO02
7UztTs2Us9p1sXeRcjSq+yTetTci35A6p8qtdup43j2gXtAOGFStxJ416vEm
ZH2xd7F6vC3xfwj9l1BO1iBbHXv36j/FJPw3ZN5t2knaTf8DFRcmSw==
         "]]}]}, 
     {RGBColor[0.9298853331277723, 0.6947133328194308, 0.3826445326960942], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFWH1sV+UVvr/+fvfe916ySflw0g9xmyFCrYji1rmtKKsp/VgUCgwMVmVF
SwVNlNIZKQjLlG+LE5HotjpNzGTWRRs/4ndEAho1aMymYGJCDGrDFAkK1ZU9
T57H+MfNeX/nnve855z3fDz39+PFN825sSyKou2FKCqC7sCP+/D8COutpSja
gmcU3p1Io+hC8N/Pomgpfk/Auh8yo/G+ERvPwvopvKsA/2nQW/IoasG7v2F9
CrQBz0rIRNCzBeRIEkUz8O4A9raBRnjuxvpUiKJ20KvwNIHdBno2zpsS6cwK
n3s/5C+Dzgcy2Uibaech6J2L95Nx/p44il7DMxr8KvA3gJ6GpyOXTdeBTsT+
r8HrAl2B3znkV4I+C9oLnRPx7u+pdNSlOocxOhbJN/rYDzpYkP3TCvKfdq6C
L5ugZylkYvxOEsmvjRSzfUXpJz/G04x3F+B5D881keJE3lbQMujczriksqvR
e58rKFb1kHkEdjeD3ohzz8W+vXjm4Xc/bLg9Fm9qpnMHoOfXkP8FeH8Gbxno
DXjegfwn4E/HGSchMx52jcPTgz2dJflCGfI/B+99rF/A/i7wnwd9tEx3+gjs
Oh/7h/F+WaZ9Xd47PZV+njNUlO4HIT8jl9+7QOeXdB7lR+DPNsj8LpW/9IW5
8TFsuBr0V5CvHhVFb2M9CbJLcuXa46DtkLkqkW8fJdp3BvitWM/C8wz0Vmay
h3ZNwLtayG4E73TQDO8vxrux9pdyCxLFlvGswXnvgvfXoLunLO9iMvOOcQfv
Y7y7GXv3QvcE8DoLyuEM/GHw23HWkVSxuALrg5lq70PQ5kQ6DkL+FuytjJVb
jeCvBv8D8JuwXuP1mEQ29uJ3C9bPF7X/zEwy96aqYdbyAdD1sKkCOu8AvYt8
nNsHOhu/j2LdBroDv2ewxkDr8fsQ1peAXur6ZR3TnvJE5x4G7YItl+finYiU
J0/GqjX6MpSoDm7muQXVF+U+Bb8bdHEu35vsJ3OEdcc8GRV019Wp7on3tYk1
l+teqkBrctVRba4z1/hcxqLT68pE/YDnbsR6EfTvj5Qr8517/wqy7SeZ6oT1
cg/otZnkf4j3vfQTvq0GrcqUU9WgA9i3Feuagnzn3Q9B5wns2cj+lirG9aw9
8M+JtZcxfBW6evD7MGTmgbelqB44At7/Yu35Waqe1x1UM6yd83LJ88zpkeyj
nS2gj+U651LQbx1nxns4SP9s6DsG2V9ivRP0aFB8fg7+P4P6/p1Y/yWoJzdj
fS/9hvz6MuXaZOc8ezJzmPzTbANj9nCQ/oeCei372zrYMRwrtqznLvfkasjM
TNXnhjLJnMRTV1IM6hw39jfmAGt7M/y5CPpXl4mGktbsvyti+bCoqNpmrX4V
K+c5M/4dJHd10DkXuA9zdp2ynY+7t8wFPeH+wz50bq5e+w/3HPbT2wr6TX51
rh7fYD1fe05xXtGG4z6vDL8Llpvj++K98b6PeoaOuHZYQ4wL4/ObVPvqLUM9
nI+8Y8bpkGP1mO+Ud7uwqL7KPDngnvBBphxjvbOGec9tnu+rcvW023L1vDEl
5fjcomSYn/szzdmzQMtLekd+hfOffe+pXDOtB7TSM4uza0eqOmWv2lWmWcJZ
x9ypLao2mVuj3UPnF5XrtJ/1RCxCO/mOZ7HGx4N3pedjd67YD+bqoZW2hznI
XKRNCz3DKc8ammf7B733etDLYd8n4H+Wqm7oJ2U4hzmfmIc8v8L1Xuk1z+qO
VdfEMvQxKWlGHvd8Zq7UGW+w9zycqj8OBGEP1hWx2d2wYxL2/DdRXndbJ+9h
o+/rilz3yP7NOkhcC7/PlRvEUHMynf+fTDlS55wfW1J8GVvGb6FjyNgsNP+J
oDl/Sab91MOZz5zifsq0egaxhxO/8D6o59ug3vhNUNy2W/8DQXV7P+gC0HEl
Yau+gmqXMZyWqud8AZkpueqXs2swVp8d8qwZ9Lxh7hxxb+c8/2Ose5rh3ssa
Yb1ujlWzr/Ousf4mlexayy/h3I81g3oS4QBiEa4pwzwmXec1ZfdZ/otc61rY
+QfjTOLNT/E8g/Wtni11rjvOut2xcCb1EI9O9Kwin/P03Vw2lwflAvWcDpk7
UsWKPZt4k/lNLDnTs5sznLh4j/XvNk7mmnnHNc9h/2Z/Zw9fHzRr5oIuD4rj
siBsSCxIezij+Zu2EyuNN24kBqg0DthgLE6sUmU+15Qfaz20Z5zXtJ19c52x
zVjjG/IS90HO3j7PdfqbGEuvShQ31gv3jbHOYeOTw+6RDcbk3faRvnI2ZK7n
Tn8vdBi/Pene8p7xOmt2nvHSbOPHftdzuc/tNW7tN3atNF6i76P9nfBOLtly
20mZKmMU4hrmG/OK9dRq7FqRCTfcg73bwOtL5DexU4uxI+9zt+90qnER8dFS
Y+zY3xPstewbvdbBuC3P1DduyBRL8im31nlPn2hXj23j/OX+9e5t7HHsOcQV
O/3ddKHjxtl5n/mMe60xNedih/OINuz0Nyn3Mi/oC99NMg6sSuX3Ls+LFe6F
rIFezxH69WIuDP1SLtxKPnvWmcaNxI+Pui9/15M5m2kP/el1TKak6jF/Copx
szEq76XFa95ho++X9zTLOTDLfK4b/Q2y2vxWr+kb/X+w8H18GRf2qHZ/y2zy
dw37Fe+lw7aR127+Nt8F499kO5m3PKPJtq1yzvQaL21Ovvd1m/OA8eiznj7z
uV5jPQedM5vNJ5beZBto1xL7ssjvyGdPW+L63GKcSPvZ1y8ynmSefGVctNz+
E5NzJvBbm3PhmqDan5oK17FuOaN+ENT3F/ublHOKOcA904yNa3yPd+Ler/Qs
e8LYdsD/ORAHEncyV+cE5XGbZc+2zu/wKHtKvdfEWqQj5jNXhnwmsdOA93d6
tvUbbwzati8TydW4Fz1nTPJ5UA/d7++5Df7u+2kmnEC8cCzR7NwD2VeD5vhu
0JeD8NgrQfV7u+faAseS57cGzcrfBs3HEX9r7A3CAfuMH+/yLHop0928nOk+
O3yn3FPwN8aAdU9xrBhTYgzeK2uM/ZOyZZa/zDi4wf3guGvwTf839FbQrBz2
NwDrn32A34XEpMQVPPN4opx4I0hX7HnRYNtW2oaTvt//A/BJQqI=
         "]], 
        PolygonBox[CompressedData["
1:eJwllXto11UYxs+23/Y93yPh7Kqba1pRadkQu9AN04hKK20XK1GTRTUvM1C3
dVEjA83MaeasyCIr6I9ICCKi1E0t2+wG2oXKIAhbZTVLwjWH9nl8/njheS/n
Pe85532fM7rxodpFxSGENUgBac1DOAPwbEkIJ2IIP6K3ow8pCuHKLITOFMKS
0hAqWPQevjr0v/EvYG0t+AbkZ/S56BPBa4kZh16PfqwshEPkGMHaNnLswX8r
+tPsVYd0st8RZAV4M/5R4GXRe2mN1raR7yzydRBTDK7C9iW5e9HvQP8AacI/
AxmObwP6BPC9xPSz/3PseRG5i4lvJPdf2C4stU2+xcgTxE5lzRLwN/hPBx9g
/3/A28k3H30e8iH4AWJOgltZcz/4BWwT0VvQB8t8Jp2tHukC10ff5YvkawDP
IX4A3w5ib0HfhH416+ezfgDbZmz7g/fcobtkj6/BDdguBa9GDoMrqP8p8Hes
ORP/3eQ8Ct6E7WJ8y9mzg/uoJ0cfvjbkcPQd6C7+pJ7bwB3EjyF+O7bRxG5B
bir4Tk6Qbx8x48m1EX/IXbNq/xV9Gno1eiT+CvQt4N3kayVfC3IO+y8lprzg
N++Ptsm3FOlS/+B/k/w/4J8E/j1z7t3sUTmEd2RNKbXOI2YVvtmZe2E28ll0
zar9fWQkuDdzr2mPXeT/mJhLWNuOfxB8PBrrjfXWB5GzwbOw/Qu+K/Ms3IN8
Quyd6OvADaoJfSoyi3oeI+cU8Mnou9Eb6C10Jp1NNX/F2m1ID/6bkXeIHa4Z
CJ6REeAuam4u+M319mOSZ0c9PBa8KvmtK5H1mc+ss89BPo+uSbXNQPaAd5Jv
YcE5O3PPlGZLM30wd82q/RlsB8h9Izmri1xjDf5B9Cfx5ejNxH4RvZdq/onz
bcV/FLyXmD9YvwIZBm4ix6PgceToQe9G+pJ7UL14OfdRmftOdDeaWc3uIvJP
Id9K4vcR/2ruWVyHLRDbi+3dUvf8WPS3kK1F3uMIvv8y51aPq9e3kW89/qHI
2+AF2MoK7lH1ajE9VaU3x38Na6uSZ6sb/7ngGnFIkc+0HL0qd29ppirAH0Xf
tThT3Kk31duqx9Xrr0RzxwXkeBm8K5oLhokjcve0ensxtkN6G/Z7nNhjSLX4
LRrrzDp7D/rMEnOguPAR1VNqDtuI/7Jk7hVH1CSfSWdTzG/o3cl7TaCmfnx1
uWdtQPwN/jS69zXjmvWF0W+vmdBsaIY0S5rpX1g/LZmrxHnTVZ/4s9Q9o96p
T+ZG/REN4MZkbhSn3JfMQae4SBxE/N5o7tKMalavS+ZuceL14JHJb6MeqVSv
RfeuevxUr+c+i964OffManZ1Z93g15FrxY2cvzaag8XFsr0BPk/8VOSeOR88
Kflv0582GXw8c2/qjDqrZlCzqD9xp84nji4xJwzV2bC1sz7hfzh5JjQb5ejL
kv8Q/SVr0cuJvypzr65B+tBvj+Zm5TwNPD33Xann1furM3OhenQu/tbkvVay
Zwt4f3Juzdi3mq3MvSiOnYn+fe5e0AxoFjTDmmXdwWuZ/1T9rfqjcnFFcu36
I/RXaKY12+KMycSPyl27evh59Jei/wL96ePRH0yuTX9mE7gu+i3EIeISzYRm
Qxw7gO9/tvsVWA==
         "]]}]}, 
     {RGBColor[0.9580463027873672, 0.7651157569684182, 0.4699435386408385], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV1uMVtUZPf9//vPvs8/QCooVq1zszQbUBpORUsLFIoZiQ7mIJfpSEC1W
BEy0Fi+dGZhB6ACDNWkTUJAZW/oAM60JTQozYxW1ERwoQWY0YeAF8GWKOmLb
BHpZa9Yy87Cz9/nO3t/+ruv79k3L1yxaXU6S5NVSkqSYbw9J8h/M18YkacmS
5AWMidjQV2j91TxJZuB7AjZPxVwGbS/Wv8f4A/4dB+1mzE+D/gzGPeD1TqH1
x+DdVEmS57CejH3bM93BPYfKou/D/Gym898ua/8vsb4I/iszrXl2Au7YjPkT
zNvMh3L+Cfs6MHLo80kQr7/h/gOgvYYxBnfVY9/PQL+S6Nw2y3Ad9ndhfhP7
3yqJPh3zBciwG2d3YYzEGI9RCx6XQG/DuhXjAs7eANobONtXTZJjWN8K2WrA
YxnGBfBZZ714F3Xj92HQH8f+R2lrrO/Geg7GNZlolJP+WJZrpn9IX+X9E/F9
FPs/wr09GI2gH8X8HcoB+W7DvB13tWDsw/nD+L4O8p7HuQMYneCxl34D7QPs
35FK93WW8ydY7wetBeuXC9n3GsRGc1l3fQ76r8BnGWS4ugZ3gdc3ceYe0K5g
TMO+d3Hur4VsSxuPxr4Hsf9azEtLip0N+Hd9rpjoLaRfJZWOoSx/XsaeJqzH
gX475m7sewL0liCf0r+0UU1UTD4D+ncxnynLBveD/78xz7Pef8cdBzD/uKr1
rETrfqyP+x/nmYn+n/AextcfHUvH7UPu2VYW/5uoJ+g/gj1XlIZj91Os2yDb
AtBbMc+vaA/98kP8P4L1EduONmyAfoMYAzh/ELR/gDYik0+ewPdJ0EfAhn2Y
v5TJTyuDfPkpzq3G+gTWBfasqcqWlId3zrdsV0fpsilIxy/0ps232O6M9a1l
0XiGZ6kjY2q+5c8w57jjYCoe/bYL5zPO5THOr4NRsbYzVbwN5RLGCOwfLOn+
2kRyLjD/M+ZJ+58y3jyF9aJc59owL8nF595c/l+eKa5m5uJxVy6dqMsef5Pe
WCjXGfeM+blY1zgPTmN+xL5b5z3Ua31ZPiUW0fbtqew/uyQf3gc+8zCfwFiG
9XliAMZVWJ/L9M019djr+L87Ff3XsOOCTPnL89+AvV7E/Lugb9J5z8ioe+uD
bLkw011zjD+jSsJiYnI/aJ2Y3ysrj4jdpDMP6kyPWHdh7ilr70J8f4CxCvvr
jKFbcNe5iuSjLE8WwrifF+LRYz6DuG8SzvVWhZ33ZeLD/JibKn5eynX3+Fwy
E/sY9w/lyv2HMb8JHSdhTwPWjRXhDjGn2fFyCevRmc4SMyl/9xcyYP+STDqc
Au0HqWrXDZD1Xfy7sZDNaW/yuQXfvaDfWgjT2xxjJ43xlJ8+Zv7RX9w7lLe2
0/mKfH4/aJ9hfbYkn9OnvOcuxkcqv9enovHeHY4bxky393EP+RITWIO+X4j/
nYVik7jKOIxRcj4ZhKW8kzJTv7mO11uMycRmYkCf85g4eoexdHIuejkwmaUD
efE/bcc9tCVloK4PFdr3MObTVeHfKt4TFXusgZTrgUzyEBcCaH9J9X+Ofc0Y
a7Wd2QNsKCuniAltztPPqsKDDzH/lxidKraavYdxUAfac7YvayFr4ljIM7NQ
vM4qFBuMa+J2O+YOjNZEGMkaz/pObCJGvR+EQw+kupv1pctnW3yWeE+Z9zne
2I+wPyBO0u70E310xD5bnQur9zvfn8/lg425aO2us2Mz5doY1xTKSn0Z3+2W
eSPkDRXd3ZUqzhhP03LVu+/lwu5O53uP5aecG5wj1ImYyppHXD2Uyj8DibCD
tp7k2sc9xPUVmWoQa1GIyu01QTbZbtkoJ/1LHsyVC84X9kEl90KMp0HfcTrK
duzpvhJVx0dH8dzmetrhHob86ad5xtVxhXJkbCG9DllHynLG+9lXHnJcsYZT
H+LeokIYsRjz545hxjJrWovvJT4vdU6xF6PN2GMQ/xvKqgs9xk/a+umg+vTl
Gn13pMPxRrvQJuxhV7qn5f9O11niIvnxXsZ1s+OffS0xkPgwkGtNXCQuTDS9
2/6lfPtzYUi7+/B1rr/s18iTmDMAnbfi/B7IOyUVLtPW7NWILZeD4vFDx2S/
eRx2X8x7p9t/g67Xy6vqA/dY/lrnJvN7oevIkkLYeG8hXGUPzf/EGtK5j/5q
cmz/Myg2x0GXyUGxvBPrt3PhwDuYj+TK06OsEWX5ZrKxpNHrOxij4NkfVQOm
Ov7YF611b8T6stzy8+46xxL7/UvWh3atM87QfvXGcMY0Y5uxsrLQ+qeFeo1a
+5FvpuO+mzHCtxPji3KQRry5M6rnmBWFJTwbnK8bLA/7mr50uAaxTrB+UI/H
rQt7OuLIGNf6TvdVNc4/5iVr8knXNfaL7Btrce8mrG/Ev+cLYUu361Gva/rl
XL1ecL/3nm1F3zB+G5w76wvV5vpCdiadby7Kye8rzqm1XvM/6SuMUfXeTzyo
N/by7UMdeY79DrGbOMAaNcN1irEy1CfC57tzvQFewfz1KH2+FlWTz7nXqq8I
+4h7TYV6TvbpzNH1zvFG25/yvJwrZ3bleu/x3fdRUP6edg4Tj7tst1fdl7I/
/TP4Pgj+rxeqZ8yb/4HeGhRPzEv2KRPSYX1mOFaZe8xN4tT4KNv/JijHtroX
mu06SF34bqBPiQ+sw6dcZ5vMl7n7ca79U8DnWBh+a453b/ZoVJ8323j7Rqrz
7EeH3oCV4XxhPeIZvjfolylRvlprf30r6vzNUT3EPGPCFefy236H7rDMZ90f
UGb2JnxTMTbOuS/m+cdy2YRvzdogHG0O0ol+pR0G3bOQV4frKbFuj22+OFcO
TXcPRuzZaPxhH8q7mVO/KFT7niqkx6aKbMG3NN/UzxqbByz/YPB3rjwg/rMe
1QXl78gaxfwKY/7rVcULffi+30p8N2dR/f0jQf03e4NROPvboLidENXvvWUd
+I97rge9129dvvU3B73f+Y5/LMpfq6LqEXUmThJHiRMz/X7ZZXygfxgvjFe+
3YmT9D3f3nyDbyzUExBXWC/4XqUdFkbpSX2nR/XptAV7P/qB9ZCYcjGovvwr
6L110XnEerLF+Hmpqjy/Lde5F11/GGu7jAPEeOIm+wni3FL3HqzHjP9pUX4b
5zheFHXX4qh+9qzPkHeTc+Qq++a1qvCg0Tiw2dhM3CPOb/E3c2WH5WlwPRrC
saowh/ySKFuzdlH23bbzMefWKPPYaT4DloGxwTc/cXsqePwfeoCXLA==
         "]], 
        PolygonBox[CompressedData["
1:eJwtlVlsVVUUhk/vubdnuJogFAlgCziHAkJMKUqwRYxRNJG2UA28CBQEgfLS
OoCmxdDSqkDFRB5QwYKpRhmjOIIaIipVGmPaogGeHF4MQykOqUa/Pz8PK+df
415n7bXWnrBkbXV9JgiCbVAW2pgGwbt858G0gEfmg2BpIXL4/iQItkRBMCoH
xmlaHASdiW0fgt4AX4/sRXSL8Xke2zHEmFUQBCfQl4BXQhn8e8MgWIf+FD4t
6M7BV4Nr8N+M/VVQNfgOZD+gq8Xnc+xLkW0hfik5DnDGZPiT8DdhPwm8ITUu
wv45cE3i2CvhK8CVyH7mvLnY3AW+gE87/kPEm0b8x5AVYLsYeg9cjz6P/33w
XalroFpcxr4P/BWyZ9DdSoxz+J9BtjXrmKfBr+NfHl7JGVyK/RzO7sfmNvAm
6Dr8D/Ivpfg3wD+q/0f2FPjJ1LgOOgz+DFqKbwM2R8HFxOzGN4fscc57GtnV
uh/ObCJeB1QMfwB+OPpG7IeFznE6upmJ72IRNsfgK9F3ZNwDFeBZiWMtQX8c
/QfwdVnncBhcBvWg/x0a4OzW1Lnpn9rAX0Lrcq7RBfzr4B8pcI1XgHdxxozQ
Z+rsycj6sq6RavU98Zvhn8XmPPrx8J+Elkk3FZtTWeewgvirkDURK0K2Brw6
MW6FpqKfC/2V8Z28RrwpUC/8dPgJse9Ad1EM3wI/HxpEPw6+DTykmmXcEydS
28hWdzAR3Wr4isA2a8B/Y3OWf61E9kfkO9JdfYzPOPAI6CA45n/L0L+N/YM5
12ASuBnZvtB3qrtdD98VeoY0S2c4t4ezxiNr57y2yHe9H7qG2K3ISpQ78W5H
Vwv/ALms133ivzv2rOkf98SOoVj3Qz8V+p/17+oZ9Y5mQLPwDfHG6q6gjpxj
KnZV4l4oJd5A5J5R7yjnPLq92C+AH8C/GrwfWggfQMtSz7hmfSf2EfavRK7V
R1AJ/D7OuAd8FNqj3k69W1Qz1a4Sm9OaV+hQ7J2k3aSdpd31BDb5nGdMs6ae
V+/vxj7BdlA9B/8p+j50I5H9S3qH0F8Lfgf9vJx3SAW4R3cOvwr6MPWO0a5R
DrMT7xDtEp3ZCD4fufaaCc1Gc+pd1ckZm9EtJ+ds6JiKfQSqAu9Alkv8z/r3
I9AN8G/Cv1xwZQdq/ybW3QsdUH+n3jXKWbkvT11rzaBmMRN5l+vMZbFrrFpr
xrajmwE1h97JneBubBaF7vHL9Mdx+Ifhy+AvFbrn1Hvq6fbIO1a79hdyuFv7
P/K/aGY1uzti717N7Kuxc1buOlNnz07tq55R76hGqtVZ7GdiexFqCt0Te8Fz
sPlVuwG+HtsNsXtxInQRfj76S1n3nHqvSlRg2QLt4tS9rTdLb9fwvN+yJdCI
vHeIdoneLL1dtdgMZv1GNUSeMc3aF/A3oy9PnIvuUHdZHnmXKWfl3hW71zTD
b4HXRu59/YP+5YXIu0Fvqt7WosS9+L5ioB+K/RbqDv4Bj4Fe4qytemNT56zc
9YYX5T0Tmg3twIXgmtSzqBqoFv/FvkvdcZB4B2gXaEcOgrux2UjsQdRTyO3O
2HehHb4T3Bh5llQT1eaWxLVQj96YOCflpp0xGvs/I7+d2pHalb2Rd6VmULP4
NfyPoXfgMPx/gx+L/Sj4Y6l3tna3dtym2Dkpt23kuivyTGo2NcMn4Ucnrp3e
RL2N36Z+y/VP36XuEfWKativtz32WXrz9Pb9D+AmKm8=
         "]]}]}, 
     {RGBColor[0.9862072724469623, 0.8355181811174057, 0.557242544585583], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
5ujT6c2529Kfc3+jv2mQnP8BJJ0miw==
         "]], PolygonBox[CompressedData["
1:eJwtlltsVlUQhc//t3/PPqdYsbbYS6ISWwpSjbZUolWMyJuJ0fqg9fKAicQK
aSsqCpgA9YK2iC0tCiQGI6JgFBPUxDuN3NQGo9hSSgXREEm8IBCKFxLxWy4f
Jpm11+zZM3tmzzkT721ras1GUdSN5CNL0yhqzURRaS6KOtD/iKPoCgxakGPo
i5Fm+KNIYRJFy1Lb/gV/E1xFYD96RV4UDcNtwOYhbMuweQo8hgyi12KTwfbJ
1NxR8CzwKnxMBJ8B3wXuBVeB7ya4t/D1PPbN6F8Q60r0YfjjkW26wdey53v2
tnFmD9xPrG2FKwGvA3fAVxLbIqQqdsyKvQbcDbcSqUY/wFoBXD74ZvQXOCMP
/XfWpoDHkF34fpuY7iGeas7ogysuZB/cXM7rBO+Ar8Pfg6xtR/+ZPf3YHsHf
Mvie1Hv7wRXg87FZzd5prL0EVxm893FkKHHMir0eWQt3Lnge+lSkF3xW94Ve
jDwWfAe6i4vw14m/vaoZ8XaxVgv3aLDtA8g5sWugWhxBrkefjWTg/sT+K/hr
wJ9G7pFG9Ffx14S/dvyPwsfIaNZ3qLvsCa617nwV+i/EsB3bYvavjZ2Dclmo
OwS/HHy2zliP/h5rKXzC2r7YNVKtBsG16EtZm42vY8h4YrmFtRNwvZwxwlkt
ygluL5KDfwTchH4YScA12G/FfgY+N6Hn4E+hjyF3wh8Aj1NvIwvgf0UWwv2G
nISrjN2Lc4j/A+y7YtdeNWyIfae62xb1FHv7gmulnlJv1cEvz/cd665fD45F
OSv3J/BZDf8u0pE4JsU2ov3wNeBt4LPEMAl9hfqBs4vJfwn5p/RjfQHxs9YK
937iWDvhQ7BP+VZPfKveCH677eDPwK8g8zN+w3rLk5F29D5kCnpj4rts5Iwi
zrou8WyYCR4PLtedg2eBzwNfDR4BTwePAz+j+8nYphhueuJaKWbF/lrss/Sm
L9VecGHWM0SzZAVycc4zQ7NDPa5e11oX+kfIFu7mNvL5GD2LzerIOV1Jrnmx
3/YG7H+Ev1EzJ+s9M4NnjmaP3vgW9FFs+nLuMfXaxsS+9Qb0FvRm9XaV07Ox
c1buqolqo5yVu3rwYfAh9E8yrvFp9DWp32Ynsh7+svB/rxPPMPyQ5mvOPdrM
efXgG7K+kzr0MmQu+mFs/sbX/uDePYO/b2LPGM0azdA3E9dItdIbWgL3OWsL
ss7xu9Q1VW018xep1xO/VdnIVj2kXtIMOog+oJpoVrBnT+o71d2qZ77W/EVK
M56BmoVzgmeLanIf+qTYs1EzW7O7lDPeyfMb0VuZFtz7l7D2D7gheFZr5mn2
DcWeFYuRC8WlngXzwTvxVQS/OXKNZ8BfrvjRr2LtFDH/gOzA106kFvsT7P8y
5xlyv95z4m/JJvgi9FsTz4IB1j6MPQP/m4Xyie8XkXlZ16QUfV/qb4e+keXg
2xPXRjW8Q7kGz0bFMDVxDIpFPaJeUU7KTd/k07F7Qr3Rj001tk8HzwLltDz4
Desta2ZpdpVSzz0F/kaVoJclzkV3ckHinlHvHBIOzkm5DbB2Em5NbE4zXLO8
ITGnO9JdjQbPOvWoevW54FpphmqW7o/d2/pm69u9MXbsmmFV+NqsO8V2MvgN
9LbYs0szI068Jm4b+8vhDha4dprhmuUliWefemYC+q7Etdc3eDf6YOJvqWoy
Afvdqf9t9E0/jr9/ASYMJOo=
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFlktsV1UQxk//j/uKhbAQiqwUNIpo4jMxKQTRDSQmhoVo3VET2RQCCgV3
FNiooAUiLTFUjaWgPHwtILIprYotC1CJUFReoSGa+IwaXajfz2+Mi5OZO2fO
nHl8M+feuHzV0pW1lNKkVl3roj7milksejBL6apkW7Smi5+h9ZP4d0R7k/f6
xbdpPdvw/pqGdZ5pmL8s/okypadk80yR0h3NlCrZHpT8cpXSHy26N0/p5cry
L8VPaE2T/lbp3681RfLzkh2UnQ3S35Hb9uqwv0K6T2sNib9T9udp/SB+rfbX
hc4npfmPRdeLdmtdSfYDffz6OVm+S/R26S2Rzfd1f49kKyOu7bq7Wz68WFm2
SutCsr8rwgdysTbu3Sn956R/WPamh60vxL+XHNdu0SHdvbfpHL1ZWj4oOi93
HJ+Jn6/crpadE6IflbY/IR+m69ylmve6RI9k9me3zm6WbFI6veLXiW/X/Ue0
t6hmP49qPSx+n+hC0SVae8W3FOZ/rZwTsECuGpIvFb+zME4Wh3495Owf1/cb
meOry7cPFFOH7t7SYn/AzEb5s1z8t5XrTd3Pil6v83dJf5fouPSm1mxnkb4n
xT8kOqNwnH/q7Imo5afkTGu/zraKnqqZ517yMpKct2+0HqTe0rlbds5K7x7R
U7lxCB6JmdjPSVaAK9l/rOZ8U9dNLcb8aGacgIGR6IsFmePlzpmZfUN/EGxJ
3pfcN/TP4cyyX0JOXui3Q9n/mHxV/OOl9ZaJtut7X+Z+JMZ/80o+W1zz/2rP
d5/4GxRDh3zoVUw3565hv+Id0F4nWGsao6PRv8PiXxf/rujbme304H9mfFBr
4gNzxPiK5GPJ+kOZaw+mRkr3/6joTN27TPxbpXt2U/TRmdL8rMI29mY+eyBz
Tolje9M6nKPe1L2tMCb3ZPbnaOkazcqNJ3DVE/i6Gvkm/8TaGXON85xlZnRG
z9L3yK9E/zLTqN1XlesI1pDNDPmA7O1pekZ0hz54QBed7piHzE3m1Oc6P0e0
p3QOwQr1A+/ERbxbm54nxE++d2fGxkjYIW9XJf+97n7D99cy+98hu/2iTcX+
QuV+f77yHe2BGShzhF5YEDz78+Obmp6uOXfkbWPdOAADxNcfMXYFnrl/NOTk
7NHCuTmvexcUnktTctceDOwvXQfq0RdziHnUH7gk93NiHjzScB+AKWYAc3I8
+A3JOfuxZoz+Fn1Nf9NP9DX2iQcf6P9rNc8TbHzfdC2YresKz27enJPJutif
3XB9sbtN8cwW/5JoUXgeHCk9Jy5GXzC/h6MXmKlHw2fiWNX0uzUZ949EfxMf
Pc67yOw/L3pMd6zW3oeVZdjF5gN1n+fsQO53rq/yu8h7wbuxvvDdf+e+/3j4
gB1sMOfJ93DknHxMiRlLfrgX2ZrALrilRtOiR6j5YPQRuRmI/DB3uqIWN9Wd
F/DbyH0P2ByOHPGd5fZrW2HZUMjBPv1wIXqzK+6iVtSMmpCDa5HHnuipTaXj
G4sY5+p7hNzlxnZ74Pw2yY9LfmvpNwDfL2WuD3WqAvtbYnbwhvCGdcTbxcyl
j54s/A/AvwB6m2MOU5uT8dbw5l+Xue6nc8dztnBP0pu8yf25e+u7yjOjLeYG
51rjLHaY4eu5r/C/Wa/ogdJyZjxvPD7ckhv71ID886/BTGGecAd39eX2czxw
3po7Z92yeSj+r/jP+it37e+Nd3Jh9BRznbkMRiYKn8XGnHhfegr7Tj6xNRZv
AnrgEnzeV7h38QfMgAPwkGv/6+gv+mxGzMo20R38B0p3au6eph+Ig/qDC2p5
rvL8YQ79A1zKdNE=
         "]], PolygonBox[CompressedData["
1:eJwllEtIlFEUx+/4zcx3v48aaZEGQpBTkaVBTxAq0GqRq3DRaymBgdgQ0Wjt
nKlFpJUP8BHkpqwoalGLrDZlD9plGThq0CRFu14QtCj6/TmLA/9zz/+ce+49
/3tXteVaj1c45/ZjSexR7Fwu5VzM4mXw1dC5Bvx6bBj/beTcN3irIb8DDxI/
nbAc5b5mrZvYIpw1xGqwdnwfONfhnfuL/wv8EzsE92BkuJP8ydhMuJ21abhL
iAf4t/Az4Nuqz35HqHkHPIFV0usJOE/IfRwb/sraXvabxy8mrKcF8Az8AvgH
/TVQfwTOJ3CetVfEFuHcIP8o+x3Gn8HvS1lOFdyXkXFPYS/AT7Fc0jjiFiO7
myZq/k7bHtqryNp7YuW0xcbhl+Gvo+Ybej1Lj2Nwh/Bb8TvYf8HbGXSWL1gz
OIQzRn4Gfzt+F3YTfw9+N3gn9hHcgiXAw9imwHpUr1vxm4mNat7UasR6iBfY
fxScwcrEq+ivSH9N8D9XWE8BeAs2W2Ez1CzvUfNMwjRwV3frbfb74BTBE3Cm
4D7D6ohv89arzpAO7Yw6a4b8QfDSyGatO9Hd7PZ29kbWsuASdgy8DMuDC9Ro
I3caTp1686YdccTtj00r6nEIbmVoex2A/4H4CvZ7EJjGpLUs8e/EOrFqxb1h
3eFy1Q/tbehN6G3cZ60lsDvUXc7Fpg1prgSe96YlzWgO/Jw9TiZNc9JejTdt
DFBvVlrDasF58i+AL2HZlGle2pdmpB3tuSGyHOWq5lRkM9PsdKZq/D5vd6WZ
/6O/Hd5qr4RzHm4qNC1I89L+CLYxZW+8ntg1aSBlPVwE95JfG5gGNnubiWYj
zewCrw1Ny+ewK6GZsGbUo/cWmtZ0x7pr/Sn6W7TnOH4/NdYHpmFpWRqSlrQ2
AL4emfb15vX2e8nvStid6e4eRjZb/TmT+juo+SdhGpaW9QfpL9KZdLZSaG9F
Z9LZ/gPElKOf
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1817, 2474, 2473}], LineBox[CompressedData["
1:eJwV0TlM02EYB+CvUaEQWyZpgxOpGgm4eCUOkIhhNy6oo6uJbOhquyJaWtKq
CSyFRYHBRdTF4LmBtrGtaFJMGGDWwcTj+YYnv/f69xy8MXXlViKEMM9mdwg7
vSEckBeTkoOU2aZEn903meR5TwjrHDW7qa95dpb7PDF/yoBdUV+Wa/pVVijp
X5g/4Iu6yQIV/aKsyhH5ye1n8hT41RXCd0bUHdlxN6x+5v0vuH/IvllV5siY
/9Zn5REqvHZfN+tX19Wn3DXi99A3zTfUb6jq38t3vKVt1+Ky+Ve5zQfzjxyP
721+TOZlgTmKjJLgZ3zefkZ9mjP80V/1/GT8Le234m9h3mKatv6e/CvPxv9D
Xnd7SP5wf03diJ8n3pIyvy3v8E99TnbJWdktz8dbWfPcEsu88jovmbAb5xI5
xki7Ldhl3GU5TJoUJ+0f2e/an5CPucuePi+H7P8D2CBUTQ==
         "]], 
        LineBox[{2139, 1938, 2700, 2701, 2699, 2698, 1937, 2108, 2697}], 
        LineBox[{2344, 2345, 1958, 2346}]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1952, 1838, 2763, 2765, 2764}], LineBox[CompressedData["
1:eJwV0MsrpXEcx/Ef5XaO5F7HQtFggwZJ4zRR7KxY2JsiNmxYYIHJ/TL5B+Qy
aeYfUFJK5LJi5ZxS/gO5JbLzehbv3p/v9/N9nud0qn6N9Y1mhBCWcJUTQmFe
CLM8GQthJprjIfy0u5DjPM0juiku0CXtzuQ8nuB+3Tjn637Yncg5PMZdulGO
6drsjuUsHuHvumF+4Va7Vz4y90aZH3JDOJXn+MWc1lfIt5zgFPfzBT/pz/mZ
L/mRP/Apv3Nl9By/mVN8gH92/1GH++wQVviO39AoV2EJi2hxX+u31OEb9s01
nHbboK/HJnrs53zjN2axYU7at2MbO+hEB7ox72YBf71rD7v445kmXSYP8hBu
5EN31zxgbuYyt+UoxYxu3a7I/5wwb8rFvBzteIW33JTIrfIaqr1nNbrzTAlK
UYa0mxS+ALX1RGU=
         "]]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1816, 2490, 2004, 2752, 1815, 2754}], LineBox[CompressedData["
1:eJwV0LcvhVEYB+Bj0f4EvWyuumDCNdrc6y5G0aIu2mCSKJuNQUmURESUiLAR
ERJMFiFhxCLRYiLhucOT33nLOcn3FbYNxgZSQggTPKeFcJoZwos8k09yPD2E
o4wQDjnRO2ZWf0rOME1EPWmvRL6oc5177Oczp5cn52WBvOHNvEb9IbfZYV1d
bFbEnrpWvcqr91ZkXC/GWnKXBC3MMEy1nUd3HyhQv1OltyAXyafXrJ8+Ks3u
ZIw49URpYN9uK012luQyET5TQ7jlx/mXcy740rvnzzm4fyWv+dZ7oM+5P3nH
e5e+50deyQG9DZlNDlnkJf8fm5RSlvy/VFDOFvU0UEcjUbaJEaeZBC3s0kEn
7XTTxQHDjDDEGKMc8g8Xu0ib
         "]]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0U9Ik2EcwPEnD9Uc9udmbh52EQpil06Sl7z4L50SeLJy3QvSEks9GujB
4aYJBXlXgs6V0wqaoB3qENUliMg1Vt1cI0af9/Dd9/l9n+d99+5dKntr5OaR
EEIO1aM+joWwHgvhCSaaQ7iNit7AY+0RbmhZlLV/WNMeIqMN4YdWR0HLo0u7
iO9aDTltCee0s/imHWJRW8AZrRVftXfHQ9jHHsY8W5P9KeyaS3iLUb3Bd/U3
/BqvMKzX+Y6+w9soolev8aT+jJ+a09bdXOFL/Nv3n7f+wxvmjHU12nf+ivVf
6wN7FzhhXuGCuc26HUmkoq7dxwzuYQ6zSDt/3b0e8CbP8zX+iPf2T/Fz17/A
S6xGz89FbOG0+YNzfdyPExjXT3KWW/gyBqIZeWd/eZ/LPG2/zJ3R+4yH8Nn8
BZ9Q00rRf+WahL2f5iG9x3yVYzwY/UY9bp3kDm539j9jVlNa
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0T9I1HEcxvHvod6ddza3iNCUOURZSOTu1WBZcC4WdVfUkgl3iy1OTjY0
GREFtjQEkV6CBIEguFTeP91bjuqCuuGSdBB8fYc3z/N5nu8/fr9TxbmbjxMh
hBeY7w+hkQ6hjhoWUiFUMiF8xBq2zRlrntCCeZ6eyIZwWbbFp2mZXtOVaFZ3
SbbJJ+ksHdc9ov26Mdlnvpc+pMO6B/Ec3UXZJ76HFulJXYGmdBdkG3yC3opv
0M3EO3SjsnX+yPun435dnvbpzusq/KFuKqr5erxfd45f5f/rrtCOORf3687y
7/k3zmrzv/EDv/ATK/J/+gO6T9/hg3Pyuu+yZtJb+DrtYET3FEtoWVuzJslX
aV/8/rSB2/akzJPxLuta/B3+LjJ8DhNYRju+3Z4B/ireoitbpH9xhn8Zz7a3
hioGzTcwrHtu72u6I/+Gr3hlvq+/hz3sxvvkO/Ku9X/MX8ynzSX+GcoIaMb/
H++Mb6JDvuMxmLNRmQ==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1813, 2275, 2273, 2379}], LineBox[CompressedData["
1:eJwNzDsvg2EYBuC3BuowOc3ORibUYHeKxOwUAyWhmphqYOBHCBMhiIhF+AEW
IhHEJlKhCwaiShBcw5X7uZ/v+d7q0UT/dCSEsEhPYQj3BSHMRUM4MKdlriiE
G7tO/VZPcKanZFpuyCaaudO73EXkpT7EonlbLskVb62yzLoes29jlit9UA5Q
Y56XC5TTR7Vd3NsTjDPGo/2zfZnMeLPK/MSx+UQeylPZ4TbJeX4IP3Zv7r9l
Vh5yxItvFzy4y5Bijle7K+JurmXaf1/enNQnWNPf3eXI8skH6/Z/MshfmScj
bFBIEVFKKGaTMsoppZIKtqijnloaaWCHVtpooZ0Yu3TRTSe99LDHIEMMMMIw
+0yTYIokMxzwD/cOSfY=
         "]]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0MkqhWEAx+GXhXFlSFgQcQdkp2ywOgtZYSHDiowrZZ4ViqIoxMYNoIxX
ISlxSjKFBVGSeL7F0/+8v/f7OBS1dNd1JYQQxnlJCuGPzdQQNuhMC6GDZ+2X
dW2NRq2BR+2HVW2FWq2Ge+2bZW2Jcq2MO23ReYF52pNDKNZv9TnnWWZo1jP0
uD7tPMUkDXqyfqWPOY8yQr3+ay/1YTvEIDH9w57rZykhnHJCtf5l+90d2yMO
qdI/bZ9+YPfZo1LPSQ/h3eced5u+w1b0dzr/2QR3gULPtbovsDF3mQwzxBOP
PNDumTYmPFcT/d+40LvsnZ+Xqnf7nGYr9FvbG230+xngWtu2O5RGZ++V2Bub
467R+03EtUTi2g3Z5PmuWbbQ5pLPq/fe2NX/AUzeTAg=
         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0EsrxFEYwOFXuQyKYWOjzHwELI2IGSs2YzEzGwo1Ncplw4bPY1yKMZIS
pZSF7+C6RVi65ZnFr+f/nvOvczrphdX8SlNElHXTFtHdHrHNSkfEVmPujMhY
u/ZdsrbJAjdY5BWnuM4s15jjJYe5zEFWOMRzprnEAS4yxTMmOc8uzjXO5ilb
WWIzi2xhnT/uNcsv5vnNGj85w3dO84OHfGOOL8zylQd85jgfOcYn7vKBo7xj
hvesNt4hETHCPe6rqILKmvTPrb2Jxln6ddcs/5iwfsGa+VhHOlFdPfaq7OUO
+7x7SklzP/8BpRU10Q==
         "]]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7048089290210533`*^9, 3.704808939437606*^9}, {
  3.7048089815930223`*^9, 3.70480899473503*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704808430661017*^9, 3.704808440650764*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJytfAlUzV/0771Nt1JJRV2VkkhEAylFZ0eDNGoeqMyZIkNK5swJGUKIjBFJ
kiQpQtJwK83JvZUQZfYz974/t3vuO+f3f2u9t9a7y1qtz2+fYZ/93XufffbZ
5zd41lLPuRIsFitMmsX69y/1g/36Tsy/TETiexiTzfWo9npUez1oyl7C/HtC
0asw/ktuqsW4UfgfMP7T8+/vOcYJf/u3YkzyY0LxY0LxY0LxY0LxY0LxY0Lx
Y0LxY0LxY0LxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0HxY0PxY0PxY0Px
Y0PxY0PxY0PxY0PxY0PxYwPXPa52csJfYEywt3ESyR/G9zAm+MP0KowJ/hhM
8Mdggj8GE/wxeMi/cH87xqT8HCj5OVDyc6Dk50DJz4GSnwMlPwdKfg6U/BxI
/hhMys+Jkp8TJT8nSn5OlPycKPk5UfJzouTnRMnPiZKfEyU/V0p+rpT8XCn5
uVLyc6Xk50rJz5WSnyslP1dKfq7gF3ykb6tBB8YEu+BB8ovxPYwJfjG9CmOC
XwYT/DKY4JfBBL8MJvhlMClPT0qenpQ8PSl5elLy9KTk6UnJ05OSpyclT09K
np4kfwVeJH8Y38OY4A/TqzAm+GMwwR+DCf4YTPDHYII/BhP8bfSh7MWHshcf
yl58KHvxoezFh7IXH8pefCh78aHsxQeOLc5dX6fTgTHBL/hR+uhH6aMfpY9+
lD76UfroR+mjH6WPfpQ++lH66Efyxwqg9DGA0scASh8DKH0MoPQxgNLHAEof
Ayh9DKD0UTT+6V48oHf+2xgLh3+IsfAvD+O/3fc/xXjK3wEbMF78d8BnFF3Q
iw3B+GRJVd67NoxJfuh4SzS/6EfzS8djNP8sSr4DKPkOoOQ7gJLvAEq+9PoM
8foyVK2vqVqzqfXqkevT9SfXw2ByPKr9f76vIfV9DeHGX3ZberF273gCjIXj
7e/FSr3ySMNYuNxsjIV/CzAWdi/CWLi+xxgL9asZzydsz/+f8cahvfO1YkzI
4z/j0fLXptY7gFofC88XI9c1NOswi6Tv84fwv8stw/z/pepXUvKpxlgonhqM
/7LTU4ex8Hs0YkzyE0Cuj5mftB9DCutR9mRIYT1SXzaOofTHhNQ/hk7qoyh+
b8N0AjN0cn3asNZRK/dPYztuT8pDm2o/gJKHNmVPhuT3Zb4/0Z7BxPfdaETq
M4N5E2UXW0I7xkL96OW/wJSyZ0OSX2Z8cv8ZQ87H9Cf3ozHk/Ayd9E9KlP9R
ovyNEuVvlCj+lEj+8XmJh/knMMMPia2o721F0guApDOYoIMdSWcw2d+R6u9I
9Xem+jtT/d2o/m4kXXcaSWcwQed7knS+J0k/5U3SGUzQQ31JOoPJ+f2p+f0p
/6tE7TdK1P5Cf09tyj7o/USbsg96f9Sm7Fkb9v1tL7IHbu94zykswFioT2Is
5P9Y73icXnoTpgvXy8e4tO5L5MWEVpRwYPKHoCguZY9cyh65pDzxfvGUkk8V
nl/49ynGpH9TorA2uV8w9kf4K4zrKP4aMBb2b6Tovf35Jnj9U/ddkIqeyqLs
lbK//9inBfX9LCi6DUW3IenMeZq030lUfweqvwPV34nq70T1d6X6u5J05vxE
2q8H1Z+yPxZlf8z5gbRvL5LOxOskfz4knYmXyfn9SDqzf5LzB1D2pQdGeya7
rZkpir9Hk/oJ5r36WI+/P2lPKr3jP8N0ob6I7YHcL7hU/MTqbX8e6zMZT4ni
kSxK329R9lCA2wvjkzuYTsZfonj2PqYLp3uA8ddt7Hezfz3G7YX78yNMJ/df
LhWfifzBZtyejGdE/JRifPMvA+UUnUettwZjIr5i9mMy3tKmsB7lT7TJ8UCX
jD8w/7WYLuyXgecXxnuF1PpKMBbKvxJjMl6youIlC3L/ZvRtq17biB3zX+D2
ZHxiScUPHCp+4FDxA4fyRxwyXmXiH3K/4lD7FYfarzjUeZz23xxK3tT3YjAZ
r3Ep++ZS8SmX9OcMJuyX+T6kPdH2Q9sHbQ8i/XpMfb+y/1le2F5qqPGfYn7I
+M+K8icTevWt114K1El9w/6jllqvuD0hX2Y+Yn9j9Ic8H9HxpyU5Hx0f4PPS
Mzyf3t/5WjAm4gccfzzHdDJeEPm3xF5+JLF/TJV7GNTwkoXjj30J//7YZDyB
x+dT44uxkN5rH6fMSP/L0En/KvKnZzE/wv4XMSb9rchfXsd04fe4QfW/hdsL
v+9NTCf9sWj+PEwX+r98jEn/LJLfPUwX/uciip8HuL2QnweYTvpvkbwfUest
xpj036L7qVJMF9pDGdW+nMI86nvzKP5F+cdBvTgDzyeU1xVqvkJKfgXU+h9j
3Px3wkqMyXylaa++92ImfiPzHaL7oF66rjFpb4w9Ef6UwYR/YOyPzO+Zk/G0
7jhqPCtqPCtqvAlke+b8RbRnMNH+lC0V3wKVvwVyvUx70p/YUflNO3J8XXuK
H0eKH0eKnynU+M7U+M7U+C7U+G7U+G7U+O5ke+b8R7RnMNF+3zSyPZ/K3zOY
aO/hRbZnzodEewYT7ZV9yPbMeZFoz2CiPc+X4t+f4t+f4t+fikdVSIzzkfWU
f3yG2xMYny/F/l6oH2J/Tt4HqFPnPxWMtX6cHX7UQHRea8btyfyIOhkvYn8e
R/mP/RSuxfOR+5co3yiiy5PxHV6vOP8mXG8Nbk+e/1RIzLQXyqMOtyflLcrP
1GM6eV5UITEerwHTCUyff3F+U2QPQ0iM832i9XCp9WqT62X8rXD8Xn8QOpaM
Lxl/SOgb4y9JbElhRMUXiKSHTibjOcafkPchdqQ+MO0JzPgbYjy+Azke429I
/XQk+zPtCcz4I5K/qRR/zhR/zhR/Uyn+XCj+XCn+3Cj+3Cj+XCn+3MnxMjzI
8Rh/RoynO43sz7Qn8D7K/y3zJMfjU/eRDCb6L6Mw4w+J8Uy8yfEYf0iMx2Ci
vwmFGX9JjPfehxyP8ZfEeKG+ZP/3PiTmUf41w4+Snz8lP39Kfn6U/PzJeJfx
VyzhwrB/Ivwhvt9pwu2F8YbYH5L2LvK/DZR/FWPSf4jiYfH4Qn4bKSzyDybU
edmIOo8ZkutlUfay0YmiU/oKlL6xKH0p8KLGo74XUPLG94v/h/0Ln5dyqf3h
IcbC+K8CY6H8RP5UtD+I/TmxX2Is8reDevXpGh5PGJ8WUuOXYCxcRxXGwvWJ
9ydC/v/mH4ebafDfi+uvCP+Mz7fV+PsL/4rWo0Kd94xIjO9zxP6dzL9S9zf4
vkSUjxhNYpYJ5d+A8m9A+TPbXn55eH2EfTL7Gxn/DqX014KSlyVFt6HoiMqv
2FD5X0Ttr5PI/nj/EY3vQNLxfiLq70T1n0r1d6X6u5J0XO9STflvUX9Pko79
sUg/vUg69q8i/nxI+nsqPsX1DaL5/ah8mAppj6BG5f9UyHiPoZP6NZQ6X+nB
qwuBJ2d3i/Wb5FeFyn+okPZToEzln1Qof6hMxjM4/yHODxD6QWPmvEbYCxMf
EZgZj5TPUOr+Uo887zH9iXwRY1/keo2ARfxE+brllH/bjDFhP9h/11PyFMWn
2iQ/OJ8pmp9LYro+A+ejRPqiSflrPTLfgvNR4vt7Mh82lOSHiWeJ78PIi/ge
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
77SxQMexKfZWLR8tfhm161wrC/4XAmK6Cw==
   "], {{{}, {}, 
     {RGBColor[1., 0.9499999999999916, 0.7499999999999843], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk1tLVVEUhfdxz90VoXwJulEPHUGxvJSl3TPrlJZlee2lFOyt8EERu1H/
oKCjaUEUQVRWiohm0E+x/kFlXlIzv+FcD4Mx5lxzrbXXnGPvbrtdfysniqIm
EIPLFkXDqShaJNgH+sANCi6QHyKfhVvAGLoJvgYm0GvgTdQ+Ag+I1yder32v
QQH5GnIH0S/IH4Cfgq/c+S32y++BTtZayY/DBj8ktyv2O0qJB+Bi+Dh4hT4K
72U9C67znQWJn7GW/EZyN8EW4iLiTvQUyE88l4Z/ElehG1jvCN+h/VfCO/Se
c6y9RZ+FT4M36FPwNBhky5dQqz0ZcIJ8hvg3eg/6Mfo7fAS8RFfCjWAUfRX+
R10jesC8F+pJGr0TfQeMsBYlPp+R2OtUPwgvhfV69DLQLIfJrTN/o96amM8w
Rs+o/9RMUnMX5IW706EnP4hj817mkOsi3go+hverD7PwLLkP6Fr05nCWztGn
DoX5z5P7hK6jphD9BLRwbp95n2oT74V68sd8rprvfvP+qs9nzL0iz1SYz1tz
Pwn3cMZ28Jl4G9wd7vsFV8OHqelF74jd05fMaxeIL5q/aQ79N3zXnPmb3sm3
YJr8eThjPifN6z88Bfp55wTr/eEtepO8tiH4TZ6QN46Rvx/7vyGPrO4hX0L+
uXkuF642v0t36v73KZ9Tbqh5Zv6/6b9L0bca85oZ6hfR7fASXGbuZ/k6P3hP
HtT/IF/Pm/tDPilHHzLvlXomb8ljVebelYeb0SsQGnjF
         "]], 
        PolygonBox[CompressedData["
1:eJwtkkcvRlEQhs91x4IdG2sLJUKi10+Lkk/bSAiWJGKl7fEDsBAl2qdGIspO
RMJ/wW9QovO8GYsn55055557Zt7JHZ3qn0wLIVSCQWt6CLMxGqrQByQL0GtQ
R1xHnIpC6IBadETuGs12COg5RBYMkpuBXs5csPbBM/l34mLWVajl/I752QXY
RTeSW2SvEI6IP6AEvQ4N7LXANDoDHuDN/D+645u4mlj16I016AFoQ1/pDHoP
ljiXD/voQ1iOvUbV+gqnnE1xxwu6wbzWA0igf83v0j9+0E2wgz4i14zuhrPI
a37lzj7eW8q6CfXoB/ZX2Nvkm3t0Jvnx2GvIgVbzu5LQYt4j9SoPUsTP5m/R
P5/QXzDGXhEcm3skr9Qz9S6pN0VeUxe6ErYj70mFeQ/VS3ku7yvgjeJmdIf5
DGgWJiCBzid3F7yGAnQnnET+jw70fezfyiN5pZpVe/G/9/JQXurNn8Rb5t4n
1SN0Nut87Dl5WmbeK725HD1k3hvN3LC5h/JSM6PZeWE9j9wDeaGeqXfyXN5r
pjRb8lzeP8bed/W/iO83yF1GXuO6+cxqdm9gRLNkPuuquR19G/us6J89xH+B
umKi
         "]], PolygonBox[CompressedData["
1:eJwtkL1OAlEQhQdml5CQYGNiIiBYm0iiRBsq/koEOkMjVlTQgCgWwitYyFuA
WuGTgT8JfONs8e2cPXPuZO49vR92BnEROYQQLvhsMMYqsoyJNAORON4d3pt6
7z+Df4t+xdtRS3gKPfQCb0u95D9B7os5BbwZNELHdFE9H5L5RX+Qy1GfoEbm
CtLoR3in1yK3ifY6po6gQqYKE/SZ+k7f1J/oTFa9Z5k6vKDP1e+jzAtgTS6v
3rOMzbTZGVjR21LLeH1qCo7wkpy7Cbz/oL6n7WvvYO8xje7TJtOBT/Qz3gFc
h47pufr7dAO/s939RD3/R90DdgcsOQ==
         "]]}]}, 
     {RGBColor[1., 0.9499999999999917, 0.7499999999999847], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
MNqNvutx52MPRzl2Ovi3YII9KXQ/Dfkp7HZSilzFGw21mxqAvXZq/Fe+K3Fn
Yj/sq38VbxU/8XtFxzLeF4i5ub77cAd6u4zaw1sUbw/1/s3Xqrjr8obN+x25
7PspcmW3MjBKjdqpZcQ8+65xzpptLA2mBl/kxhj9rduZVbyXkYdHpvDVpca2
EHfz+1wjltiHP7BPfujczH2f3EuuJ2aJ3XeNmXiPeTAFJtir9rky7ihNnGEZ
88nxvIODQa9K8cbKfWlainxB3rguxTs1d+afp4jv4Y5x7kLcQ6akiAXeUve/
q1ZxV5+p8T4pzutffkfs6bdE/H+rY4R7/GDL3JxCT/SlpoD3yOPcseqMZ/gt
uQXcW3oufO8qZL5TBmZ6uWh/03jFOOrbxpzH+hw+cAwe63EwKWOtHp9sHj1f
thzwT7fKuTFFbb7TWIn8SJ6cl+Le09B2RkW8vaA/47OcN/g+03WhxeP8njNf
6nMHBy10vOMPC8wT69wzsSd3TXhst939Z5wrFhpHtXouscw7Ke8d16RYc6bX
ZS56cndeVsT/VKhX1GD8mrxBvaHu/DpFraIW/JLck8I33i9DXrP3xZslOIO4
oaY95xrKOncU7e/F8NiJ971lXneZ+2Kzg6row693PiTf/h96cTn0
         "]], 
        PolygonBox[CompressedData["
1:eJwtlnuQznUYxd/f+3tem4z+aNqlGV3WKuM2CBHlkrUyNpWoXKK2ZghhqIaU
rlJKLlklurCh6zRljKSZTKlmmsw0uqkm5G532Fjrttb2OXP2j7N7zvf2+16e
5zxvYdm04VOzmUymAgSYx5+eSSZTD38ePhN0QB9Hz4DXpZnMSPR0cAf6NvAk
/E5whr4/wWJ4XxbdRd+L4AZ0A/Pnw0/Q/zj6PdAfvQU9FX4P42vRu9EF6Emg
E7oWPSzxmKHo4+jZ8HdAL3QXUAxfCa6DdwYr4M+BS6VzmUwr+FjQBX6EthK+
NRgcYK1raTsEPwzawi8GRYzdCprBX2X8UfgxsAjelbZ5idfcy/zTqc/+EBhG
f0fwOrwGLIO/BA7Dj4AF8CuZPxleCA7r+7QthdeCr9GT0W3hR7mvSfB/aFuO
Lgft0VeBcvpeQV+tb4HTunvwBvxLxj8Mv5vz1KA3o6eg+6F3o68BlyT+Zlt4
U5CvOaAN/DP+T6BvHOMvoD9HT0SPV5Cw92r0C4nvWHf9H3oWfBXopvsJv4W+
qW//DZrojUE/5k/UHuirYrkJ8OmgHboaPQ3eCvyi2KPtCngN8+bA14NB6Hr2
sZK2Rfyvpm0hbVWJ7+QL2vP4xiP07dP+0YnGgix6G2MOML4/fDN8P7wyHAur
0V8x7oHw21eiy+C/0lYH70bbT+jfUudGD/QO9O+pY1s5sxMd4D74E2C03h4M
Yv089B+M/RnUMr4TeovOij6L7or+Hr1DMYXurBjU3jjPAtq6g3bwPeG31Bvq
LU+Fc6cUPRhexLj5qe+jkrabmPMt/IJyhv63w7wevBW+y9apx+pOWyoGwRrm
LKLtLGPG0H4I3Zu11sgksl5Ta59Bj0bnMzZPY1OvoblbGHMyHIuD0b3hSc6x
NF4xim4Ix9o49Aj4m+Bc4jXrtbdwrGutwnCMKlZz4C8wIOwlQ3RWnT/ntx8l
z9Fdhr1qhM6CLgnH0lBws7wp7CUloIc088cyvwH9LnooegnzgrYKdPdwrMtz
5D0twdPaL2gRviPdVRnjb22cm00de1qjD20tE3/jHOOzYW8aie5IXxP0/ei5
YIzuIvXe5bG3o79L7Q3KoU/QP6TOHXnGp+gfU3u1cmoDelvqXJOnfYzejq7J
2NM3oZ8Nx7Ji/Jmwx8hr5GG7GHsQPTDrGN6PTnP2Zu0xR19f9JTGHFeuZ3P2
QuVASv9l4VyWZ+bDl4OT8HW6H3gL5sxM7SfylQHMn5G4BuxJ/QZ6C8Xc6nCM
KdYq0e0Z+29qLg+Xl8vD5eVa4yLGlub8FvJIeWVhzt4rj2id8x60l7WgKXoD
623P2qM3wm+h/4PEHiQv0hvrre9VfIZjVrG7EdwFv145lthD5aWlYS9QDTuV
OkeVq1pzSLjoaq2mYD18b9iL5FH74GvDsawYWwefHfYGecgs+GNhL9GbPqpv
hb1EHjIH/lTYu+Qxc8MxrljXHnvCD+qMWddE1cZjqWNRNUu1SzVctVw1cGdq
D5OXaU4Vfc3AMtYu1hvA96XmihnFjjxGXiMP6cX99tH5Etdw1XLlrHK3QjUq
XGNVa1XzOoRrhmpHG+0Tvjjs3fL8JWEPkZdsAqPkhWGu3xj6rTEy/DaqUapV
K8K18hvWaA5/P3z3qjlb6T8fzlPlaB385XDt1hl1VsVqQerfF4rZB+GXp84Z
eaa8t7lqXWNN6hs+m2qyarNqimpLc77xEXx4ONf1m+o8/R+G+xSDGxrPrLOr
BqgWDFS8Jq7Jqs3yRHnjCfRr8KVhrt9gRWHPlffqzm+U34O6xB4rr9Ud6C7U
tir8m6WmMRcLwr9J9NtEOVse9kx5p/ZQDP8fZYRP4w==
         "]], 
        PolygonBox[{{986, 773, 877, 876, 1342}, {988, 269, 866, 935, 1353}, {
         1043, 387, 874, 789, 1033}, {1321, 820, 936, 269, 1320}}]}]}, 
     {RGBColor[1., 0.9499999999999919, 0.7499999999999849], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
9JmT
         "]], PolygonBox[CompressedData["
1:eJwllllsVVUYhe85ex8hpWlLS5G2dAScIGLVmBin6IuJU4wmEmPihDhGqoDi
POCAASQKzxpNEA0OILOKgNhCRWhp6czY0kKhFWMc3kS/lfWwctfa/z777POP
t/bhhrvmprlcbgWIoDwDSS73JIsV8FEWb4EfB8Mhl3sEfR32T9FjZWftdng5
2IytlLUe+JWgHf0b9jvg1eB79AGwkPfUo9vgZew/DD8KTrF3PmttnH8QXYSt
H12IvhF9Al4OlqC3gY3s70RflfrMDvgksBhbM7oAPhvsQJejN7N/PGd2sL8G
/IDtC5AHv489n8OnYB9Cz0KfY38lWg4a5vnJ8GngJPo0uEh3Z89YsBpMRTfy
W4Ctkecf5bwa1p5Fn+X5avhk1pZi2wDuhr8LhuAnwWL4O+AEvJdnJrK/KrPv
x/P8Js4+DW5NHRPFRjFQLPqx/4RtBNyGLgXrsc8BuxLHTLFbBI4njpFitRT9
PPp6sAQ+AcTEd6yEfwD+gB9i/3bOfh19BN2NnsDzW9GV8CrQgr2QtXbdHWzA
VoBu0/3BWnQ+uhVeCL6W79EtqX32Ffq76LOUU8qtBeiDvK8DPAdfB0r0btCM
faNiDi8Dv6JXoIvZuxyshF+cOVYl6Jvhu4NjcQH6G+yHwTL0New5Aq9nz9+p
fVAanTPKHd1xnGKpHE6co/OiY6xYN4HHlKtgNOccrZBvo++unFPubYq+q2Kk
WJWgFyi/QTF8LtgPbwEN8CfAHuWzalKxDI61arRMuQNuSl0jqpVl4J7UMfsQ
/kz0WYqJYvNttO/6wRnOqka/L9+CPPihaF8s4h198Kei360YKpaPR3+rYqhY
DkTXZoNqkvPqon2fB6p0tvyR+E66W8zcW1TzkzLXjGpHNaXa6oWPSxzDKez/
UTWZuoeol7RG946nFRP4K6CPvV2KMc+f4/cj9q3kdw54A/uxxDn/ZvQ36lt1
p63se1U5kDinX4vuKeotqpkt8IS1fzjnL3AZ5++NfvcM5Rv8Utb+TJ0zA+yv
RQ+mrlHVageYmfoOuot6nHqdekqWuemq96hn/RsdE8VGPeM87MsV38Q+6cF2
ILh3daEXYpvOnpHUd9Rdz0THogoMsff34Ny6E0zE9jG6Ptg3+bz+M9bG6F1g
FfxncCH8Xmy74L9Ef+tsdLN0cG9RDaoWr0B/Ip+pn4L98IrUNava3R59Vh1r
O+CtwbNAPUO9Y1/w7FANq5b3BPcK1YBqIV/zInGP3oltb3BvUQ2qFjuDZ80A
+i30DZlrPV89S3kV7Iv5YAT7zMyxVMwUu8uDfSJfrFGNRvcG1XCRvj3ad0Xg
aPBM0mzSN27Bdja4d46iZ2BLo7liotg0RvtOPm2KrgnVhmquRr00+GzFeDq6
K7r2NNO6o79J36aZ8Da8nf3TsPWiX1LuB3+reshUzQ7NrMQ9/ZR6J/qS1Dmu
XNfM0eyRT+XbMZlnnXK2LvOZOls19TJ8W3TsVINtnNUFrk49szS7XgTd8E7W
ijPPCM0K9aRBbMPRvtedBoNzVrmrZ16IniGaJaqRfdE1rFrWnXdHn6mz9c07
0e9Fz8o+9PnYmoJniXqkeqVmpman7tiDfhBci62WfQ/B74+e5Vp7IDrnlfua
+f+xZ030rNV/hi+j/0Pov4RqZDX8f0tNK74=
         "]]}]}, 
     {RGBColor[1., 0.949999999999992, 0.749999999999985], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVktolGcU/ef/v5FCC+rOR2sVCkaxolFqNNNlAra2M3mIJfGVOJNlsk2y
SydKsrBrk7RZWNeiMvERjZL4IDMjiUpVaBMKbgragoiUNIj0HM4RXdy593vc
53fu/WdTZ09zdxxF0SNQAtqHnw7Qd6D1qSj6HLSA/degbZAbwNNp7f+FO7Og
l9i7EKJoErQd+/9g7xDoPxiuxdnlIN2/fbcG8k7wS9jfCvkF9l9FkuvBx6B3
JiX/VZ+VcHcuURxXIUc4qwMVIWZx/wvQDqz/jRRDFnwp0l4beB4605AL4G+w
3g25G7wZertAX2H9NhLvBW/F3tegfVivSCvm5/D/JlatDkJugVwXKw7eY0yn
wTLeexcj7TLOPR/4qXG8S/bJGBjXraBcboLX+jwP+jLWetmxkzP+2lhr6j6D
XE0p1o/Sypd5P0xUlxvhfY3aXCfWk7WiPdrPGwut0NkPKibKdRJn56G/Cj7u
YV1JSd4cCQfEw9q0cmEsva49c6E/1o5xXYSN0VhvS1zdxXoL1nfA16S1H8hB
i9hfB349Jf+8T1wsWr8JfLvzz8WywxxWwdaP4KuD9Bg/czoBuRO0AXIT6Afs
fwPKp3TOfP+EjU9i5UOivOCa0xfr9DN4KZbeT1gfg9737hnKg77Dc/qsBulW
gt6ryTH3xYqnBvf7QYeh2xeprg9c2y7bYGz0OWK7D4Mw8yDoPO87tFewTfIu
7z8NwuoT8CHbZB2IT+4Tk8TLx7HOBx0Pc2Jfsm/Zm2cdY4/vD9kO8c9+IeY7
4GMK/HiQDdqiDnPiuzCvF7Y7ETQXOB+uBdWPNR00HvmmS9an7373Eu+cdh9l
3UucO8T0FOwsYy+HdSaSzwH7PZDIDuP/JdY7DXkW9Bm37LWcscSebXbf8v6E
dfKuAfUKtsv1YlAdFoLeYsD16XVORc+HFs+I8Vh2h1OqAWddg7HaZbz2x8JK
GXK7+zUXqa+y7mXiYtRYJaZzxnjJMc97ro5aZg3qXE9iZ8RzjbOVM2EeZyf5
don6b9TYoy5ryvnN2b4+KMeVQXFWXOeXvkPM7IGNc4lq1ODYs+7lMdv8NK3e
+4zflrRm2UbP3aq/FyPO75H7ouD65FyzRlO9Y3xlmWeMq2w7bX4zviHtTbr/
idV6Y77DvUx5bdD7zCSy12ib/CbRx33sH02kz3pmwI97JhwLquNRYzvj/Z2O
kfbOGZMH/H1rcH1O+Q2m/C0pGvNl9zfrP+eZMg++13EwBuZxxPHnjAlih99p
vk05kY9216PReOFd4uJX2/k9CK9/BPVHt3E/E9R7t4PecdwY7vRcIwZ+C+qf
x+BXEvVBKdGMGfbsIPbHjYFlvwl9DPtsyN+TbvdQj+/w/WaDerUM/q3zY54T
ns/vepuc/TThXpt3HIxnXVDdaY823toPa03cVYyZgutEH/xfk01U/3H/V6HN
Jd/Jez4V3fPttl1wT/D9qMs69btWZdetxjq9nkfsuzF/7yqeBbw7nWj+8js/
4Lpvdo+UnCO/Xdf93fwfiRcrxw==
         "]], PolygonBox[CompressedData["
1:eJwtk0tLlVEYhff5vv05UVFn6iktaKBiDoyswKYOVEgtCANNg2ZdfkMXBf9B
f8FJUKCRV7yU2jEvZIWaCM0rE4mwiJ7FcrAOa737ffd5z1r7nL3zsOdBEkK4
AiJY56OZwl/4e/gMOIe+Br7Bm8CzXAgjoAq+C1p1AXob3pKGcAt0gg5wl9oc
ZzW0vEIvoY/hTcwU4Cm1m6CZWh0oo/aI/segHD6f+ruK6R/VXeA3ffXoN/B3
0Xd1gx/wj+AS/B89H+CL0b1d4Du8D0xyXwl6gbtX0OcT76TdLlLrPdm9HUxR
+xXswSx8DDQwf0itwPk97YAugPvwATANH+LsdrQn8uYq83vwT+Ay/Dr4Gb2j
dlXtM/x0FsI+vJaZDP4levYGOIzORNlcQG/CF0BdYk/kzbT8yHnnTXY4QPck
9mQL/kL9nB9wvsz5a3Qj+gi9hq7K/N15UJl5R+2qjHeiPZSX8mw5+k3obWiH
+egMlIXe0Bq8P9oLeS7v/ygrdDff1wa6UtfEW4MzUTby4FTmzJW93tCc8kq9
uzJ4Ge25vP8qz+h/y3l54kyUzUa0V/JAXrTTM5w6o0H0auos5cE4ej21F/Jw
Qr8NfZx4N73Riui3uUGtlLtiZq/20Hl4dfRb1xvOw58y/wRM5OyBZjSrHZ9z
Xp15Vv8p/bfOZP4tyqgI/h+RjHk7
         "]]}]}}, {{}, {}, {}, {}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzskuhEEUgNErusVGsNOa4AU8iKW9NoSd4blsBGljDGltnsUU01pi5gmc
uzj5/rpVqfr7xmYGpxsiosJfIeKZFx544pFf7rjnmltu+OGSK8644Jxvjjnh
gCMO+WKXPWrU2eGTLbbZyPsaIzZzrut5r67m3bqmH7qsp1rNd3RJ33Ux39P5
fFMX9E2bihG99DBlNsm++Zy2mLVrG62U6aRqf4UJ3+M0O1ezns3/1pL251nz
MgU6KPFqv6jddFG3HnK2wjAjjDJg7x/V8zwb
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0msv1mEAx/FLhzWHVQ7Fg6IbbZIlb0AP6Wm9A7aIjQ5EhdJRCB1eQgej
1sYqW615UGxNW9MBHWwpIq1eQYfP9eCzr+t3/dnt3j9R1XigISmEMEL2+hC6
1oVwmUu8XxvCrG61X9QLnOedfVq32M9pJ2d5a5/SLPsZ7aCdN/YJzbS36WlO
MW0f1wz7SW2lhdf2J5puP6HNNPHK/lg324/rMY7y0j6qm+xHtJEGJu0PdKO9
Xus4zAv7fU2z12oNh3huv6cp9lQeOVc7VzHMEKO2h+S6X9afthVNOOezgb/O
BfpPb7m/zZ34Ocghmz8E7jLIuGfT9CDb2B6/x/gdU+ZvLbjfo6XsJcm+W9do
if5yf8XP3fSQyne+2pf0my7rjK7qkq7oov7Qp7oQn+dL3OPv8Mw+oNfo5Spj
thTNYwe55JPgBtcpYM5z8zqrfdofPzOfnYt1Xkv0ZnzH+O1cGt+H+K6QTCEf
7OX+x4+6TyupYBdF7KSQT+73639yp1um
         "]]},
       "0.25`"],
      Annotation[#, 0.25, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0UkyA2EYgOE/khgWDmEhqlSpIpGYgiDmGMts5wAsncTsEuywcBRxA7OY
Pf/iqffrr5PuTqdlZ295NxFC2Ce2KR3CXCqEQw64TYaQ0TZaqXLHlX2XZumk
mxwP9qu6xgp//HJhX9Ae8vTRy6P9gBbp54Vnru2HdJhBRijxZL+hm6yT8LyB
S/sxx2VGmWA8Xst+SqeZ5I1Xbuxn46wzca+VeH/d0lT8vusmtU6zzJvfnR81
13TBccG8qJ/x/uYPfY/vw7ykX47L5m9djr/fvK318RnNaU1qjo74bn2uZK7q
iOYp0hj/A81w71y7NtjV+HF8qmec08wJxxxR8dl/b+Q3Og==
         "]], 
        LineBox[{1355, 1187, 1276, 1275, 1339, 1274, 1337, 1184, 1185, 1186, 
         1341, 1183, 1182, 1181, 1336, 1273, 1338, 1357}]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], {}, {}, {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {2, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.70480844125287*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dcb", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"combined", ",", "m"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"dcb", "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704869267075041*^9, 3.704869296078898*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"c", "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704869269673532*^9, 3.70486929764184*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", "b", " ", "\[Mu]"}], "-", 
      RowBox[{"b", " ", 
       SuperscriptBox["\[Mu]", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704869269673532*^9, 3.704869297746133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "\[Mu]"], "dcb"}], ")"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70486931212009*^9, 3.704869342943198*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704869315209325*^9, 3.704869343482399*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddcb", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"dcb", ",", "m"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.70486946002981*^9, 3.704869471284749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"c", "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "-", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox["m", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}], "3"]}]], "Output",
 CellChangeTimes->{{3.704869466278181*^9, 3.704869477049205*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minmax", "=", 
  RowBox[{
   RowBox[{"ddcb", "/.", 
    RowBox[{"{", 
     RowBox[{"m", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7048694799183187`*^9, 3.7048695075245743`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["d", "3"], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"c", "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"d", " ", "n"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{{3.704869486633976*^9, 3.70486950803388*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"minmax", "\[Equal]", "0"}], ",", "\[Mu]"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704869509223837*^9, 3.7048695201055*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       SqrtBox[
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}]}]], "b"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     FractionBox[
      RowBox[{"b", "+", 
       SqrtBox[
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "c"}], ")"}]}]]}], "b"]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704869515876161*^9, 3.704869520484867*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", 
   FractionBox[
    SqrtBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"b", "-", "c"}], ")"}]}]], "b"], "-", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"c", "/", "b"}]}], ")"}]]}], ")"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704869771561871*^9, 3.7048698113474894`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7048697824005203`*^9, 3.7048698115585213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{"minmax", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "30"}], ",", 
     RowBox[{"n", "\[Rule]", "4"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"tmp", "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], "\[IndentingNewLine]", 
 RowBox[{"tmp", "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0.9"}]}]}], "Input",
 CellChangeTimes->{{3.70486971160083*^9, 3.704869746949204*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"216000", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{"29", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"119", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7048697208592863`*^9, 3.704869747427924*^9}}],

Cell[BoxData["0.0002840135103965769`"], "Output",
 CellChangeTimes->{{3.7048697208592863`*^9, 3.704869747431604*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.101879399588205`"}]], "Output",
 CellChangeTimes->{{3.7048697208592863`*^9, 3.704869747435495*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704869608849802*^9, 3.7048696639607983`*^9}, {
  3.7048697033827267`*^9, 3.704869705098646*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.704869615192884*^9, 3.704869651962041*^9, 
  3.7048696990570993`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identity by descent", "Section",
 CellChangeTimes->{{3.7047156352301702`*^9, 3.7047156388846283`*^9}}],

Cell[CellGroupData[{

Cell["Moran", "Subsection",
 CellChangeTimes->{{3.704715642710396*^9, 3.704715644573244*^9}}],

Cell[CellGroupData[{

Cell["In", "Subsubsection",
 CellChangeTimes->{{3.704717182907764*^9, 3.704717184604344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qinm", "=", 
  RowBox[{
   RowBox[{"QinM", "/.", "mychange"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704714276525116*^9, 3.704714282630929*^9}, {
  3.70471719246476*^9, 3.704717193320785*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "-", 
      RowBox[{"d", " ", "\[Mu]"}], "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
    "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7047142775167637`*^9, 3.704714283133922*^9}, 
   3.704717193907744*^9, 3.704734564492092*^9, 3.704736506213084*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"qinms", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"m", "+", 
       RowBox[{"\[Mu]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", 
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}]}], "-", "1"}], ")"}]}]}], ")"}]}], 
    
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "1"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.704717194805476*^9, 3.704717195095018*^9}, {
  3.704717341608232*^9, 3.704717356569463*^9}, {3.704717387263557*^9, 
  3.704717474328863*^9}, {3.7047175562203493`*^9, 3.7047175571567307`*^9}, {
  3.7047326542739563`*^9, 3.7047326568407373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qinms", "-", "qinm"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704717194805476*^9, 3.704717195095018*^9}, {
  3.704717341608232*^9, 3.704717356569463*^9}, {3.704717387263557*^9, 
  3.704717474328863*^9}, {3.7047175562203493`*^9, 3.7047175571567307`*^9}, {
  3.7047326542739563`*^9, 3.7047326568407373`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.704717195585898*^9, 3.704717360376705*^9, {3.7047173956557693`*^9, 
   3.704717474837408*^9}, 3.704717558422176*^9, 3.7047365066020727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Denominator", "[", "qinms", "]"}], ",", "\[Mu]", ",", 
   "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.704717559849717*^9, 3.704717618804558*^9}}],

Cell[BoxData[
 RowBox[{"m", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d", "-", "m", "+", 
     RowBox[{"d", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d", "-", 
     RowBox[{"d", " ", "m"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"]}]}]], "Output",
 CellChangeTimes->{{3.70471756269761*^9, 3.704717619132477*^9}, 
   3.704736506767359*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Out", "Subsubsection",
 CellChangeTimes->{{3.704717187717086*^9, 3.704717189464773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qoutm", "=", 
  RowBox[{
   RowBox[{"QoutM", "/.", "mychange"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704714289082738*^9, 3.704714290254682*^9}, {
  3.704717202173376*^9, 3.704717203180154*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.704714290625621*^9, 3.7047172036936293`*^9, 
  3.704736506899569*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"qoutms", "=", 
   FractionBox[
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "1"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7047171990038233`*^9, 3.704717267829002*^9}, {
  3.704732641547728*^9, 3.7047326469670362`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qoutms", "-", "qoutm"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047171990038233`*^9, 3.704717267829002*^9}, {
  3.704732641547728*^9, 3.704732649644485*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.704717204716432*^9, {3.704717245317753*^9, 3.704717268265126*^9}, 
   3.7047365069893847`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.704718139418446*^9, 3.7047181411970654`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"prs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "4"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qinm", "/.", "prs"}], ",", 
     RowBox[{"qoutm", "/.", "prs"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704718142410687*^9, 3.704718197776787*^9}, {
  3.704718228458879*^9, 3.7047182458350153`*^9}, {3.704722069033126*^9, 
  3.704722110748632*^9}, {3.7047221454826508`*^9, 3.704722211499648*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"n", "\[Rule]", "4"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.70471816657929*^9, 3.7047181982363853`*^9, {3.7047182290494947`*^9, 
   3.7047182462897053`*^9}, {3.704722073418885*^9, 3.704722111104993*^9}, {
   3.704722146179756*^9, 3.704722211737151*^9}, 3.704736507064989*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mk0lQkcBnBbx9YI1UhCDMmum2jTU+lERJMl00zZosJEyZTUTNRV5DYo
I42lsoQcJEs1lrKMItnfu3BdXK9ruXgjSxTmzofnPOf34f/lfx4t7yAnXwkx
MTFnUf5vO9/htrcjrntWhre6e+sJIGW9/nyvqjlu//bwlJy2AFsfJaUUqx5A
mktidtkGAew/sl6kqrrg2+2vbDVlAdx85irvqfrAa5Tnum5xED2mt63vqobA
wZwIIToG8XjtkVt3VOngG9u9AH0QETLFetGqCVgMGXo6SJEwsImPenE+Aa/G
FLeoCUm0RwaNdL9LQCNnxzUXAQkdSaM8k0t/oVMwad3OJVG/mGnS2Z6IL4o/
ai40kFj5OXGbJuMhXtY4Os5lkkjqCbMuXUpD9fS/mjEnSfx0/Enhp8lMYFOT
hS17APLLESdsNArhQQXM933jQ/foxHBtTAkiDaYCjxzg43LzDiRNv0Y4jRFz
/EE/VEqUeOLib1BMdlXmyvWjjG/d1LK7BjncL4xseh9q/FPVjo/VQYfUr2Qo
9mFmk9Wq/HPv0BvmUp7i0QuJ+TxFNd1G0BU5t7QzeLBY9ixzLmiCIEwY4iLF
QxPdvLneoAWydVV29Es90IwTzudOtMLyYqPjplEuhHO9PMKsHcnvvfysg7nI
HC1vVPizAzSJ0NDhhW4oqGdTJNkJtW9MjllsNxh+pacf6zDhWmQqb0nrxuze
PPLsdRZyolV0szq7EEKrK/m+lg0rWqtu4M0u9BbUxbRpdWFrZnWW35YufPXv
TNYP68bAxtYGNwEHhvukl06Xc1Ft7DtflsmBTbrWmSIVHsy9q7SEXhxcVvfQ
7j/Ri3qH9/22ehwYjbnKsxz6MGFyWUNsko3Vqz7J1C30if4XX+vzmg2pN8mF
P6T0497UoU7XKDYCzMs5svZ8BHIMzcWPsZF3yPtx1SwfXqbsVCs9NmaE6xUF
iQMgA5zDmxdZKHW2kUw4QGK5Y4/mmg4WrttGPioR7UTg3Jalns+CVo8dOyNy
EPrCPxbuR7Ow05KeoEoT4OI+z4g6HxZOaLTMi3cIoG42fGzGmoWZxrv88xFD
yFu0PjStxUKSlHuIk84wthXtjb4vycJqXmm6RN0wDH8+Eyw2xMSK3yNcdlwY
QfqNzuaDDUyI5boX8pVHMdWj+yi7gIngvwvvKteMgpyeMZq+x0SlYZSMUqAQ
7or2/ZxQJpTsgo1uKIzh4+fmxQAvJrjGrR1XKsYgvrNvfNaWiedpoim5jyN9
ldLEFxoTJwstlNSXxkX3vs82azARHvkkgvtsAg/ashjuMkzkD6snKxymkLsl
X7ZqmkBUaqQnz5FCULcXeUZkH6dx3YKjFNTLZz8oibyhouK5gxuFyfjSat/P
BO7E/lLP8KYQt8LSRmGKwFmLh5NyVyjQ17576UUR0KavsZV+SqF5erua8iiB
pe3XvmPlUCCunmNUjhDgjA+0P82jsEjXk/MTOc6t+OTBIgpWyxsN3w4TWDZw
uhhZQSFhrFsiaIgAty02TbKDAk9LWrqFJPDq1typDoLCujEbXBU5YZeHfgab
AkOdf1NPZPssk5L9PAq1H1Ro4QME/gn92BAxQmHl+t3aND6BRONtsUfHKMxz
v1bw+glc4Ke4aFEUbGyWT8WIvPnwr71vpykc3lfPJPsISIl3ZsbNUXjiT0+P
F7mvdJe/5wKF2MCrYXtErvDPMDVbpDCYnOMu7CXwQFN+ZnmZgsV+2SNJIv8H
2Kq8fw==
       "]]},
     Annotation[#, "Charting`Private`Tag$57129#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzXk41AkAxnHXOlJKx3omGUeSK2zJ1W7vhs3dutrpcK2kEoV0mW3Rg5Cj
7dFE7ivHLKMcHSghlijM9ZNb0jh/JGx2sbN/vM/3+fz1qnpfdD4tJiIi4iLc
/7U9LeiqHz960CWgP7PN+txBCYvtgYMUQ7BqxM44alphX1ZKegXFEoeZ1mYT
VBrsOviPMyiuYLJ0H4StPwOaz1LdXYoPFJ9MdmkIrqBf/5ZFAiUEmrxDkr3Z
0cje9nN0HCUSda02vZ4KDERIV+yOpSTDaqurNFWhANpWf8Q8DkyG45GoUk2/
AnRHXRzvbUlGAMPv0OfaAqiL6zL1rtyDZ6WNb+OvD9G8kq/H6WZguufg8Omi
QqyfZ+xXjk/FSQ0R6SmtEqT0h1pUrWaiMMCiZ3ytDMeO57Bm5/IxLuMf+kGs
ErJrEW5WVBY6zcRNvQNrsMtpRtB4uxL+nw8or/DrcfWtKVK+PENsaPbf9NeN
UKiUHxAVfYlVlcVLKrubUT1i0f7u+wb8PkPN4Jz/Cw1+GYrHp5rgs3Phyrx3
GxY0fthYGtACJTuqn65kO8S+Mjcp7mrDsGRYdFxmB4zWvKpdytqx4Y3osczF
t2iPNHzbrP0OuUxJ1uzWTijfmfxaPNOJ3tJ8bdHSTkwuDQ5wDbpR6quTN6zX
hfyJmja5RDYWndndeuVdkFMqJEdHOUik0M4NqXcj/lyVb7Y6D0klwxWpsd1Y
/JE5ejaMjxguvWFpphshe5sqv20kMEGVoc0fZmOwrOl2l+p7tJpciO/IYuMf
P06aVmgvZG95fFSZY0PnkNSqb00ftj/b3WJqwoFVruqZRwoDsKkPSmOEc3BV
yVNt2G0QL5jy1Yr1HOhOHZXlOwxBO6E4dmKZgy0bZ6Wblocg+Kyqq2nMhcTL
NNbO9GEkJJ5gOfhzcd6wpkfGbgTNWnQpTi4XTBvv7BeLIxBVY+IGl4uFye2b
xhgfsMPO0dZLjIcqFyvxZMtR/EnS95UY8BBmHZVVOTaKIDP3+LbjPKj22xJ5
UR9xl2d30jacBzPjyGTK3jHUn7pJ1SniwY367qsoewzGqvrG1W94WGhLGAmM
+IQYsZzy+FkeUiQ8QpzVBThxLz/8sjwfWwaqcsWaBCiseK7nZ8DHNzciXE2D
xkEPtlzIcORDpNiDNbJ5AmbLjC2XA/gIfsBK2NwwAan4hetXb/NRpxMjLX9h
Eg/ELXNeFPIhbxuse1NuCglqVTSVV3z07elkX6+dguarJc2sXj7KM6E+6jEN
38gAl+B5PtxZRvJKq9Mw16tLX5UhEB6VE9FXMoM5N/u7qaoESgVKaXL2JPor
e9r6jAjEZER5DRwhYeM8qWRmTMDHeXpXmROJ7HXrTt0XekdtbbkDjUSSPb3R
yYRAXNLJ5nhvEnk+kf2vTQmcNUqdW3edhLuL4BrzewJqkVutpR6SoNrf9PY3
J7Bq8tsGfhEJvY2GKy1C90x/6H7IJDGjfzRupwWBO7QK98OPSGgw5ujvhV7T
dr4UVUtCZtunWqufCPR1JWWKs4V/s95Pla0JPI1eOsXmkkjcFkwPFTr5gKdW
HkHiX0+V77hC2xXoVZoPkLhv4hsSZ0Pg+bWO1ohxEiGJ4ye+2BJg7Nmf5DRF
wppuWXHEjkDQSLqrKkniktIvq0VCa9r7D9Z/IWFuWuzvbk9AQpSTf2eJxI34
2aQnQg9VHfDzWiZhar1cIO9AoNYvT99ghYQirbXsvND3lWUX1tZIkLleJa+F
/g+Ql5ji
       "]]},
     Annotation[#, "Charting`Private`Tag$57129#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{422., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.70471816657929*^9, 3.7047181982363853`*^9, {3.7047182290494947`*^9, 
   3.7047182462897053`*^9}, {3.704722073418885*^9, 3.704722111104993*^9}, {
   3.704722146179756*^9, 3.704722211737151*^9}, 3.704736507089429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"prs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "4"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qinwfs", "/.", "prs"}], ",", 
     RowBox[{"qoutwfs", "/.", "prs"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704733457521533*^9, 3.704733462091433*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"n", "\[Rule]", "4"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704733462422779*^9, 3.704736507204039*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JM63d/Ji4dpCiZGpKT4eRzrZBexh4f/7CaFD
       "]]},
     Annotation[#, "Charting`Private`Tag$57170#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xwXvfgt+4KA3clCay1CQkjtZUNrCgf2Ix1sBLoWXM2ef8P3IgXTflj3ziJdM
28cw3zhIDhYsMybm/+K0vmM4ELq+oD+N+Hzd+NOUcQ5uGfRzzHgUdKpue9oK
0sgcW7TckZgu37pMRoTGsdbW9d7EFvmRd0Km0ejwrMpJIp6dOif62CwaVf0/
xznED3w0PdZrkPeV7Db49lKw92xU/7WcRpabt1gYsaSbD/uRFo1pR1ekxhOf
dHy2f+EaGqciQpYUEeuZGZtP3UQjJo+fPETcv5U75eUWGnUD2nkifRTSEFV5
xojGC58FUTOJRdY0re83oyF3ReSWNvFbJQe1lj00lFTVNFyJg+QFWVfsaESn
DJ/3JV49+16q6T4a5UcD7p0nThTnzSlzIuNfLNmcTOw85Ct69xiNtZ0y7Hri
Iepyt1cwjbN2Du9VvlP4KtHiOnaBRqCyofQK4kqL+fzwMBqHCkUXrCW+9jbr
761LNLJTlz40IdZoqpnVEEdjwejgBVfiGTOlb9ol0rCpad/sRTxibaPMSqJx
Ov3Ru1PEVS2sFX9TaeTZj9iHETt8EjRRz6Kx2XCf9m3irfLbGvIfkfEN/d0z
iJftu2a9KZfGSb9zZ7KJR78ucLLNJ88/NhUpIW5XPMLpLqShXy8ZXE782iH7
uEcJ8abyhlfEMZ16p0PLaVio9bQ2EPsrX5iY8ZJG+iW7603Ejs5UaPIrGilL
SpXaiJez7GKe1tJ4mrftQQexrGraPLyhYXrM714P8e/D9C2qgcaRwWgvmria
9n3Y1USD2xbv30/8SO35SvcWGj8+BeX/JL7+P5Hi0TYa1G/7F4PEZ7LMDUI+
05AKUk0eIXbqjamS/kajL6/T5A+x8fLPZjc7aIjXR70aI17hrty4pJtG6nQN
6QniWTmutk9YNA5mFmsI9lP405/7TZ+mcbV53Rxh4k6tkUN1XBr9pVmNIsQ1
Xga83X1kfUVIHZhCnPM41Kuzn8ago0vxVOLYgfrhYz9pvD74qEeM+OzqWQEj
v2goZHHapxE7++wTvjBMw37nzCxxYtOCOxelftPwOrrKSIJYa5grnfSXRv0/
w7xJz9FdGa86TsNV0bR30mOn/Oc/FmBQ+cZgeNI9xRV3Ngoz6Jim1jhp6vcU
9VpRBhbNwv9NOm+DZa61GAMFlabhyfESzsat6RBnwOHGbJ70ubKvpW6SDN7M
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
oMJQ
       "]]},
     Annotation[#, "Charting`Private`Tag$57170#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.704733462422779*^9, 3.704736507259721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]BD", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
        RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", "mychange"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Rule]", "4"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.1"}], ",", 
      RowBox[{"m", "\[Rule]", "0.1"}], ",", 
      RowBox[{"p", "\[Rule]", "0.45"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "4", ",", "10000000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704722254695825*^9, 3.704722354463731*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.704722259054316*^9, 3.7047223553436737`*^9}, 
   3.704736507433374*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WF", "Subsection",
 CellChangeTimes->{{3.704715650149356*^9, 3.704715651674753*^9}}],

Cell[CellGroupData[{

Cell["In", "Subsubsection",
 CellChangeTimes->{{3.704715653388241*^9, 3.704715655014698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qinwf", "=", 
  RowBox[{
   RowBox[{"QinWF", "/.", "mychange"}], "//", "FullSimplify"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "d"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.704715664506629*^9, 3.704736508146644*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M1", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2", "=", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704715667696094*^9, 3.70471569325393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qinwfs", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "d"}], " ", "+", " ", "M1", "+", "M2"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", "M1", "+", "M2"}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7047156950677843`*^9, 3.704715732161901*^9}, {
  3.704732912147952*^9, 3.704732917111946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qinwf", "-", "qinwfs"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047156950677843`*^9, 3.704715732161901*^9}, {
  3.704732912147952*^9, 3.704732925263851*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704715728858348*^9, 3.704715732548258*^9}, 
   3.704736508278776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["M1"], "Input",
 CellChangeTimes->{{3.704715738300789*^9, 3.7047157384437237`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "d"}], 
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]]], "Output",
 CellChangeTimes->{3.704715738801281*^9, 3.7047365084110737`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M1s", "=", 
   FractionBox[
    RowBox[{"d", "-", "1"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}]}], "-", "1"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"d", "-", "1"}], ")"}], "2"]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M1", "-", "M1s"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704715744649213*^9, 3.70471578584769*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704715768609644*^9, 3.7047157864956217`*^9}, 
   3.704736508532587*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"QinWF", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"qinwf", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704715472962454*^9, 3.70471547869829*^9}, {
  3.7047155201429253`*^9, 3.704715524159232*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7047154794389553`*^9, 3.704715524499091*^9, 
  3.704736508841934*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7047154794389553`*^9, 3.704715524499091*^9, 
  3.70473650890763*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"QinWF", ",", 
   RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"qinwf", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704715498161409*^9, 3.704715535392399*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["din", "2"], "-", 
     RowBox[{"2", " ", "din", " ", "dself"}], "+", 
     SuperscriptBox["dself", "2"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", "m"}], "-", 
   SuperscriptBox["m", "2"], "-", 
   RowBox[{"2", " ", "m", " ", "n"}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", "n"}], "+", 
   RowBox[{
    SuperscriptBox["din", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
   RowBox[{"2", " ", "din", " ", "dself", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["dself", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
   RowBox[{"2", " ", "\[Mu]"}], "-", 
   RowBox[{"4", " ", "m", " ", "\[Mu]"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["m", "2"], " ", "\[Mu]"}], "-", 
   RowBox[{"2", " ", "n", " ", "\[Mu]"}], "+", 
   RowBox[{"4", " ", "m", " ", "n", " ", "\[Mu]"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["m", "2"], " ", "n", " ", "\[Mu]"}], "-", 
   SuperscriptBox["\[Mu]", "2"], "+", 
   RowBox[{"2", " ", "m", " ", 
    SuperscriptBox["\[Mu]", "2"]}], "-", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}], "+", 
   RowBox[{"n", " ", 
    SuperscriptBox["\[Mu]", "2"]}], "-", 
   RowBox[{"2", " ", "m", " ", "n", " ", 
    SuperscriptBox["\[Mu]", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", "n", " ", 
    SuperscriptBox["\[Mu]", "2"]}]}]]], "Output",
 CellChangeTimes->{{3.704715504652947*^9, 3.704715535704596*^9}, 
   3.704736509334394*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.704715504652947*^9, 3.704715535704596*^9}, 
   3.704736509612158*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Out", "Subsubsection",
 CellChangeTimes->{{3.7047160060141087`*^9, 3.7047160074965677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qoutwf", "=", 
  RowBox[{
   RowBox[{"QoutWF", "/.", "mychange"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704714295829034*^9, 3.704714296421957*^9}, {
  3.704716012546954*^9, 3.7047160138987226`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]]}], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}]]], "Output",
 CellChangeTimes->{
  3.704714297280725*^9, 3.7047155773364162`*^9, {3.704716010726532*^9, 
   3.7047160142509193`*^9}, 3.704736509797051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qoutwfs", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"d", "-", "1"}]], "M1"}], "+", "M2"}], 
    RowBox[{
     RowBox[{"d", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], "+", "M1", "+", "M2"}]], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7047160154926863`*^9, 3.704716066170251*^9}, {
  3.704732937743149*^9, 3.704732957472468*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]]}], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}]]], "Output",
 CellChangeTimes->{{3.704732952915331*^9, 3.704732958238824*^9}, 
   3.704736509919538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qoutwfs", "-", "qoutwf"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047160154926863`*^9, 3.704716066170251*^9}, {
  3.704732937743149*^9, 3.704732947393251*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.70471601703057*^9, 3.704716066755136*^9}, 
   3.704736510032934*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExportForR", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xx", "}"}], ",", 
    RowBox[{
     RowBox[{"xx", "=", 
      RowBox[{"x", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"d", "\[Rule]", "ndemes"}]}], "}"}]}]}], ";", "xx"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.704724278762743*^9, 3.704724329260857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExportForR", "[", "qinm", "]"}]], "Input",
 CellChangeTimes->{{3.7047243125583897`*^9, 3.704724318461994*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"mu", "-", 
      RowBox[{"mu", " ", "ndemes"}], "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"mu", " ", "ndemes"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "mu"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "ndemes"}], ")"}]}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "ndemes"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7047243189690933`*^9, 3.704724330725264*^9}, 
   3.704736510052829*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export to R", "Section",
 CellChangeTimes->{{3.704804789406005*^9, 3.704804792687071*^9}}],

Cell[CellGroupData[{

Cell["Export to R the Q results", "Subsubsection",
 CellChangeTimes->{{3.702201500553801*^9, 3.702201503237453*^9}, {
  3.704803404476313*^9, 3.7048034064996977`*^9}}],

Cell["Rewrite the Greek letters", "Text",
 CellChangeTimes->{{3.702202576100587*^9, 3.702202585533182*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GreekTerms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", "\[Rule]", "sel"}], ",", " ", 
    RowBox[{"\[Mu]", "\[Rule]", "mut"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702201509383871*^9, 3.702201525212894*^9}, {
  3.704724390807227*^9, 3.70472439943757*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Omega]", "\[Rule]", "sel"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "mut"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70220152616304*^9, 3.7022030131218777`*^9, 
  3.7022897635244837`*^9, 3.704179086467165*^9, 3.7045177944473457`*^9, 
  3.704724393799959*^9, 3.7047246634923162`*^9, 3.704736510164259*^9}]
}, Open  ]],

Cell["Common parts to all functions", "Text",
 CellChangeTimes->{{3.7022025881711607`*^9, 3.7022025922143908`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "FunctionPartB", "=", 
   "\"\< <- function(p, sel, mut, m, g, n, d, Idself, Ieself){\n## Arguments:\
\n#  p   mutation bias\n#  sel intensity of selection\n#  mut mutation \
probability\n#  m   emigration probability\n#  g   proportion of interactions \
out of the group (interaction equivalent of m)\n#  n   deme size\n#  d   \
number of demes\n#  Idself whether reproduction in site where the parent is\n\
#  Ieself whether interactions with oneself\nreturn(\n\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionPartE", "=", "\"\<)\n}\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.702201586590098*^9, 3.702201660652206*^9}, {
  3.702202515399782*^9, 3.70220251599327*^9}, {3.702202562602117*^9, 
  3.702202562914797*^9}, {3.702202598064639*^9, 3.702202697296604*^9}, {
  3.702202988690043*^9, 3.702203007885222*^9}, {3.704724417045898*^9, 
  3.7047244695037813`*^9}}],

Cell["Function to translate Mathematica to R", "Text",
 CellChangeTimes->{{3.702202703211164*^9, 3.702202713861825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToRForm", "[", "x_", "]"}], ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"x", "/.", "GreekTerms"}], "//", "CForm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702201842966589*^9, 3.702201859620515*^9}}],

Cell["Do it for Q", "Text",
 CellChangeTimes->{{3.704724511134218*^9, 3.704724513442933*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RtxtQinM", "=", 
   RowBox[{"\"\<QinM \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{"QinM", "/.", "genericde"}], "//", "FullSimplify"}], "]"}], "<>",
     "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtQoutM", "=", 
   RowBox[{"\"\<QoutM \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{"QoutM", "/.", "genericde"}], "//", "FullSimplify"}], "]"}], "<>",
     "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtQinWF", "=", 
   RowBox[{"\"\<QinWF \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{"QinWF", "/.", "genericde"}], "//", "FullSimplify"}], "]"}], "<>",
     "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtQoutWF", "=", 
   RowBox[{"\"\<QoutWF \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{"QoutWF", "/.", "genericde"}], "//", "FullSimplify"}], "]"}], "<>",
     "FunctionPartE"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704724517750942*^9, 3.704724604063252*^9}}],

Cell["Define Power function in R", "Text",
 CellChangeTimes->{{3.7022027318210173`*^9, 3.702202737612219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PowerDef", "=", "\"\<Power <- function(a,b) return(a^b)\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702201909153489*^9, 3.7022019359137297`*^9}, {
  3.7022019780679827`*^9, 3.702201985090732*^9}}],

Cell["Combine all texts", "Text",
 CellChangeTimes->{{3.702202739839615*^9, 3.702202745125101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rtxt", "=", 
   RowBox[{
   "PowerDef", "<>", "\"\<\n\n\>\"", "<>", "RtxtQinM", "<>", "\"\<\n\n\>\"", "<>",
     "RtxtQoutM", "<>", "\"\<\n\n\>\"", "<>", "RtxtQinWF", "<>", 
    "\"\<\n\n\>\"", "<>", "RtxtQoutWF"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7022019405139227`*^9, 3.702201966147601*^9}, {
  3.7047246131819277`*^9, 3.704724637059588*^9}}],

Cell["Export to txt file (Mathematica did not want R)", "Text",
 CellChangeTimes->{{3.702202748144455*^9, 3.70220275825738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/\
analyticsQ.txt\>\"", ",", "Rtxt"}], "]"}]], "Input",
 CellChangeTimes->{{3.702201967861699*^9, 3.702202007961507*^9}, {
   3.702202094017145*^9, 3.7022021946253023`*^9}, 3.7047246446676083`*^9}],

Cell[BoxData["\<\"Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/\
Mathematica/analyticsQ.txt\"\>"], "Output",
 CellChangeTimes->{
  3.702202524914173*^9, {3.702202890923276*^9, 3.702202914995228*^9}, 
   3.702203013730056*^9, 3.702289763908019*^9, 3.704179086596553*^9, 
   3.704517795029635*^9, 3.704724670583206*^9, 3.7047365173451138`*^9}]
}, Open  ]],

Cell["Convert the file extension to R", "Text",
 CellChangeTimes->{{3.702202760522964*^9, 3.702202776867174*^9}}],

Cell[BoxData[
 RowBox[{"<<", 
  "\"\<!mv Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/\
analyticsQ.txt \
Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/analyticsQ.\
R\>\""}]], "Input",
 CellChangeTimes->{{3.7022022612757597`*^9, 3.702202281727586*^9}, {
  3.7047246545885*^9, 3.7047246565359173`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Export to R the \[Beta] and \[Gamma] functions", "Subsubsection",
 CellChangeTimes->{{3.702201500553801*^9, 3.702201503237453*^9}, {
  3.704803404476313*^9, 3.7048034241860743`*^9}}],

Cell["Rewrite the Greek letters", "Text",
 CellChangeTimes->{{3.702202576100587*^9, 3.702202585533182*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GreekTerms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", "\[Rule]", "sel"}], ",", " ", 
    RowBox[{"\[Mu]", "\[Rule]", "mut"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.702201509383871*^9, 3.702201525212894*^9}, {
  3.704724390807227*^9, 3.70472439943757*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Omega]", "\[Rule]", "sel"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "mut"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70220152616304*^9, 3.7022030131218777`*^9, 
  3.7022897635244837`*^9, 3.704179086467165*^9, 3.7045177944473457`*^9, 
  3.704724393799959*^9, 3.7047246634923162`*^9, 3.704736510164259*^9, 
  3.704803775109002*^9}]
}, Open  ]],

Cell["Common parts to all functions", "Text",
 CellChangeTimes->{{3.7022025881711607`*^9, 3.7022025922143908`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "FunctionPartB", "=", 
   "\"\< <- function(p, sel, mut, m, g, n, d, Idself, Ieself){\n## Arguments:\
\n#  p   mutation bias\n#  sel intensity of selection\n#  mut mutation \
probability\n#  m   emigration probability\n#  g   proportion of interactions \
out of the group (interaction equivalent of m)\n#  n   deme size\n#  d   \
number of demes\n#  Idself whether reproduction in site where the parent is\n\
#  Ieself whether interactions with oneself\nreturn(\n\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionPartE", "=", "\"\<)\n}\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.702201586590098*^9, 3.702201660652206*^9}, {
  3.702202515399782*^9, 3.70220251599327*^9}, {3.702202562602117*^9, 
  3.702202562914797*^9}, {3.702202598064639*^9, 3.702202697296604*^9}, {
  3.702202988690043*^9, 3.702203007885222*^9}, {3.704724417045898*^9, 
  3.7047244695037813`*^9}}],

Cell["Function to translate Mathematica to R", "Text",
 CellChangeTimes->{{3.702202703211164*^9, 3.702202713861825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToRForm", "[", "x_", "]"}], ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"x", "/.", "GreekTerms"}], "//", "CForm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702201842966589*^9, 3.702201859620515*^9}}],

Cell["Do it for \[Beta] and \[Gamma]", "Text",
 CellChangeTimes->{{3.704724511134218*^9, 3.704724513442933*^9}, {
  3.704803452274454*^9, 3.704803455115556*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RtxtbBDD", "=", 
   RowBox[{"\"\<bBDD \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]BDD", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
    "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtbBDI", "=", 
   RowBox[{"\"\<bBDI \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]BDI", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
    "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtcBDD", "=", 
   RowBox[{"\"\<cBDD \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]BDD", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
    "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtcBDI", "=", 
   RowBox[{"\"\<cBDI \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]BDI", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
    "FunctionPartE"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704724517750942*^9, 3.704724604063252*^9}, {
   3.704803463935075*^9, 3.704803684371352*^9}, 3.704803938490445*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RtxtbDBD", "=", 
     RowBox[{"\"\<bDBD \>\"", "<>", "FunctionPartB", "<>", 
      RowBox[{"ToRForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]DBD", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
            RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
         "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
      "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RtxtbDBI", "=", 
     RowBox[{"\"\<bDBI \>\"", "<>", "FunctionPartB", "<>", 
      RowBox[{"ToRForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]DBI", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
            RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
         "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
      "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RtxtcDBD", "=", 
     RowBox[{"\"\<cDBD \>\"", "<>", "FunctionPartB", "<>", 
      RowBox[{"ToRForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Gamma]DBD", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
            RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
         "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
      "FunctionPartE"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RtxtcDBI", "=", 
     RowBox[{"\"\<cDBI \>\"", "<>", "FunctionPartB", "<>", 
      RowBox[{"ToRForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Gamma]DBI", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Qin", "\[Rule]", "QinM"}], ",", 
            RowBox[{"Qout", "\[Rule]", "QoutM"}]}], "}"}]}], "/.", 
         "genericde"}], "//", "FullSimplify"}], "]"}], "<>", 
      "FunctionPartE"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.704724517750942*^9, 3.704724604063252*^9}, {
  3.704803463935075*^9, 3.704803684371352*^9}, {3.704803938490445*^9, 
  3.7048039400125237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RtxtbWFD", "=", 
   RowBox[{"\"\<bWFD \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]WFD", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "Simplify"}], "]"}], "<>", "FunctionPartE"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtbWFI", "=", 
   RowBox[{"\"\<bWFI \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]WFI", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "Simplify"}], "]"}], "<>", "FunctionPartE"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RtxtcWFD", "=", 
   RowBox[{"\"\<cWFD \>\"", "<>", "FunctionPartB", "<>", 
    RowBox[{"ToRForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]WFD", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
          RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", 
       "genericde"}], "//", "Simplify"}], "]"}], "<>", "FunctionPartE"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704724517750942*^9, 3.704724604063252*^9}, {
   3.704803463935075*^9, 3.704803684371352*^9}, {3.704803938490445*^9, 
   3.7048039400125237`*^9}, 3.7048042118459272`*^9, {3.704804392342845*^9, 
   3.70480439722366*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RtxtcWFI", "=", 
    RowBox[{"\"\<cWFI \>\"", "<>", "FunctionPartB", "<>", 
     RowBox[{"ToRForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]WFI", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Qin", "\[Rule]", "QinWF"}], ",", 
           RowBox[{"Qout", "\[Rule]", "QoutWF"}]}], "}"}]}], "/.", 
        "genericde"}], "//", "Simplify"}], "]"}], "<>", "FunctionPartE"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.704724517750942*^9, 3.704724604063252*^9}, {
   3.704803463935075*^9, 3.704803684371352*^9}, {3.704803938490445*^9, 
   3.7048039400125237`*^9}, 3.7048042118459272`*^9, 3.7048043981410503`*^9}],

Cell["Define Power function in R", "Text",
 CellChangeTimes->{{3.7022027318210173`*^9, 3.702202737612219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PowerDef", "=", "\"\<Power <- function(a,b) return(a^b)\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702201909153489*^9, 3.7022019359137297`*^9}, {
  3.7022019780679827`*^9, 3.702201985090732*^9}}],

Cell["Combine all texts", "Text",
 CellChangeTimes->{{3.702202739839615*^9, 3.702202745125101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rtxt", "=", 
   RowBox[{
   "PowerDef", "<>", "\"\<\n\n\>\"", "<>", "RtxtbBDD", "<>", "\"\<\n\n\>\"", "<>",
     "RtxtbBDI", "<>", "\"\<\n\n\>\"", "<>", "RtxtcBDD", "<>", "\"\<\n\n\>\"",
     "<>", "RtxtcBDI", "<>", "\"\<\n\n\>\"", "<>", "RtxtbDBD", "<>", 
    "\"\<\n\n\>\"", "<>", "RtxtbDBI", "<>", "\"\<\n\n\>\"", "<>", "RtxtcDBD", 
    "<>", "\"\<\n\n\>\"", "<>", "RtxtcDBI", "<>", "\"\<\n\n\>\"", "<>", 
    "RtxtbWFD", "<>", "\"\<\n\n\>\"", "<>", "RtxtbWFI", "<>", "\"\<\n\n\>\"", 
    "<>", "RtxtcWFD", "<>", "\"\<\n\n\>\"", "<>", "RtxtcWFI"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7022019405139227`*^9, 3.702201966147601*^9}, {
  3.7047246131819277`*^9, 3.704724637059588*^9}, {3.704803694719769*^9, 
  3.704803749843987*^9}}],

Cell["Export to txt file (Mathematica did not want R)", "Text",
 CellChangeTimes->{{3.702202748144455*^9, 3.70220275825738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/\
analyticsBC.txt\>\"", ",", "Rtxt"}], "]"}]], "Input",
 CellChangeTimes->{{3.702201967861699*^9, 3.702202007961507*^9}, {
   3.702202094017145*^9, 3.7022021946253023`*^9}, 3.7047246446676083`*^9, {
   3.7048037577002163`*^9, 3.704803757783225*^9}}],

Cell[BoxData["\<\"Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/\
Mathematica/analyticsBC.txt\"\>"], "Output",
 CellChangeTimes->{
  3.702202524914173*^9, {3.702202890923276*^9, 3.702202914995228*^9}, 
   3.702203013730056*^9, 3.702289763908019*^9, 3.704179086596553*^9, 
   3.704517795029635*^9, 3.704724670583206*^9, 3.7047365173451138`*^9, 
   3.70480441427888*^9}]
}, Open  ]],

Cell["Convert the file extension to R", "Text",
 CellChangeTimes->{{3.702202760522964*^9, 3.702202776867174*^9}}],

Cell[BoxData[
 RowBox[{"<<", 
  "\"\<!mv Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/\
analyticsBC.txt \
Documents/Work/Projects/2016_SocEvolSubdivPop/Programs/Mathematica/\
analyticsBC.R\>\""}]], "Input",
 CellChangeTimes->{{3.7022022612757597`*^9, 3.702202281727586*^9}, {
  3.7047246545885*^9, 3.7047246565359173`*^9}, {3.7048037640761023`*^9, 
  3.704803767929439*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section",
 CellChangeTimes->{{3.704732327958726*^9, 3.704732333583967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "d"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"2", " ", "\[Mu]"}], "-", 
       SuperscriptBox["\[Mu]", "2"]}]]}], 
    RowBox[{
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"2", " ", "\[Mu]"}], "-", 
       SuperscriptBox["\[Mu]", "2"]}]]}]], "//", 
   "Factor"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Numerator", "[", "tmp", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Denominator", "[", "tmp", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7047323368509207`*^9, 3.704732367364793*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "m"}], "-", 
        RowBox[{"2", " ", "d", " ", "m"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox["m", "2"]}], "-", 
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{"4", " ", "d", " ", "\[Mu]"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d", "2"], " ", "\[Mu]"}], "-", 
        RowBox[{"4", " ", "d", " ", "m", " ", "\[Mu]"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["d", "2"], " ", "m", " ", "\[Mu]"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", "\[Mu]"}], "+", 
        SuperscriptBox["\[Mu]", "2"], "-", 
        RowBox[{"2", " ", "d", " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{"2", " ", "d", " ", "m", " ", 
         SuperscriptBox["\[Mu]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d", "2"], " ", "m", " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["d", "2"], " ", 
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "+", 
      RowBox[{"2", " ", "d", " ", "m"}], "-", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{"2", " ", "\[Mu]"}], "-", 
      RowBox[{"4", " ", "d", " ", "\[Mu]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", "\[Mu]"}], "+", 
      RowBox[{"4", " ", "m", " ", "\[Mu]"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "\[Mu]"}], "+", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["m", "2"], " ", "\[Mu]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "\[Mu]"}], "-", 
      RowBox[{"4", " ", "d", " ", "m", " ", "n", " ", "\[Mu]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n", " ", "\[Mu]"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n", " ", "\[Mu]"}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"10", " ", "d", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"2", " ", "m", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"8", " ", "d", " ", "m", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"4", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"8", " ", "d", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"10", " ", "d", " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "-", 
      RowBox[{"10", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"8", " ", "d", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"8", " ", "d", " ", "m", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"4", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"8", " ", "d", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"8", " ", "d", " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "-", 
      SuperscriptBox["\[Mu]", "4"], "+", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Mu]", "4"]}], "-", 
      RowBox[{"2", " ", "d", " ", "m", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["\[Mu]", "4"]}], "+", 
      RowBox[{"n", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "-", 
      RowBox[{"2", " ", "d", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "+", 
      RowBox[{"2", " ", "d", " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"], " ", "m", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["m", "2"], " ", "n", " ", 
       SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.704736517484899*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
     "\[Mu]"}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7047365176699057`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  "-", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
  "+", 
  RowBox[{"d", " ", 
   SuperscriptBox["m", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.704736518336794*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"tmp", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", 
    RowBox[{"1", "-", "n\[Mu]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704732402941826*^9, 3.704732411565143*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "m"}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox["n\[Mu]", "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", "m"}]}], ")"}], " ", 
     SuperscriptBox["n\[Mu]", "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
     SuperscriptBox["n\[Mu]", "4"]}], "+", 
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["n\[Mu]", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
        SuperscriptBox["n\[Mu]", "2"]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.704732338405517*^9, 3.704732367907894*^9}, 
   3.7047324129838676`*^9, 3.704736519385324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["QinM"], "Input",
 CellChangeTimes->{{3.704732472144676*^9, 3.7047324726679983`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "din", "-", "dself"}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "din", "-", "dself", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "din", "-", "dself"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "din", "-", "dself", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "din"}], "+", "dself", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], " ", 
       "\[Mu]"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "dself", "+", 
      RowBox[{"din", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dself", "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.704732473105*^9, 3.704736519507841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"tmp", "//", "FullSimplify"}], ",", "\[Mu]", ",", "FullSimplify"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.704732492385028*^9, 3.704732513256215*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       "\[Mu]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "+", 
    RowBox[{"d", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.704732497980986*^9, 3.704732513643505*^9}, 
   3.704736519826211*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047325198246603`*^9, 3.704732524008453*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       "\[Mu]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}], "+", 
    RowBox[{"d", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.704732520343232*^9, 3.7047325243765907`*^9}, 
   3.704736519918194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Numerator", "[", "tmp", "]"}], ",", " ", "\[Mu]", ",", 
   "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.704732551668324*^9, 3.7047325649241333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}]}], " ", "m"}], "+", 
  
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "m"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
        SuperscriptBox["m", "2"]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5"}], "-", 
     RowBox[{"2", " ", "m"}], "-", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], "+", 
        RowBox[{"5", " ", "d", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "+", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", "m"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
   SuperscriptBox["\[Mu]", "3"]}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
   SuperscriptBox["\[Mu]", "4"]}]}]], "Output",
 CellChangeTimes->{{3.704732559668481*^9, 3.7047325654330883`*^9}, 
   3.7047365200962057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.704733345657572*^9, 3.704733349202239*^9}}],

Cell[CellGroupData[{

Cell["Moran", "Subsubsection",
 CellChangeTimes->{{3.7047334990525312`*^9, 3.704733501051558*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"qinms", ",", "m"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704733012000565*^9, 3.7047331714380713`*^9}, {
  3.704733226930266*^9, 3.704733274750944*^9}, {3.7047333104602213`*^9, 
  3.7047333107358932`*^9}, {3.704733502831873*^9, 3.7047335060506697`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", "n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
   SuperscriptBox["\[Mu]", "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
     "-", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}],
     ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704733099321416*^9, 3.7047331719347963`*^9}, 
   3.704733228027577*^9, {3.704733258897114*^9, 3.7047332751087837`*^9}, 
   3.704733311161195*^9, 3.704733506828928*^9, 3.704736520388345*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704733099321416*^9, 3.7047331719347963`*^9}, 
   3.704733228027577*^9, {3.704733258897114*^9, 3.7047332751087837`*^9}, 
   3.704733311161195*^9, 3.704733506828928*^9, 3.704736520390943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"qoutms", ",", "m"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704733012000565*^9, 3.7047330500054007`*^9}, {
  3.7047335115587597`*^9, 3.7047335151066313`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.704733014129746*^9, 3.704733040684847*^9}, 
   3.704733328084034*^9, 3.704733515780436*^9, 3.7047365205225697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], "\[Mu]"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704733014129746*^9, 3.704733040684847*^9}, 
   3.704733328084034*^9, 3.704733515780436*^9, 3.704736520540209*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WF", "Subsubsection",
 CellChangeTimes->{{3.704733491200165*^9, 3.704733492688089*^9}}],

Cell[CellGroupData[{

Cell[BoxData["qinwfs"], "Input",
 CellChangeTimes->{{3.704734214030615*^9, 3.7047342169301767`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "d"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.704734217285788*^9, 3.70473652063701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], ")"}]}], "-", "M2"}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.704735434582507*^9, 3.704735459584999*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7047354384331408`*^9, 3.7047354599174423`*^9}, 
   3.704736520723526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"qinwfs", "\[Equal]", "0"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704734993785996*^9, 3.704735002909568*^9}, {
  3.704735376034975*^9, 3.704735376763887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d", "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", "\[Mu]"}], 
       "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        SuperscriptBox["\[Mu]", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]]}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d", "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", "\[Mu]"}], 
       "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
        SuperscriptBox["\[Mu]", "2"]}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]]}], 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "0"}], ",", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.70473499835198*^9, 3.7047350037326403`*^9}, 
   3.70473537755683*^9, 3.70473652113048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "10"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.001"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704735378584794*^9, 3.704735402090644*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"-", "0.009132651676925911`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "1.8091326516769257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.001`", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "\[Rule]", "0"}], ",", 
     RowBox[{"m", "\[Rule]", "0.0009995000000000002`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.704735390314617*^9, 3.704735402467936*^9}, 
   3.704736521229541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d", "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", "\[Mu]"}], "+", 
     
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "d", " ", 
      SuperscriptBox["\[Mu]", "2"]}], "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]]}], 
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "x"}]}], ")"}]}], 
       ">", "0"}]}], "]"}]}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "Red"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "2", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704735047089939*^9, 3.7047350772632723`*^9}, {
  3.7047351109362707`*^9, 3.704735123596858*^9}, {3.704735248654055*^9, 
  3.704735354958407*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxl2Qc4le3/AHCZFRllZpVNMktGfG8jMo9jnZQQ2ZV5zINjr5JQRppIg1Iq
ooREQ0WlomRUyFaREP/76H297/v7d7lyfa7n8dz3ucf3+72fs9HF18qNno6O
Lgn/R/ttnCmBf9qAq+FMi6DOCkT3739KBLR02TgAlhxE/K/Z7P7r/71fxgQt
1ixGZe/LAHFxmdIvMYDe3z6IfyL+XOcmoGlVuor79wvh87pEFw9fOURV5N3U
bZQEUyHzK3VEDJGNVmgQmosEuYDgNa/FiaicrbM9UiMaTIKZGprJlsgpIyes
/XU9DJjaL/z8wI6WHv++Fd60ce53iVzx3/bMCP817u+28+tHZH7UQbFUkXXN
Jk7k3LtHJLzgMlBF7jt01okjSdrHCY6k3d/T5/fX5z9Epdl5rzEBfaA9L/mP
d/AR0PGf6nYhHsfgIjUu//QVbXR7lErxPfwYnF9XmXDpM6O+c1R9O+s2eBsV
VdjEuwIdaD5x8HBRGxz6EJgb/JoOsc/KW2UWtcKgdqyjxdUVyITWYAR1ub/E
9cWDkTOt8E0hoHnWdQWi3MoeKZHLgf08Hm2Ju9WQwSozsxxSGghpP94x36H3
3/nE88UR91r1hGcALKYpHAz/bfvf69kkZO9o9kU5xwOEa1jHN50l/TWfLn/a
T/zbLTAduJWBbM/43+vL68FleX7/sx6wGcVzTR1+JwBXiNKzR55Gf+aDGLI0
viaMdkg/zu/e2KErUDEcEOGwWRxFUU96zhY+AAeD9Ie829kQM8PIVV3nMDiy
OFKso22DFtzWK6m9CQGFwbDM5lRbtOurbPK4ayiMcWmcnVljizppzzcOWe6f
nF5a+resUGDd/oHh52cbpB0T0Vs8cRboilZdyahRQN/O71itGVkF7c7bTqyf
4kF+tbazXzaeg36CqPPN/Qp/ra/gP897QUT5FZNCiU5RIOpqkxY4bIlkOFNH
z6tVQ9DhLRx0J7hR4zbplJreekDFivlOj9j/+/di/7Mesf8zH8v77a/xjP2f
/Yd9aOkBkX8sS/jv/Wb/M/7Y/2lf53+M19fOpT8IW37eTlP3PgatB/BED3F7
P2ZD3t3iY1mCrXAoxH69pQL9n/7aLLV/djCeiLI5g7V1q8ngJsnTRFs/mg+d
eF6zBIOCaIpPjjkJGTJoSm94RYbWNfS+txNISCfpl8uoeDzkie8j8x02RoQu
u4w9s0HAwLTVQTR0F1qKT3XkpfVhkUdCSZcDxkKmySD5Q2zttNNf6/FK3HK8
2RWhf29VeilcOZ9Efe8vhrx3nOOPbCuBGMlA4mp6KcQ84K2pqN8Icspdb+/4
sSJ1+82TPm1BwH+m3Eb44i7U0OJh6G9+GgTGt5O8pJQRXjP0jZMnoT+f/wEp
S+XPfo9f2o8bXokQ/qyvgCWfrUUEJPsj4gdBqQSG7FfEOOZI/ZnfDsryevl7
ar92MfD4sBJQQZZrmR2zJ4RT79x8bENA+VaS7pXS7pC9xdtz2pOI7g4qVgf3
eUBRv4rmQXy/jtOqjXpUF7A/oedmw2aCiudvi1ZuIwNPfATbiKIJmmB56xB8
LhSSrSjhh/D9hlwSe75oREFqb+51mpNiV0lbfAuDdVlq0hbJ+PkBoVPUo6Gw
ATgTHuH2M8eiw90tIiHo23Mx2vVo/srbEp5UmK/9aE67/nf/9ypWZIT9K35I
t7dntUeTUDzB/3RYqies13yr9gZb/xjbRs3iOIAfsnTDuH9/r0/Pvt/qc5x2
yP2N4JEIR3sgrsq1O4D7l9CoPRluEAL3+se+zOLrBpeqFvRKwkG4bp6Y94SI
5HUEeEGBDPay7orH2ohordXxlLx2CpQfTOOj+e/+oL0nk6bw+E09uWX2LcEb
FGtij9A+z9/7YZxB5QFtfCWd76y8y2sP3Farcp/gz/dymPXIqFo89Mf6RasE
GaPz0ju59plXQ/cmekXZBG6UGzzofgzHZyUzYVUCjs9WjeX6luuDwdqe/5a0
JgkdviR/IC6jBUhudvnj8oxo+hQvR5viObilcvhErJkCCmLKcHR2eoDjg7tK
Uw4bsuIRuu0c0wYaTO9u90zQ/b/8FWQnfslFoh4uzJXdD1nBiWKn3lWtuXEa
vlXo87COKyG67Yeuy7EUgVfGSpmFtXIoIdJfOwv376ziQIo57h+SU/aJw/mi
6HUm6zTOF49LXid/Cz4GlGpZy7Rj2sjgh2zK5ZrHsIZFs+qeCDNqYjWRSh+8
DGWb4q5FpYr/NZ4NIELNxT/sqH0xeKZKowCMFyd2F+1XQTXbQiPou4PAVC3H
en3uLnRioPNrG97vnt/2Vubh/e4eyutU6tYI0YKLoURDViSYObFDgIsM1QrH
HjTt3YUuSJALh3gSoXzNvQtfLIzQrntvPsLXEFA745hVFmaLmnwdDwUFtMFW
fo+2tb/pUNCehCq9A2kwNXlFufupHgJv3dOc1Q9ggoWhfL0oGxp+OP1sODAU
Sn8GZgOdLXImbet1PFYKZ7VuhjX6iiGBPQEtTkMlIGBQuO/asCS6eE/wdczF
UMgrMU3LfWWD9CqKRtaEhEEAX2mcwiYb9M648T0HwzlwEtww8z5fAW2XfFjz
+kQVaHzaGOPazYOyXEwZ/O5dATXBtIPHZ8TQFqGDs7lBGVB3JZmveS8g7o2p
8otuSdBwgePq6ApDFE/n4v5ldRTcMXRLHl9PRI/a2YXkdKNhzeg67Xp/S/T6
IIPeMM4nhoRrXlo4n6ysZF/jY1gCReafvnvGSqFHVauDJjRaYUHYlqjCRY96
DFS3B+zKAaI9w5yCohq6oiVaV4nzDfPVjyfccL75EjZTJWkfAkGzD0No+V7N
9pUgS10cZN7fG0jC8YPiX81iTYwARtuqSTvsh3sG3Pa4+cLdKdYWWjzp/Cs/
GZw9V0CLHx/+Mj99335aPJhQsdf/YBoFm3TTrWhOyum+v+YoFThNfO7Q7v97
v1Wr7Jiwxc//e3+u3054RNv/b+KFxAzz98Eb4RvC/65HUkhZafI4f/Ax2XF8
DbGB0Y/bBmjxxVrz2WA5jnd9OpSleLddfKeKFo4vzIm6S/HlsHuMzgznIRiV
mFhBe/6ZGmZ7wZUmYLJ6+xGa/+6PCo/a/MF/9e+HCvsELd4k7dwQUZNCBt8U
7gGavVPNjh1LDgXVyH4RWnwZE7D1Tp8LBMuXa1Vo8UjH+Cmxv4cCdrzmNjT/
3f8sbZsUAo43b9DHFD0+GxhRT+In/Cv+ND95YkOLR/dTvn9pa3eAppliSVo8
4jjvOO+4NxIG/QJ+0fz38wTe9714avNPf5OaG+ce2fyT78vifURp8at6/Y2X
h66RgfGsi8JwLB4/CzGmUXZ/4Or0NqHFY9lNs/6W78jQaWlylGbNEoc7hBtk
WNm1by/Nf/KtGy1f+ZWc+Cu/fjn0x0dJf/LZY/Kya5y/nOJp8oP0rgSPewUk
VElbHpZ+tOsyczkkdHQ8nQTS8cC6LjxnKMkYveSqHPOUj4cuGcbTB2KMEc+W
7oRM5Xi4ppNeNBZujEh2LMJ3cfyNteG/4ofjr9aZa3ckT0bAiE3jsR243vFV
O/9sQi8MXHuqqVejiKjwWXZvzVAwvPe57ssXQURv9ydNJWYGgdXPEkdqCBE5
/OTwNNkRAkdKOPv34voy1UI1/Qh9MPjp6vCZMduhqmK7m6338f3vfXZqrrRD
X+bDOtdFBsJWcl6YzGo79DuohqlXJQgeFsoy7MsnobKhxpFI3gDwUF4b136S
hMQOmTYWPQ6EmCyzRjM8XhueH12rL+IPWw7ctFPLJCGPLKaLkaVxMPL+04Ka
lAnK9/MITr8TByUvlV2/cpug7HnC95G4f+qXnx4tXc9YYpe9+9XOR1fTqMsO
i0x1ExWNWraOTZxmr1TEsuk3UTgKFUKX3byC/Hm/GnnZhwnyj7O4g8F2lKdB
EZHQRBfyN+EJhvazuRW+QEI2B2wFVvDi6zaCxdd0SKhq1qu+Evs1y+kT49ok
JJQS5XWILxhsajYkK2LH8GVxSfIHw6tDhWG+20noS3HJnffY1mJSPte0SMhk
y919mQLB8LL9osM4zo9XG1pXGeN8aZWyyUIR+3wOlPr6tYCc1C3hb4gRHTzl
z5vq0wI3fssI0hkwIvXCQmqRewtotBfwsxsxIoZL7UO1+1qgvpSTV8iEET2/
ymLb4dACO+Pj18mZM6K8mxr3v5NaoHXPDKe6JSPaX+0jy26N87HqAXZDa0ak
WHcqS8aiBbpX97Da2DGiuYcvfuvh84x7n/UqF3yeMW136wh9SgGlluF6/wQi
uhfuMZvDRQHN5hiyfCIRKW7wEqwk4XjYwCc7gH3+off2N6fCweJe2YdzSUTE
KSgc3mf7z3lt04iZTfhQ9LLVzjvdVJT9x7q7Ari/eEQt24w9ISj/QuSySY05
rwlfKMt2Cb+8hUniH99pPH7r43wdcFOuKwhIcKKOnB6Wx3N1YGzYn8wmyYl+
eW/aXTFbB1Gcgp8WsQV0gktP/aqDik6C9ncpTqTBVb+QNFMHg0XxOf3SnGj3
Z1ZiwM86EPa9M9khw4nCK+0KHabrwEpjzPSZLCc6mXpuynCqDhIZxC/UyXGi
mr0jRsr4/FzzjER3E5+f2R1XqycoU+Hkuvsrn+ri+nN+7LRqaTR4vij31tcn
IL/tj585TEXB1rTzLTUGuN6lFM4n6EQBvVG2whZDAmq8G7npWlIkvKBPzCg1
IqCxedLud60UKKgN+SaBz9v82iopK9ZTwDvcy+aUCQH1dylxJ+H2CFf27FEE
AmL1Pp2+Hbcn+TAobHE7AZnwv//hjdub+3gk54UmAaU08e3Jw+21zVy4dUad
gB4F2dQ34/YurK175atGQCzix6SncXsU+Y5J2EJAO9qeHZHA7RENv3FwqhCQ
tqfUK4ai02CaZ9PdOK2EGtzMBcqOY++Wmry4oISMXIOc7JKwBWfojzAroxbn
k8WLoafB5MNjbn92ZWTl2DB80Rv71EkpW15l9HbPV2Urh9Ng7HhQXUNEGe21
5wydw+cPY1EwEcbnD8acxk3nRYNhxyt9w7EAIqpgABH/IjJ4P8vP5QwkIhe/
O5xIlgxHmyeHVLC5ulQZOK4Gwc36ndq22HXGV6e6cPzqqDlzNATb97bMYGll
IPy+Nd2bhy0sXtgZsT0QxMrNt9zFbjkq/MykPgAMLxclfsQm+zONZbpFwl2h
gcJMHyLa/MbVNXx/JLyPTffXwP6i2fBun2skzA5uhR5vIjp1ZoOFsUskCBC6
2JKwbRmjHyjti4Rtt+I7N2Ov8epS53eOBDtB+YuvvYjo4TOtq4uO+LwR84oc
gU1RyRcfwPkvayBcXww7hp+Hjm13JDj22hU4xxDR90CGH8q7IuF4bm8AGecD
txeTAyS7SHhGOGCcGofzrVzP+0h8HmVk+Sl6Bp9H7x5nTtlNjAR95xNpcXi/
Hj1qrCnsRYXNc7y6Lng9nbvb3XyNiQruqpurG7A9Xg1fjjeIhjM++qrieH0d
3szfdCkyCt4W2pfGYV9PMuh9js/bnB98JT9jv+n1m/8+ToGd3ImnDUwJaFbr
FJ+ALAVizAr4irHFdXdLPtCnAkWAsv+dMAHxpdY9C3saDXJn6w8dFCKgwWMt
lgc5ouGdFEsYvSDez3nvXjlbR0FimVlcjgABpZ77bGeTEwlbtmQekecnoD2X
JjqM3lOgr/ptTj0vAclfn3fQEqVAhq7weTseAqp3rE/icaRCQfSGu/dF8Xn0
HKFBVooKO95pIN6NBCTWXPMr4kM0jClZNx4QI6Bvpu8OFR2IhpyUAzsfiBNQ
Q+uPTy3zUYD6EloEJHF9YctlP3U4Cr5qnrH0k8Lxp3Pzc2HhKMjKqnrdJE1A
Kqf2aLUqUUGLj+DZjfszeV5fnng4Ghh+mV5zxY5ibe1dURkFTzt3Tg/g/rEG
OeTc6MXze3eH9gHs3A+DZq5skbDntF78BDcBSe4g03Nvo4A4FZ4GYXMbafAN
JFHh3UPu6mf485cUtdfFTBYCrGNgZFKUQxYh1W2Ww4VQe0n2Dcs2OTRlfKZP
9EshaCPLi6tBDhUIxX8f+1gId98Eh68xkkP6456Mte8KQevgKTNOghwaqjfn
OfKyEKoZGkXWkeTQsWwVKYeWQtDMH5rgcZJD2zz4tm1qKoQ7SlwP+D3k0EeN
eaPZ+4Wg0bztuKCvHMo5duYNV9ZjuFZ8YPVPbWY0s7soZnPGY6gxiAtUQszI
XuKSvPGRx/DoU94HLz1mVO3z6Tddfz3snbkrcrqeHe1tday2HKoH955a55Zq
dkS3tTP47Fg9+D6qOz9bwY4K82xVJ77VQ2h5w2eZMnZkuNA6Dj/rISa3UYp0
gR19dTErPTpXD2nUJs+EM+zoSHOzZ/diPWR7Prpcgc9rCXfTDhZKFICPF8XH
OkAFBfkWrbYQKQC10CuVvsEqyFXsXskMXwGsSOpkOByugqza2w0KuQrg2fFV
lhejVJBu8livOWsB5BapFzTGqiAlLZboGcYC2F/hMdiTqIJEx0SFChdOgmLD
iS2/U1UQ+zn1O+YzJ2Gu9SFV4KgKWrAm2s1MnoSm7h8tW7NUEOXhti2JH4Og
2KDiYSk+LxrV1ouodQbBuyfOT+pP7UJrK01X9bcHASuR/cWb87tQ17X278fb
gkDnbc2r4ZJdyEDTukrHyQVUxw3ea+N664+tID/k/KjIcVxvLvRkXvhFhsVu
A9ZcBxKSY33g/36GDC+f8Pw+tJeEHvIVW3JiF9/qH9vhSELOEkmKO36SIfRs
ZY+QEwnNKnmxh0+TwTQt+eV37DJNp5t6N/ZDmcM6+l8JuN65prebzm0/oBLZ
PpptJaToavn2w6tJaJjFls1bdSHiiSu4b7c7P4f9e82oqUakK/xKPBA7j90W
2zo5regKh9tiXX5jF/+syLnZ5wIiQnl6C9hhB3K0A467wHX3a2KL2J/Of02/
kR0HXdVa13OlTZC/V5ekRE0snBlNdLgmboIWFdvuHu+NgX0bXrI0iZqgI9ON
1iwrY0DCWrjig6AJErxXNRSqQIX+BE/H73wmyJrFnqH9UhRcqqpYtRrXn37Z
SLlqmgI+wws3N3CaoLo+OSYtpTiY3OzlQTsfLvb8WGm1Lhba5O8QaNbprmXz
mqbC9U2r1GmerebaSFcRDcfk7DfQHFZZLKMQFgn+spdW0izq3Pg78WIcHGg5
okLdZIIabqcMNhg3wpiCTXahJysaSVYyN2AnA88ln0vs+3YhlaQbrjGMZDgA
z2/vPbALhSRsCa+dDYKGdqXG0pBd6PbawdgcXM83G5Ws0cT1PF/K5itlq4Mh
MDSXM4HeDoUuBrx68CIIRC+lrGuls0Md5Kq5juxAeNoRziu4aIvM/LRGH9Il
QvH1wueKbkZogsRc/nwxAWw9twVucTdC2dAW8HYhAZhEn/JpeBghdemCrT2/
E+BWu+NdbU8jNBZDfefUEQLazpz6E0m2iNs7XnDyYwh8vkOeGo+1RZpWyY6x
n0Mgbd37kvFIW3Td1+L2tHPw8vvnFeOxJjMk8rKtDlV+/GURtOzzo8MBczsC
l31hMpdfySgElPPfOXuw2yE41J53cG8aHN5zeHyxXQ+5iEocOe2UBhZDZwep
r/VQQmsA9cW+NOAMu9W74pUeKompD6TbnwYvWZ50xrbpoScqnB7K7mmQfeLj
K4ZWPTTyyXG3i2ca2Ep+b4l/roc4jpeZZ3mnAd9NliamZ3ooSFKeG1U+AFH+
ML0WMTaUmNLOurf8AVBibQfbN7Gh3NEohvBLD6BjRDm9ewsbGviY9fmNXyis
TB989ZneFk31ZyZfPhAKd/lMZ8KYbRHD+DH5KM9Q8DtXJsSx2hat/ZnRStwf
ChKbOHWL1tgirrjXQfsySmF/6j4PVz8xVNc9KJCB3ebZJmWI7bv9d20ttraR
br8Mtkge1/5R7MuS14tZsZ9NSa4SOlYKvIwb3cZ8xRDFSvOqCXZcX4ZEG/al
O/xV1IES+CDMUqU/JokqBC5oug6WwErJCO3QUUlUG6Z6b8fXEtgiP95QOiKJ
HnXUgcxQCexTdd3ZOyyJtqdsGpc4GwpJvetULnXaoPTA2xMGPmFQfjrha/wW
G8Q5UF/8YuIseP9mphjWKKBjnvV2DL4Z8OCutaOLJyCn9tXmb7DVmfKvt7kD
2qxno3/JLwPKzHsYdd0AzV09pUHxzwCxE1K7yl0BPRYcUCQEZEDOxwNXRF0A
5SYrSYkFZgCrdMVCujMg96kwoSlsqu8v4oIjoJVGbr01Fkmw3oVx4gmfIRqq
2mBAZ5cEgtbIfZrTELXIfbhgsBfbgPJh42pDdLUgZ1XK/iQQ2lplZc5giM4x
TMV5MESBif/ALWVRIrp/0KeD4R0FUhu/OnK0ElFU//Vhwup/3mff9Oqb81gI
X/bQyFo26rewZYv66Qvl9ocu2+Z7oHx5Z8iytW5adn10ioL3ZzxN9IYtUXkB
0+labMt9TYo22JIJ1Y6nsRvFJHjcsTtOcnl0qbdCP+kJr+ZaenRx21EHta2t
QIYNj6t56FHIKzaro8qtwCAdHKElQI8MfVONBje3QiZ7y+a7QvSIm3Wltq5c
K2yY3tizfQM9+nQhQSVfqhWudYVk3hOnR9f1GGS+i7WC9sNnBjrS9Ij6kSps
JtoKLaXiP2vl6JFF+MLaYsFW2J0ddgkU6JHU4JOJQvMc4N9V4+uloYaeLRCe
dFrmQHb48FFHNTUUyNNeyGWTA5ynBMutVdXQevndkTtJOZB237R1p5Iact4d
YdDxph6MKOk+dR3sKG/id2hJbz0EKJ3Ijn7Ejq6sFoUGXD+OO5wtE8L1XE/C
HXcyrh+93++RTsL2nt5CcMf14xd7vnOT2D/cy7eRcP3o/O7leocNuP56u2nD
Tlw/dtqlZzdhs+wsWamB60fbdmN2ZVwPHqsSm5TF9eMLa6bkk9hDb+nvbDwZ
AX4e76KCcP0sdeSL/YBeGKROHXF9g+trF71Hs6VDwVAUp79THfvMz8snAzKD
oJbrl3w+rscd1I9/3e1GhZGWHzZnFQloa77i+D55XP8Kjy5cViAgwZmsr239
0cB26MvFW5sJqKXm0Y/uoGh8vuuyqpMnoMjo34uj9NGwmePN/JNNBKSgr8I6
nxEF95yeX2iXI6BuZg/e1aJRYFHeZNkji89v6zSsbx2hQpep49DkGgI6e/gb
oRnnGy/X2jI5nG80QnuvR5BiIfLLdyna+8G7Lca2gU4xkMB2W59mnY03Zrw9
qHBENdSZ5pjhLeoPP0bB8d2akTQnZjNF3xyjwKmY+Tya07TfPCzE6734Yu1t
mjP6L7BlsYdB2QvqK5qPHw2xjhUJgVvTehM0iyR+U80UjoSJaXZx2vu+1Pcc
kk2hFDjONLDkaaXNvLOvIkCT+74Eza6JJiwKihHQI5YjSfOL9x4z+1LDIUHZ
V4rmt21MUZx2VEhjE7Ogvf87iAabfspSYfvWpiUzOR4XrZ2LhpG93gSalbR2
Xz9cGA2nEtktad7DL6q/xzQazK/dWHLS1KfXst+jYOGtHZHmGy8vus/kR8FV
urklf1Zr0k0+TIXbxXuX3uc+N6astSBRYdUV7SqaqxxUPq0To8LecuFKmg26
Wz0qOqKh/NbvWzTzM2mvAt9oYKzpuknzsNyly08Yo4FUd6+C5vuWPGZ2uL0r
D0/doJnPzU+onskX3ML5DGjvI5m9Hh/6rR4CxxOml74POsOh7dvTEwzFU0r9
NKvfLvd9kBwMt9x8ltzmIOF3QSkYHrYXL9mbIdcv5R0Z2nf0LPnARUqV6CkK
kBlHlr4v6gqoIyuNRkDDV34Bmi20GVV1tSOA48WO9TTfZ9k5QTwSDg43AwRp
VnqZVubSFQaX8s4I0Xyu4IV34OYwmIpqEab5J0t937kYCnAzD1nT3ge/KtXg
b9xAASmzhCVfI94w778fAeqZG5acNi0Xt9IpAkze1VjR7HmysEoOr6+9IqQl
x53xlJZ2CwbZ1moy7f14a5yPJ70rGQiEY4E0C3seutTlHATk5x7+NHuZ+Q9V
OQbCSXMdX5o5i1UNN/4MhBU37Z/Rvo8V8lpwqPvqDxHU1naaibszB2qrfGHK
zOgjzd590jy/T/mAr0BtP81srN128RtjwdbdoKJJwQTlOdA1Oa+IAYONe0JH
N5sgcwd97/CGaFD94K/Nje25mLBTNTYSxHOS6bXkTVDs+UdSI7oRsNbqTPM+
vB8LdrAyFa8IA/o1tw8ny5mgykHzT3vrg2GyuYV4TdYEtaVl1PPGBEFv7Cfe
NzImqLcwdPimLj6v9x4bM8HrcRtBY8fX5mg4LvdITMCagErtYio82aLhd+CC
3QCRgDY6Pt44aBkFbve2pN2yJKATblwZHscj4Rmzz/04Aj5/HrRf6O+gwFbL
c9+JFgREDTp3wF0E7++8t9IbzHH8vCT6Q86BCjLFGdov8flU79vknDA+P3f6
m45w4PPoRnIyi1hPNBzWYT5pvpaAapk2863E8UuHtd44jRPvrxNtUmMs0TD5
NmLmETsBzUgFq70+GQWFRWolzDg+Dds+T3woHgL6191VO/F6PFd64sukTDAE
ZPaRuznsEInByUBEgQznAx2rPuN6b81u6UIT1SBos+mc/brGDj0oH18Roo7n
U81OexzXh/bcd85aJFHAVbco1BevP93i4WzPrAiou617lxlbRk0kJfZMOIjI
dy+ewvmbs9kysuBKGESco+hvxf5JivO/XRkKHbzrk1pwPu4evOXW+iAE1A5X
PnHFPp2bMzB+mAJaCjxb3J8TUcCv19IPZClg4hSReuYZERnuXut5oikCdmf0
9rxrIaL1NYSLXq4R4FVvtG0t9qjgkcHtdBEQ9q3siOlTInocpDPx5LsPgDCn
tBuVhJ4HK3TbJ/rAni2HtK2xX4WKPB/k94Fg0xZrXex34ez3Qq54Q6aLnLci
dhdl4QqzjjeUhSVThbH7osbyj7d6weOM/hOs2APUjykSrl7wucSg7BeOHyOx
z0MrpjyB7v75BwO07zvqlN5+bCXD3N090u74fpf3zxRb2shQzdFuYIOdOu2d
fOclGcJcLFz0sG9wrey98IoMGreao5WwO+WLNbJfk2GGRfeUCDb9Tr3MmHYy
VO2urmbDlnPtHjr0hgwhZarvZnF7VlEUfYe3ZNhGVzY1iB2RJ1BgjOPRtJXU
urfYeZW5UvHt7nBajf+XHz7vefHVRdXqu0N4L2tvLLZGyMCbmetuYHd48VE2
9qq37IqqG9xAZdv38gvYHWpqSQfT9wN7X39uFfbFE3u7S+ZdYehwJ/UJduh0
/LY+b1do2vbc8wO2kV3pUaEOFzjfV285hk3tutqp0O8PglyWJbT5yPpROW7x
1B9ORG+vp83HBdZ6Rt9yf+Ack3lPm487Yk8Ejh73hzQHninafLRovFK4Fu4P
TE9XcNDGo9vyg/4LJ3+gaozJ0Mbjm8eXXeMG/jBb0qlHGw+m6LGDHHL+QOZt
dqCNB/+Jn7GKHP4wHl8RTIv37m8p3B/TfaDFfeCRQw4JMex5mW+62h2+R1qJ
SOaSUE+D+nzxS3doslbYp1JAQmnSZLZvW90gRM7Yf002CfHtSr2vds8VbF/m
J84dJqHtDhfrG74cgAEDoa+i6SSkLqTsuJjuAfnC8RGrUklIrRLZszT5QkyJ
ktQMvl6/GMHNftoXYrmOWvAdJSGznZUvuIN9IS5iNFgN+23Gt1RBC19I+GJ6
xhbbpWOzoZiULyQSLjcHYY9u9Fohu3AIku+snMjC1trd42NcT4Z6wlT0Edz/
6IF0Sy5s1uY9tY+wHwRpb+2oI4OtTsM8Qx4JraQfETiHffaWjBZg17C+Zbmn
67f8fduH6z9Yh4T+8dw1iQ0KE77L1pl3kkm+8I+pO08q9Tn84wfZb9S3r/vH
d+oKSrb+8IVV92fpTU7h+Si9Rvat8YFSs0+xtadJaCL9o84+hiDYeJOlZQ77
MteqcAPGAHBoc36cd+rv9y8B4P4x5XYE/jx6jcI3q5L8YORuRNm2fBKyrLm2
drjVF27cH5XlxvPzf+0TNjU=
   "], {{
     {RGBColor[
      0.14800000000000013`, 0.33000000000000007`, 0.5400000000000001], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{592, 190, 609}, {371, 72, 625}, {635, 196, 631}, {494, 
         173, 547}, {291, 19, 283}, {547, 173, 495}, {609, 190, 584}, {283, 
         19, 299}, {584, 190, 601}}], 
        PolygonBox[{{391, 103, 173, 494}, {625, 72, 196, 635}, {601, 190, 72, 
         371}}]}]}, 
     {RGBColor[1., 0.8782758756038825, 0.6155172667572798], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{515, 166, 493}, {269, 85, 262}, {379, 77, 217}, {215, 77,
          379}, {475, 84, 318}, {486, 27, 246}, {331, 84, 311}, {555, 99, 
         508}, {311, 84, 475}, {494, 77, 391}}], 
        PolygonBox[{{284, 283, 299, 300}, {262, 85, 20, 304}, {292, 291, 283, 
         284}, {602, 601, 371, 372}, {626, 625, 635, 636}, {318, 84, 27, 
         486}, {585, 584, 601, 602}, {304, 20, 99, 555}, {593, 592, 609, 
         610}, {372, 371, 625, 626}, {548, 547, 495, 496}, {246, 27, 85, 
         269}, {636, 635, 631, 632}, {610, 609, 584, 585}}], 
        PolygonBox[{{217, 77, 494, 547, 548}}]}]}, 
     {RGBColor[1., 0.8877889128351231, 0.6333542115658557], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{451, 109, 573}, {562, 21, 325}, {573, 109, 528}}], 
        PolygonBox[CompressedData["
1:eJwt0L0PwWAQx/FrI0yMJgZJTSphYmLWTcfaaicpEqL9O711ZmVhIfG9PDd8
kstzz/PL3dNJ1/HKF5EmKmh4InVUUUMbLYToI+byHCmW2CBDjgIfMt7iMjSr
sN4eByyQYEtvhxxHXHhzFZep2TNEvptBZxlgiDN3TuLe5HamvR53Q99laFZA
3VX0AttBdylxwwRTo/UdD5tJZ8tsN83U7C9nP89lavaT+oUxRpZZWoZm6R/o
X0S2S2K7/wHfVigH
         "]], 
        PolygonBox[{{325, 21, 331, 311, 312}, {516, 515, 493, 21, 562}}]}]}, 
     {RGBColor[1., 0.8973019500663635, 0.6511911563744315], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{411, 106, 568}, {579, 87, 452}, {303, 98, 503}, {568, 
         106, 523}}], PolygonBox[CompressedData["
1:eJwt0L1qAkEUhuFRFFP506QQDFislSu4aWKhBsQttFuLFLHSrbVQA0riXXkz
Zq2TNjamUXw/9hQPDDPn52Pqs2W0yDrnqsghzDg3xAs6KKGIAh4wpniEd0zx
yl0fP/jFPzMuLu1Rb4+aLsqoYIIIc8R4xIH6Nww4PyPIphlCm6nZmqnZsfUq
g7J88faJI2/fLs2kbBvuPiyzsrcRIM9bznZol2pUu+K8RgMe/rg72x/oLxKc
sNdObLHDE3c1+GhZTWJ/or/xqWniyvmWSXesbIZmKbOye7Y7sKzqUW+Ds2c7
tOsOTIgqMA==
         "]], 
        PolygonBox[{{452, 87, 451, 573, 574}, {386, 160, 216, 380, 
         381}}]}]}, 
     {RGBColor[1., 0.9068149872976039, 0.6690281011830075], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{482, 69, 242}, {645, 75, 211}, {203, 69, 482}, {643, 70, 
         543}, {213, 75, 645}, {396, 41, 207}}], PolygonBox[CompressedData["
1:eJwt0a9PglEUxvF7GTqYbv4IEthgFJgB2dQgBn4MBgGSGrE4qVhEE6+bVLuR
f0azwSiYsUKRIn6f3RM+47zn3vd5D/fmbu4uBjHnXBZxXPFwiVv0sYkNnOBU
v965YxSpj7DinV/s0Nv1tgct6rYPe7T3j3ptPa2VcW5Uz/Dtwzf17Q66SGNC
/iFefOhprYdrVFHBHvZRxhm2sI1P3uughTHPj2Q84J56aBnKUk9rTeoG3qjf
UUcNc/xgSs4X8uwp4MNmK+GV9RS9A8tQls5EZ5NAEgXkkUEWEUY+ZCpbM2m2
CE+xcCYzm6FuGQm7A93FGM+WEdmMmlV3orvRjJp1QW9p/0n/rWJn9w9krjMk

         "]], 
        PolygonBox[{{639, 638, 634, 75, 213}, {242, 69, 303, 503, 504}, {287, 
         286, 302, 69, 203}, {407, 47, 411, 568, 569}}]}]}, 
     {RGBColor[1., 0.9163280245288444, 0.6868650459915834], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{647, 198, 618}, {618, 198, 646}}], 
        PolygonBox[CompressedData["
1:eJwt0r1LglEUx/F7I5LCwGooKNAmnWrocVCHXkhyqCVqrCGwsSarSQUbda5/
KBeFgl6mXqCmHLMhXez7457hA+e5L+fec+6zfHK+fzbmnEtjHHt87OIIxzjE
Aco4NWVbo7Uf3rl3bGILb+R4VT7mMqijhmfGXrBKvIIRa52dobMu+b7CAvE8
tlFEDBOIkMUFKpZTufuk+cEfewfYYGwds5jDNRpIIoU8cohjWvPsaaCKGrrk
6uCT+AszSGASUz7UpNr6xL+2R3tVs2pfYm4RTcZatkd71xBZjaq1YrWUiHeQ
R8GHGlWrxjT3QM573BDfWo/V62/0kELShzvr7j2bGxAP0Sa+86En6o3upLsp
p3IXrdda07YzdFbOehXZ3fVmejv1RL1Rz9X7DHHa7qC76EydnbDePRE/uvAG
eouC1ap/Rv/OP2jTSXM=
         "]], 
        PolygonBox[{{214, 213, 645, 198, 647}, {646, 198, 645, 211, 212}}]}]}, 
     {RGBColor[1., 0.9258410617600848, 0.7047019908001592], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{214, 195, 640}, {640, 195, 630}, {212, 197, 646}, {621, 
         194, 364}, {647, 195, 214}, {364, 194, 619}, {644, 197, 212}}], 
        PolygonBox[CompressedData["
1:eJwt0b0vhEEQx/HdjYS4kHgpSEhcI3cVhbvCo8CFUFBIKF2iOMkJ11Ih8VJR
n3+HoCHhD/CSUFE6BRrfX2aKTzLP7DOzu7P5jcbKTgohjKINlRjCLD7w6RT/
svaHW+IbTFM0g3nMJctp7RhH2McBXvHiPSue09oTvZ7xTvyGL+IWSsQTGKPn
uFMcENGBdpRQxj1Ld8F6qNcJuWu+L1EnzpMbifaP/i2SK6BF7jvantr7R3dE
EQWvUa3OqLOqRrW95HrQiRzWyK2ihk2fiWbTh35kmEQXurGMJayjikV6LCDD
FC7QjFajWs1cs9ee2rvqtbvEexgkHvA30Fvk/GyaoWY5TG4IZ8TnaBBf+Xy2
k+2Z+RvprbaSrWmGh8lqVPvA92OwO9b8DrqLclpr+tnL/ja6k+5W937a85T4
H3k+SEw=
         "]], 
        PolygonBox[{{641, 197, 644, 544, 545}, {377, 376, 630, 195, 623}}]}]}, 
     {RGBColor[1., 0.9353540989913254, 0.7225389356087352], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0rEvQ1EUx/F7XzoQTSXFQFLJe5N2YtAOGIoQhkoMjMSiidazMnkSRp31
H2Ih4Q+gEqZ2VAMG31/uGT7Jybvn3HvuuS8+SndPI+fcHHIYeOf6+CX+wxMe
8cG3TySIffimtRvia1wiQx5jWEQVEyjaN60dctgBzokvUEHZ9kysRrXz5Cxg
yBlf+FFPULNttIjbqBFXsUW8bRQvYwVv1L6iTE4lCnfS3YrW2zrW7M4Dq1Ft
D+9oUXOCDFfYxx6O0cQsSrglt+NDz+rdI8ImNnDP2oP2Jl5CAeO2p/aOkaBL
zp0POcpVjWrrxKtReAO9hWai2WQ2e91Rd1WOcicxhVGM2IxqNgPNYkjNt92x
ZzPQLGZYm7ae1btmrFlrBprFGVJ7A73FC2c+u9Bz195Ub5tabtNm1cCOadg/
oH9BM9PstIf2+gccAkk/
        "]]]}, 
     {RGBColor[1., 0.9448671362225659, 0.7403758804173111], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNkzlLQ1EQhe+LPlEQIthZGI2YgJ0gLolL8hAESyv3DRVFSbS108LW3s4N
V9xxt7ey8A/4B2yttPAM9xMsDmfevJm5587MrZ8uDhRizrkxoQQ+FcqEz8C5
LnGveF1BSdlL4hWx5XQLz3CP0ClnqXhL8atCg+xJ+ZZj3jZfJLtF9qvVFspl
94ub5Y/LbpV9J84IWaEp5rV8CCkhLYScl3M+50hoFBLCFP/ixLYTf0bMnz7j
d2FN9rZ4I/D588K5MEJ+Cl+C/KLz+kzbrPP3qhcunL+L5QyS979HQ8I9eZ38
sz4+CQ/0PkPcy7+eTpHfpoQJcYX1U/xIThqtF+Sbtlth2Pm4Es6b5Pw+5S+K
a8RL4hvn55FC94JwJVzSqwXq2/8CWjP8PyMmEjqEKjR303PzdeG3ndphr2aY
WYK7rpDTwbysj9fO62tBf5a7vMFJzSvPDoTkWA/G8eU59zvwd/8S9uhnnHsv
Ut/mfYie6sDn/VBrl9oNzPtEOHB+Z+wuo3yXoT2PHnsrx87vRoS/nXoT1Gyk
D6X0ZpQ65qvDX+Dt2BsK6ZPtTpL3aO/SNM2hMccMQurbjOY5O825WXahyFxD
atrbs95UijcDr6E25ucSUSNHX+PcKeLbamaYjcH2xHZwn75b/C+ep1tQ
         "]], 
        PolygonBox[CompressedData["
1:eJwtjz0OAWEQhmeWiEKyko3erk4nkYhkNSKRaCQaGrFRCPF3BidwBoUL0DmB
SuECotBpqRSeL7PFk3nn73vnC6fbwcYTkQCy4JEciT7U0F8VGaNzUCV/pPoA
O3oviNEZuMGKmYgYwppeB1roJjzVaq5XAWfswyn1jtE/YlFs581sidoZXYc2
+kNMxDyd9z3dLcOefMTMEOawgILaX9ybATpSu/Xi/qN2k7st7zzRVzWvJXTZ
Tzy7dQZ9dE9tdgIN8j8gEhyc
         "]], 
        PolygonBox[{{617, 616, 591, 102, 522}}]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{193, 192, 191}, {522, 191, 617}}], 
        PolygonBox[{{617, 191, 192, 600}}]}]}}, {
     {RGBColor[1, 0, 0], LineBox[{88, 2, 187}], 
      LineBox[{160, 216, 215, 77, 391, 103}], 
      LineBox[{186, 298, 297, 296, 295, 294, 293, 292, 291, 19, 299, 300, 301,
        302, 69, 303, 98}], LineBox[{85, 20, 99}], 
      LineBox[{331, 21, 493, 166}], LineBox[{85, 27, 84, 331}], 
      LineBox[{100, 31, 168}], LineBox[{101, 33, 170}], 
      LineBox[{70, 75, 634, 633, 632, 631, 196, 72, 190, 592, 593, 594, 595, 
       596, 597, 598, 599, 600, 192, 193}], LineBox[{41, 47, 411, 106}], 
      LineBox[{159, 41}], LineBox[{451, 87, 181}], LineBox[{110, 58, 182}], 
      LineBox[{451, 109}]}, {}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{522, 617, 600}]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{298, 290, 206, 485, 245, 507}], 
        LineBox[{390, 385, 223, 554, 502}], 
        LineBox[{521, 567, 330, 317, 481, 324, 492, 252, 275, 268, 310, 561, 
         514}], LineBox[{538, 583, 456, 578, 533}], 
        LineBox[{542, 399, 210, 410, 572, 527}], 
        LineBox[{546, 642, 620, 365, 622, 624, 378, 608, 591, 616, 599}]},
       RowBox[{"-", "25"}]],
      Annotation[#, -25, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{297, 289, 205, 484, 244, 506}], 
        LineBox[{389, 384, 222, 553, 501}], 
        LineBox[{513, 560, 309, 267, 274, 251, 491, 323, 480, 316, 329, 566, 
         520}], LineBox[{526, 571, 409, 209, 398, 541}], 
        LineBox[{532, 577, 455, 582, 537}], 
        LineBox[{545, 641, 619, 364, 621, 623, 377, 607, 590, 615, 598}]},
       RowBox[{"-", "50"}]],
      Annotation[#, -50, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{296, 288, 204, 483, 243, 505}], 
        LineBox[{388, 383, 221, 552, 500}], 
        LineBox[{512, 559, 308, 266, 273, 250, 490, 322, 479, 315, 328, 565, 
         519}], LineBox[{525, 570, 408, 208, 397, 540}], 
        LineBox[{531, 576, 454, 581, 536}], 
        LineBox[{544, 644, 212, 646, 618, 647, 214, 640, 630, 376, 606, 589, 
         614, 597}]},
       RowBox[{"-", "75"}]],
      Annotation[#, -75, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{543, 643, 211, 645, 213, 639, 629, 375, 605, 588, 613, 596}],
         LineBox[{295, 287, 203, 482, 242, 504}], 
        LineBox[{387, 382, 220, 551, 499}], 
        LineBox[{511, 558, 307, 265, 272, 249, 489, 321, 478, 314, 327, 564, 
         518}], LineBox[{524, 569, 407, 207, 396, 539}], 
        LineBox[{530, 575, 453, 580, 535}]},
       RowBox[{"-", "100"}]],
      Annotation[#, -100, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{303, 503}], 
        LineBox[{411, 568, 523}], LineBox[{294, 286, 302}], 
        LineBox[{386, 381, 219, 550, 498}], 
        LineBox[{510, 557, 306, 264, 271, 248, 488, 320, 477, 313, 326, 563, 
         517}], LineBox[{529, 574, 452, 579, 534}], 
        LineBox[{595, 612, 587, 604, 374, 628, 638, 634}]},
       RowBox[{"-", "125"}]],
      Annotation[#, -125, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{216, 380, 218, 549, 497}], LineBox[{451, 573, 528}], 
        LineBox[{293, 285, 301}], 
        LineBox[{509, 556, 305, 263, 270, 247, 487, 319, 476, 312, 325, 562, 
         516}], LineBox[{594, 611, 586, 603, 373, 627, 637, 633}]},
       RowBox[{"-", "150"}]],
      Annotation[#, -150, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{331, 311, 475, 318, 486, 246, 269, 262, 304, 555, 508}], 
        LineBox[{493, 515}], LineBox[{215, 379, 217, 548, 496}], 
        LineBox[{292, 284, 300}], 
        LineBox[{593, 610, 585, 602, 372, 626, 636, 632}]},
       RowBox[{"-", "175"}]],
      Annotation[#, -175, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[{299, 283, 291}],
         LineBox[{391, 494, 547, 495}], 
        LineBox[{631, 635, 625, 371, 601, 584, 609, 592}]},
       RowBox[{"-", "200"}]],
      Annotation[#, -200, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70473506260525*^9, 3.704735077849285*^9}, 
   3.7047351242222643`*^9, {3.704735268173107*^9, 3.7047353560603657`*^9}, 
   3.7047365219326077`*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1fQlczc33f2XJkqwlsiRrJFckkmZsrW7dbncru7JEebKU7KlI1iyRnZAl
lFARypI2Sxut2ved7MR/vurO5zfnef69ntfL6/3M5zOfOTNnzjlzzplzhyz5
R7hUSUFBYWkXBYX//Qv+8OFhFuS/CMTipxTnRbqS/1JAezrFf5vz3lGc2/o/
KP79539/hRQf+vt+CcVD/wcPl1F87+/rFRSb/f1gNcU5f/uvpXjV3wHWU9z6
TxPA8j9tQK82oFcb0KsN6NUG9GoDerUBvdqAXm1ArzagVxvQqw3o1Qb0agN6
5Vj+xwP08gC9PEAvD9DLA/TyAL08QC8P0MsD9PIAvTxALw/QywP08gC9ciz/
MwT0GgJ6DQG9hoBeQ0CvIaDXENBrCOg1BPQaAnoNAb2GgF5DQK8hoFeO5X8m
gF4TQK8JoNcE0GsC6DUB9JoAek0AvSaAXhNArwmg1wTQawLoNQH0ynHbn9cM
ll6Kn1LM0Evb0ylm6CWYoZdghl6CGXoJZuglmKGXYIZeghl6CWboJZihl2L5
nylYX1OwvqZgfU3B+pqC9TUF62sK1tcUrK8pWF9TsL6mYH1NwfqagvU1Zeml
uO3PywKsrwVYXwuwvhZgfS3A+lqA9bUA62sB1tcCrK8FWF8LsL4WYH0twPpa
sPRSLP/jg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xlg/Xl
s/RS3PaHBSy9FD+lmKGXtqdTzNBLMEMvwQy9BDP0EszQSzBDL8EMvQQz9BLM
0EswQy/F8j8hWF8hWF8hWF8hWF8hWF8hWF8hWF8hWF8hWF8hWF8hWF8hWF8h
WF8hSy/FbX9xdiy9FD+lmKGXtqdTzNBLMEMvwQy9BDP0EszQSzBDL8EMvQQz
9BLM0EswQy/FbX9eYiCvxEBeiYG8EgN5JQbySgzklRjIKzGQV2Igr8RAXomB
vBIDeSUG8krM0ktx2x+Wgv0rBftXCvavFOxfKdi/UrB/pWD/SsH+lYL9KwX7
Vwr2rxTsXynYv1KWXorlf/Zg/9qD/WsP9q892L/2YP/ag/1rD/avPdi/9mD/
2oP9aw/2rz3Yv/Zg/9qz9NLxBrdh9TZ6YihuHe4Lilv/TaX47+uHMyk2/9th
DsUufzt8D9qLKW6dj1LwfDnFrfNTSXHA3w/WUKz99/t1YLwN/5/x6IDx6IDx
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
VM3r9CZptjIOCrvm6dCxAa2tWTzr/RYpFqjplmnObkA3kfVl9c3c+vgLipao
EP7PWR3qOORkHYrbcVarHTn/WkobdL9o1SPbLhO6+hF5FJ/8a8tVmyK0Td3x
z/fvFvj1E7NBa76R88Tg4KTDzyzw81GaX6v0M9CkFN78HxFkPxjs5yeMzERh
JedW7LXlY5eXUcb4UQoaonfOaoqNAB+rdFnQNLAICRZbdaqTCHDCyC455bJn
6MyHPb/bTRRitbUfV3z1KEH25+xd1IYK8ZrTvYYmiV+hjwcjt68aKMJn+pWN
6P4kC722LX1Z2VeET/sdGbg8LRup77q5612hHR518mzoDZ8SpLx66YTUOjus
VV1Y9GdROjKJUvs0xF+Mw9QG+PnYZqE7yCwkRV+CR1dYdRpuUYKmDHBw+J89
MvmsKLQjkb/DknQ1L4SIccj+F7yv42rQ3p9XHpseEeNCw5r+Xe/UokThKa8+
gRK88uaKJNOsFDS+8/59E0VS3OOi5ZiB5enI5fDh0ffIfNf6HkusTc9CgxZP
ejSd2Ns1nirdT00qQkf37Yx67SzFKy9MD+6cXoaOIaNFb9yk+K2yZgeb6+Xo
D7+v1ykLLn7g4n1D8UaUGf72JKSD25x0pJVoNHveKAUq36UOflNWk/WryVJb
evx/+2ttUvrxWK5+TV5zhH1gLPf7Rx9eHYsO/sz9/lzAze1DKzZx8kZw5ucE
JWdOf3Tb1zhw2m4JHv9q+Q7j53WobFfdjSf+XHzM5bLNhEhHLt/NKcsrZs+j
zrhvraZJ7oXEtv3P1ZspHissbnrE5UNZ9fZJuZjGx+dip24bG1ePoh9fztQm
8uH09XcZ5/uH0fiP3J9rcSTxbbetXD7bmIVvw/V2SjFv4O7Zi26Ho5RdVyK/
f5PikYfWeDv3vo1OD2m//NIrKT4Ts2VonXEOSo8NXCpMssPjDi7P1zyWg1Iv
LbzuESrGOoXFzRPn16D3DdF75h0UYzdfy/KlT96hO7teKHaWSGg+1fJzj7R2
2Ujwd7VtC4a45qCVs3RfvJgrxROWPDnxYmcZ4nWP7uZCnj/rGqsf9LgcNRzM
3VU3W4pbnk5etiQ6DV1+MCQ0sIrzX5b4Faj+c1eKvepOtjwVc/Vndj5uPNrx
1jvU+KLdzrOqMvr923sVY6VKMrx84e8tPZdy9Wfk+Z6bK46pzquW4eTuxof2
6pUgjV/j84K7ynCcduO3Px8vcf7rRTcnT4q7iPIXRDw5epD7/a7AHu2dV7na
UPs0PbdaMPsdd9/DMc6/ZqiYq2evvfTkgksnuXr2Ab3njnwh4+rZb4pNyus2
hsNJanl91hdy+Qqxb/USPyhx9WnCushed3Xg6tM4bztxKrInh5X8Ynec2sXl
Z3VY8qbTpzKuPvuMQY6VGzI5PFSr8qDzIK6+Usuna2uNVnL1GGJCzn+slnD5
W8uebR+3fytXP32HSXbl2GKunk1tzrvjZw9w9dOzloc9/fWAq2/z/KF+x6P1
XP107au9HM5+4erdbMEdZyqGcfWkTr4S6C4m69/z6581vjPiqL26zmvKpIoO
sSjFi7e7h6cMG/7c4n+l02P02V/6dUwcVw/H6c1S4y9irt65s9MViYGQq29e
M7JU2O4yV09nesDur7ll3XGcXuiQN6S/VUVrMr2VeuFk0w8x4j2P0NL1SWYZ
U3vhAYZFtsPC7iIn0cIz4270wz0OKM3rtSa6jX/UaXwm2tfsl+Fbrl7OgpuG
s1/6EHtkxrl7uj3rkFrPj89zvGVYcKH92TzPOuSz9+ew3Vtk+GvswHcxM5+i
SYn+XkOGqOJDPQPfZ6++ih70yGj/j8MwvOCE2dSkj8eQnoPuDOMIA3wQixrc
LA4jvR5vrJWxMbbZZfk1POsAjWe6ZO//EV24H+nPVbzTIWk6viTSOb7j1j40
4v2jnBv/TMdfOg/6o+DjT+OZh5QUuy0Y5I9S7Zv+DF82G88K6NPU/7Ef+rT1
t5NL2izcaZ6i+Z64ndS/28t9Yf/q0zuR3QaTurM/zXGgX/6ziwJf9Dike62r
sTkWj1MMEnz2pv6IjQuGzpzS5I3mJ8y6oLBvDv5WP2xLWMIOpL8ku1flDSus
vxXdqnzpRf0LAfr/xB5854XcY+IrV6sIcEFI8ZYnl7aj7usOBFRp2eA1v7I/
9c0tQWse9bbtGmyDm03eOs/OL0HLdqtaWl6wwaEeuyqiXpShqPKWIIseXP0d
NfGltamdSf9R88X2u6tR9TZzA8OR1jhxzuUTFxtq0PGBs31WtvBxuJt6S/Lo
bdSfgK0WD9edsw11eLZs3qk0W6z3et3iETu3INGU+JJQK1tsHG32acn3LOS3
3qd4w35bfPES//2gxjL0cX/AgrpoW5wfsMP1hnk5qtbPancp1BZLS3+FlOJK
1P1sjtUtV1usYuTavc6yGq07/yZm3jSuPs+OIzMvTVKxxfNt+7Y8dq9Fd4Yb
vcjpZ4uNvhovDDxcjyxv1swzas/9Hsa2YwOdw34JMDLV+rP9fT2aZBmqsFLJ
Fn+OUk5ITW1EWVWLswt/CvASlWkx8Qs2U/+H0vlXVZJdm9HQnbWWuYFEvjSP
7Xfh60a04MAtvWfKdrh56Iz7H2X56JltbY2KEVevp+Dq9vrbK4T4weG32dtl
Reja5l8DTU4LcUHtR+W+34uRc7ua+ZbThHh0fnCMa0AxOhx+td1RoRBHNrzX
Ka0tQ8ZqH3sv22yHg5svBDtblCP/3z5FE13s8Nif4xffMqpENrNWetePssMe
A9c2nxLXooAFjsv2vuLq9wgkmdeDHpL+RmS+8/avRXMP78yIShbiYWP0jVdt
q0ddnNX7J9/l6vf03pv/7W6oEKvKXms5Ndejo+1LJFduC3FOcJ3vhweN6JZu
fLUWae90dcGwGSobqX8kfNCducUGG9H9wNptS+3FuI+qo/D3uw3o1sjVBjue
i7B7v7vH3IdGIzfjujincWKcuGTqlpRl+WjcrDX9Q7TEePTOnOjNF/LRz1nP
5qWpcfV8Bodbv/EyFuHUoN5K20cUIYU/K57u8hZhTT2/8Zrvi1GEVx+9qF4i
rIb1r5ZdKEY9N77o0TxYhLeMdk8R/ilDu+/GO25uFuHdmimC76VVSH1HXvGe
1Zw/x6hEXcWSL8IZj0Iy33hUo2sSXnGnxSLccrW2uqC5Bjm5aoRGzuDq+fTB
ZpU9dER4lNrpn7rkfPdy+7yD9foivHHqsucWE+qR+4MLO2OGifAzbeuTY/vW
o3PpQ2seDxfhRX4uiQrra5F91b5l4zYT+2F0+qBRRL5ZVAVF/V7F6ZdTdyUX
fYi9Oixw3vWxvAY0vmT1l5IBIrxQuajXfscGZL9pX0uCpgjvrE/rvH5/Ixph
unnUHfL8mUUtmgHWjeh7i6t4hAbRZ/3MvFJK65FfQNL4oPlinHXoyceRVxvQ
9Qn5gY9lYvz0zICwR+obqH+p48Hfg6biDchgj+flpQOkeFJeV8X0zh5o1MlD
nWN3SPCZxTebS3bepc//ckx0VbKKQKuF22alIykWncv7Xqp4F8X5Otvq7ZFg
+7OxczYuykfnHBb/0/CQqx+kG3bxzuMEMVZZMaaw4/4iJHmu/ajjJzHeqVMb
OpTY15M+LQz/n33dxzC5ZNwq8nx68LUekWJ87Xzoa9WHJUhp+VTJzygJLu6q
UHcupAxVfLE56CqQ4KbTJd3SHSvQaK8L6S7tOX3q3pTu8DhZjH3qNRsjHSpR
7uKe3dcXi/HlzOYJE3ZXIp7tlJfReWKclmO6Tul/8cAnjwZ/iRDjHtesQrUl
VWht/fC9H5+IcZHOqfmqAypR0wSxwk5VKd7gjgJOXiY40E2S/EOCHXKNXxkE
VyO949rjx8dJ8Cjp9FMBU54i223mwp8zpNjeqlPU5bQ45HKsU7RWthT73zze
bnd5ATrUeK5hyA0pHvpseqRnVgG6qxtvsOUWsR/CLnhW+xWhi8lz41R3y/BC
oeW7X1tLUKNG46o9X8nzZZ6Vw4eWIdGahB/qgVK80HBQc3xtKVqmPfSAz3kp
9jj1I/2HYjnqVOjX2dddhgeVrWkOf1WFruk7btr8Xorr8tbndA2qRmf9vOuP
JUhx1qbjFmvKiL3f4erMftekWHdknWK3zBqk8Nrzs/11KV6ya5Rt89ZqpPk9
/96hGGJf9PTsc6S4GvHqQ0/dDefqFc1LeMfPdZdi8dD8zDztRqS695t1uIcU
I81mU/sRjWho4c3LFwl+ekI9vyiuLV6QKMNKEp+7h46tRwOcBxzcVSnDL4cJ
wqbmrkfm+09l9rzK1ZcvtnPseHF5b+z9TdBFOo+rz7ciLnxl10Xnke6Yo6ln
5vNw0ZwNPezjA9GwwLrvp1dOxk2yZhWdbgGoneUj1xn+CNfLtuT19QhAW09s
i4qoQ3jE9M7hwV/8Udhkj0sdB8/Ez5W22itb70U2JT97PQ2aiZVsi3j7S3ei
pvkpcT13meJhGok3gqb5IZfI99Eh48l569KeL/FEn+v33DVvyCcL3HAy5H4K
zxftLdXTEj+3xNc0531VfOyFdPp0fbl3GR9fHRO9SSVzB/osDZjwSmiNo62e
DHnwZyv6FdYusNFVgF88CpkpqNiObq7QEI9s5OohaVjcPFueZoNf3b0tinpd
it4PCL+/W2SD9wSYH9hoWoaul2gVqE20wevP1XxKe1aOxs5S3p6TYY3r1i0/
91JvM1qpLrp2TkeITZ0XXd2bvQUt1B2xMvMOVx9p1LCuKmrxRN9O/tTrVx1X
P2/jFunlkJ056MpWqxSd2Vy9JNfaWat0XhAcVGqkP7OC2Kvq7mv32uKDFRop
BrYVaGOjV2q6P9HX38fYHZhZhWKv3/wabWeLnbSWe978VIX0u6aNC51li/vr
5XklSmqQ9Zsr3mtGE32tFHnfK88T3V0wYGCPCjusbYsPWNtuQr5jI7ff2cDV
S7pzxycrc7Edvnuav+pdDlc/yWdJaMCV7+9R1KnFww9/535vo8tY1/eb/Mn5
Yated1WXUtQp6NyzB4+5eklTEvpu+JxrhzvHXLljjCvQxFX7NupZ2OEZ2W8m
nRNXIJeCTv3XmtrhyT8Pj1lsVIXsd89bGqFih9OzowrmzOB+r0qeH7txxYnp
62qEuGy8xz3jSg/0K/9zn14XxVi7z0+9ruM9kX/3oopPRhI8zqzr4F8/7iHB
0W9aO3PFeKHr+r2jXe+h3XOvuHbrzdX3Obb863tfvhgPy4xx+raszR/eROS7
yU6vsYYFqLvShFWD00RYWmn9ZtcSrl6SY/PzHxdHlyL75N97L88R4y6X/M+N
sODqJcnpvzVVTaS3QIzXB0hNW5rK0ckuedU7XopovmOc9Ne6zCCu/sOxjfP+
7Cf67GBZ/uDEsDqkWHwyYaUzl58zuc437jXpr+q2iXNyj0aU/GeV8nCpGPcK
TOBZTfag8Y+yaWtztlpGUNx6XHiLdlr+vG95RoJ172t11NHKRKW7ZHdt+nD1
f1Pfdb/wwVqK3/9jUJKgzNWLls8X+rOyUY2cr65rP+x0XImrZ7d5qf57bbVs
en5OcrMzWlv3Hul9sHvgs56rh/RBgGM2ZUqwhjDl56u5XH2kw4WpGbJOxWhs
7Rglp9Fc/bjr53XtCvhS7PAxb0bjmVJ0YClvXK0vVw/p5ISi7yf7SvFJjSmT
Jm+tQqMstnzRKpJg524PPRJUuPpHj32ubHx/pQYV4mGHdl6V4Ceav43H969F
j9fy+R/PcfWPlGZPP8+3k2G/PqkT7R1foIYMzd7tyXl+8wled75nAvWHyP3d
y2PWFpYPleGzvc5dVO/zBgWstRVnp8uwaM7sp3na/65/tGTkBMuxEhnOiF8h
btLORDGaEQqL3sqwtu7ya/1auPpHl8sDfquk5KGaDeu+P5jJ1T96iW2uH9GU
4R3lat01Pmaj/MUvDG7WcfWO+r3Q7T/mngxfOoQkYW5c/b0TRi5qv6XEfs5f
tnuBGcEK54x9fLj6R68M9hh2MC5F+mk7fzfnyLBvYOb9jLpytOmpaX+hBTm/
Cr4kz6uqRNMDnbpW1nP1jJac+xVe0JWrd9RnXbfSafEynK6Yc777qxp0Ijen
k8IpGU7MKs2rl3D1jJ6f+nFm6ht3yi8drwY8+7baHW3f06e33h8pXnBtR7C2
vTva+67T1vBUKZb1yNqc1Lwe2V7YOUeNnMfLbg88/2BZHZr48FhJyAEpvr8h
O1XiVotEs/rvbtnPxXcsh1/0cF0nwxorEjKDyH6aI+rbcmAjmc8NdqEj9tWj
KZVjTvH/4eoTefNbPvr1VMIj+rYvCStIQZM+hkR1mdMeO6hut+6g+wrVGCZ7
nb/J1Sdq0og3Nx2piMvn9nUdPf41yu01Ln9ovRI+v2br7DNOr1GnqwsjH2Yp
0XpFonP2nWNOKuDbr3sKKweloh9DHW4e2qSIR4ZY4IMbUtHplxt1l5op4oL+
SaK9vdNQvsei8YGpCviNQsyse1dSUXPSR3+XjopUHoTrtqy97srFz4weiIf7
fuDjWr/FG++l/rue0e3Bu6X+5e3w64/duk+amYReBiSXimZ1pPWMIjburO8/
TQGXZB4KOa2fhjL/2fTtd6gC9p4zRDrpZhpKVL8qGuGhgPm9Q/QmEfmSU+Yx
rj/+P/WNQstLLpVpYzuFBVet2r1FWr/WfZkxhqtnpNIie9LYToh731nyJWRZ
LRpw6GLm8f7c708VFyh+m9yf+/2pqWa3Vxq3435/am2PaFEMOU+ePjy92+UO
j0H8PA7NsDH4eE5mh7s6Du05/R/u96Pk90eMFx1qSiLnze+K+6WfLxeipz98
av0ecfelRqgs6Nslgrs/YoFCY4e95OoTvfPesabPHa4+UWB5Q1T5dSHO91+N
XuumIMdRwzYdOcLVHwqO6vBk504RHuyl8SFZkav/3ill5dWdRgnovZtx4ITD
xB4fsmZ+1o4Eqj/k8blR+tp9ThN9c3/oqiEvhe/QzXYpwyJWcfWIFhQ4T7GY
I8Lv9kd8brTn6snL6c2cxbMX+HH1ifZkzFs8LpqrT7TBeePU+n1cPSIfh4yZ
whWcPgoVTzn5wYirR3Q0ec3ryJ1irHa0nc/lsWkofMHIeRubxfhHxEifnpO5
+kIDAr9m6NVxv78kH8+N9kEjS4l81zJJTk1dwdUXko9PaV5urGgOV29IlLTH
fNtACbU3spZ83NBTxMn/E9MDXKaQ7+/weRRt1czVG3K81jIooYT7fSb5fZ+f
I8InHdeTYhV3tbWNqo+o/7abgtGb9pVJqF3/67WGb6W49xWTY+KNyVQ+yfXX
srvHV0S35+SdwEhHLThDilt+9j30ZFct6nmx+mXGaSm+pqWykE/O978jjZ7N
I/Z7sOpQ03V3GtHErIjpTu5cPaGV25/vedlhIB6YozzX2YarLyT3b975EO23
SoWrH1Tpcazx135zeh57En9pb7m+OfUP+yoffuV2QX4/uAmFh00d4iLm1v+B
h4fn65vcfdbB3p4vJ53m6vHgTykzNr3n6gUunTfu9KNrXH0efYd2zjdOyPDc
Q83jthm7o85HXizYbCjDqvcTxn4bWY+WZPTrODHejObH87ctemrz1Az3SJvg
8mRiI+p5I0vdyUmGm00n7hi6oBHd+t47rc6Rq4czzThs9f/i1bfm7bikfLUR
df2sMsKB4Hlo94/aLY3IR5Aaeolgy9BxLxXqG9CI7aLT65fK8PAbqQ4TKteD
eEUtarI1/b2snI8bF/VrWt6uDq3NDxlpSHD4sMW27Q/WofFxp0//zuXq3zyc
b+UXn8vVv1H2t5Ld3yDB1VtEOTuWN6BLYU4r0Qbu/pPdIrUzhhulWGlS/bqL
AQ3o8hKTvBkEB2us61A1pwEVDNK9VLxJiudcH/9P7KWTbft7AvaN7aDr4Huk
DRvhQY+DGno4laCiASG9Xkgs8JRknaLjeqXoegs6KBtsgccuqu8i6luOHvjO
sjG7a46ntNRuPK5Xjp7Ovf1RGkaw3vbd7lMrUfJjpe9d7cyxgfuzpHH5WejR
5Y3Hjrbn6tm4Xzupj30tccqd6RPSkvOQLOJJZtQ3grfdirn0pQDVLrMu0rGy
xLlLjhSEJBeg8KwVT0faWVJ+83Zs3h6xwBp3nDNhLu97BTq6zv6T62FrrFyU
P/R3ahXqblgzogPm6tOMGZt0sv9FAS5eKxQcVctHHdzwlEeFApzY2LBl4f5C
ZLBbd23xKgEeqNle0WNLAVpy2FH38l7u/nh6cLMgX0TkqcfplBSVh1S+afvf
fvNm5gPqL5Ofl29lFj0tWSvBJ7LsVxl8aUC9kngVXsT+lAy2/LVO1IiUcJa+
dJ0EJz9MMkmrbETue+tTfMjzMyZM27hqVyNCeenmNWu5318qGzf/rOpzPn7f
M+CQZ3w9CnbSXHwuiY+ztey7aiY0IP6mRc7FcXzs0/K2YIb6eaRSyz+xc9Q4
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
f9KqCV2PbNvM3f+enRWlrOskwv8PhQ/slg==
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFUjtOw0AUfAHs9ToFSFAGpOQCmARacKj4VFAQQKk4AByDeySABX0gKRFH
gBrCBZBASGmZ0RuJ4nnX65k388bbvLg6vpwzsx3UPKrCYxVVR/VSsxNUOzFb
R81qZgWqjGbvwFrwbzy/Rt3j/RvrSmbWBO9HePZbQ01BeQm+70Xv3wH/t+ZY
ahDfSp3PXnvAjRbMboK+J641E57718z90Bd5LWnvR9d+BPcImCn2b1gbmu8D
nL60orxM5GcL61h63ehc9iiUBfsvZ57Xeea8Z3Gbub9PoFtH3zz1mTlHQ7ql
cmYm1NmQ1hCcBOfb0FwKrvMQ3E8h3SjPzKoQlzmQQ+4g+H9jvvRzqplHOB9G
xw+wPgX3wJzOhCGWOfT031ns9Qmft8Bt4v1OuZbKkf+Gs+0q/376fw+4Lgbv
XQk/1jwV8AfRz5llLi7n4/1gZofR/bQ145fyYU65sMyQ94EY+uR5XR76yp97
eu+oD3vn4v4B9J1SZw==
         "]], PolygonBox[CompressedData["
1:eJwlkDFOAlEURe84jP/PWGhDbIQwdJRGXIBWBqxMLKRkAbAMdkGBwgT7USgJ
C7DQWl2Bia7A8/KKm7w79/2b86YcT+8mB5KaqIG2AWXSBXrKpWtUE3yRJWQr
fJ9slkinUbovpO6h9Itfk7+gVipVaMBuhS7Z/yM/IZvje/hv8ivm4+Bvj+i4
pWvBt3PyDerg38h3mTOVhTMYi3VYlzEYi715xH9E7/5k5z36DXaLMS+Zh6id
OuMrXQq+m+F/mJ+Ds9pNdtso+i1n6CE6o7Fax57dOnhm/+gmd2Zjt5s3ZP+x
fSns
         "]]}]}, 
     {RGBColor[0.3095905366799307, 0.4125078563411897, 0.6370777675747372], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVUtvTWEU/fSce79zbuKRNiFB3DYkOsFEJIJwmyZUxUV04DWpjpl1KK1n
mXiNEVqE3mhvH1QiSkxERL1NiJHOCP/AWl1LDL6cffbZ3/72Xmvt77R0H993
rCGEcBsrwXoVQ5iEsTwLoVYMYRhrAGsKvnNYVawOfDuJTXsQ2wn7FOx9sHsR
N78QQkTMStg/8CxiRdgZ1tl5IdxAXAN8m3OdM+Wcs4nizyCmjJzLYE8gdjgN
oR3rK2obxJ4H8C/B9z7k250o56tU+dfgvTGRfwFqGkV8G+qp43moFMJrxB2A
/dM1sJYW+Nthz9BOlL/s1YSc65F/Eb6txftd7O2H7yFybmAd2DsCezGejwry
s+53qG8HzrqWC7OXBdWzGs9RrJFUsW+cZ2NJ9iecU0T+yYL6Ysykcy5HzFI8
x6JwIr583w//A+Tbkgt/1jzQIAyiMWfsKsevsZ84PUn1jRwRwy7H80zWMQ1f
BfY01tUG8fA9ERc8hzwTH2LThLUOdldJ9n3UWUtUOzmtWj/E4U+U/TtKX52p
au7G3hN4P4rnL3w7TUHi2RjFHTmM5p31Hy5p7+dMvdV81t4ofVKnTY5lbWmi
nPxGvURrZqioHhizqyTfwihdtLjHFea4XBKv5Pd9JhyoFda/raCz2CPxJrbE
+Lp1vClX7VXHPIL/OfydufpjL8T5baZaL8I/6xztOHce4idgt8FfT9UL44gZ
tUUdXIB9vqhaBj27ZffI92b3VHZf5Jo8kyf2RC1wnuc4NHaXc831Fc8s66du
OQt91mtzSblvIWZxJi7qUbmfpeKF9bHOb0HnsBeedcSzSZ6pwaJ1+AF5OuD/
mMlHrKbd93gqHq/nykNsWEef93Lm2jx3PLe1IO0SF+JDrskF49kLZ63fvczx
6Tni937HnDee3PslE1/U4M5cPT5EDZdy8UXeqlEz8yaT3jhjrI3z9NpcE/dp
48N7YdR9ccafmo/VvjOIW09BXLA2YkMdUAOt5p8xXT6LeJHTJ86zI1fOSdQ1
HjUzvFeYe8x7mbvXvVN/zD2D+rfmqu2m76gu80H99/ouGMqlrcdRWFGL7JE4
9bjmF1HzxTnjXcicPJ93Ou/eO7nuhJr3Dli3xJz6GrSe+Ryy/16UXnn31H3v
bEeeqag91OZazwDfeadtszYG/v3jXOewz220Vph/3DWSF2qq4r3kaKnvnPvJ
//9PxZqkNm8bE2JDPCq+SzvMG/XPvps9kzXPL2Oq/pdRewcy/SMPZspxofhf
yzXr8i8/qt2Q
         "]], PolygonBox[CompressedData["
1:eJwlk01LlVEUhY/et3vOe0EKCpPyIyFoZEMhtFK5UOoglagMmphj+wcOrGha
/YAo7YMsurf8hsjEgSLRh2VBBI2qkWG/wJ7FGixY+11rn7PP3vttHbk2NFYb
QugAGZiOIewvhHAc7IM/yc2PgEXiNbC8J4RuUEHrAM9I/EHubjGE7+jteN+j
nyiF0ACq8GPgPlqZ+DX+s+BTCqGT/Fr8FfSDaF/41ot2naIG4Y/RX6C3gkfw
reiz50ET/s3ks+Tvh38AGd4J5eNtJl4kngMbxK/AIfhRar1A/g7xrYI98p7U
fZz3k3gg2SOvar6NNhR9l+74mOyRt4x+Lrom1bYAmuF/yI3odcR3yD8FKnhn
wFR0D9XLHlCFv8zN18Gm3pp8tnp8j7gXfRm+AhaiPfLqDf/gl/D/gv8Gw/CW
kms5TNxCfABMFzzjp/iHOe9d5plqtndz1zoKtvDu5VtbwTnKncy9C5rJFHw2
+uznoB69S2/IPMPPyTuh3dCMt/FeTq7tZg01JEP8Lf4+cuejud6ot6pH6tUN
cv7CJzXDzD1ULweiZ10lPk38kLiI9412jPhBtKYd1C72qObMHnmXonerrB1D
n4vOVQ/VS+2g5q2cbnKv4hkvekfOwy/ybSNzj1bJPZO7F9qxmeid1+4rZwR/
Y/Iu6h/RvxKi36aeqXdf0fszz+RKyTPQLPTtm7Tcs9eduvs/1Eh7gg==
         "]]}]}, 
     {RGBColor[0.4692681205999387, 0.4686245791245791, 0.5432097949188859], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1VTtMVFEQvey+t/e9ZS0s/CUKGkRQCzULLiiEGD+rGHXZGBMLA+6S0Glr
qbHSGH+NcYmKBY2CXxpisEANkZ9AgiaQ2FqRaG0inuMZi8nMzjszd+7MubPb
SpeLlxLOuTuQJGR/2rnp0Llm6EnvXBucNZGE9k/4GvFtDJgG6HroocC5ZcR2
wH4PaQLueVJ5CtBbU86NQych65FnGHoEeTKwn8CujoQbhMwjT8XiN0EmgMtB
n4+dq0oKfw0FX4HcgL0AfH+gmDnYRehRSBe/IfY49GvEPgSmHfLFKc91yNWE
8j0IlJO+4UB+5nsXKOduxFdg74Jehzs/g30AdgtkCd//4H47QvnZB549bPV/
w9064V+ELoeqmbU3IHYW2N+IHQt0FvGsl31uhuRw1gxiWqC7U/JlIWXYpZTy
UjdZTtbYbzXfRf4MYs8htiatvmyBPuHVh0+o55ZXX3YCuy8SAR554YhfhP0q
Vv9fQnd69SUF7Nm05lqGro3U81rYp4A5hJyT8K314sQLxK6m1N+Dseothap5
GrjDrBv+t169yMOeitWvaegu+I9xdsBOxor9HCuGsTPwLwHTh7ybI53/PanZ
kEcFm8WHSD1n79k7nk/+FCLNv93yVRk38pH0aS/uksOMb+TcOSt8rwtVG38v
2qzvx+LUuHGV/V5Oint7gZmAvQd6Y1p5n3r1i3W3xurBSChObA81V870sVdt
s8DOQfLwF71mk7O3MmrcIweZI2N5+Ead3Yt1s96P0Ccj1bYAXbJ6BrxiKta3
rPGRb/Mi5tgDWZMQJ3uMl0cDxbI/9HUbhrOmzRzpUO+NdyCGuXL2nTjiO2x/
ZK3f5Bh7yNkWrQa+iUGba8HuyjqnjMO3Y9XUZnjupJLlLRqe/py9t2bbPVnz
b0irX22x9sGQ7YQuO4+YenvvPO+X7RnumwuI7UXNX1FLa1p1k5s9dleedS8W
736k9D45ozde+ZiXO4RvvNd6WG0cI384c/6m3RGr7wXE3oSd4H6JVS/zsDbO
Nm+xA8Zj8m4e9a0Ac8T2GfcX38wZr37zTfDMOjuLWHKRPKwYL5dtRjyXcydn
Mob598atfvaW/xdZm0mf9ZBzYo3cPSte+2HVdlvZYpeMW8zPt0kOkT//dx/f
8F9J7coK
         "]], PolygonBox[CompressedData["
1:eJwtk0tsjHEUxf/ma/t9/1ELklaaNEpIdNhIPNrSphFldIQysREszEjs2FoS
q3qzEaUaCxtUlG4sauER9K0JkjaxY9eENRG/k9PFzdwz59zH/373rqucK5/N
hRB6sBrsWAyhLQnhVF0Ix/MhzGUhLIA31IYwCLcqDWEFAafhT8JvxybhnqBp
QHsDzXJwkWSz4IfoE7i94G64T1gF/jVWIPYa/D24AWwz3B/yTtNHDv4yeCOa
MfxH5LiO9mvm2lXsBFx/tPYNfAGumf9GwWPke4l+GH5r4hyteddU7W5sJXwX
/EXes5Z8R+H+8TtP/Q/EbCHfNLYssaYP/ResDD6DdaCvgx9I/Aa9ZUg18S/x
3yL+e/gu8F3sKvgFVl/rHtXrD+rl8ffAT6L9C56h/nr+u09vI+ibyDWMNcLv
is6tnh7AfQSfz3mm49Exip2Hb8W/jZXIPUfOW9Ez0+z03zfyFaJ7U03Vnsrc
ywVyFvG3oT+c+BvvwC9Gz1Y9qTftiHZFO6HdGIHfn3iHnuM3Z55VJzYOX817
1tqJCn4L9irxTNfgl5b2TTPrRd8H/g7eDT4I7iTn0xrPWLNuJ2aq1j2q197M
b98HfyT1Tmg37oCvgEdTz1I1W+B6iFkkfpb3/6SvZ9G7oZ3R7ihGsUPgevSH
Us8mgCfAg6n9x2ga8s6hXPrGN4nfGc3pDXpLI5qF4Des1mxT34Z6Vu/l1Lej
GRwAN4H78avkm9BtZe5FO6Pdebf0Xt3MW/zJaK12Qruhm9RtakdLqW9It6SZ
tVF/JvOsdLO63Y7oWesG2qNvXrevGX1Guyn6VtWfvtWv1N9W3/w3/n/+wIct

         "]]}]}, 
     {RGBColor[0.628945704519947, 0.5247413019079686, 0.4493418222630344], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVE1PVEEQnOyyb2aeXEhA41FE3dWLBwVEMYpRlKAk3t2AP0AvKCcxwURh
/bhpWERufiWCP0CJgprAAlcN8WziAQVN/EJFq1KdcJh0v+5+PdU1NbPl7PnT
5zLOuRJWFutgzrlWrGoEf8JWsN4i0Vjl3CLsPGrGYJeQv4z1J3FuGLlCxD/B
uWXErnvnfuG/bqx3qB1B7hBqZpFvhv8Y/j7YeXwvoN8H9DiA2Gf8ewHrOeKf
YK+iZiboX/ZYzSneixVywrEGv2D7DqHmPmr/wV90+p/1eeSvRfWfhL8fNVn8
v5LR3sSwAfGuoJlaUPsCfgvqBuEPZNWzH6smde424tujMN8x3HWo74Pdm2q+
AcM2ZftNwx7z4vEZ/DL+f4V9fyTqV58Tv23wY048X4E/idjFjGIzxj+5p0+s
XzKqmXLifdn4IK5LWWE76VXbZTyRR3LYmcjn/LTM0e+P6tmA+vEoTUzwLLB6
iC3qbHnGnGFXFI6bfn0G4iTH5ax45sycfStqi9j3TCKdUV/U2TTqG8HdHPw9
tEF9TqHncS+8h41j7jVlWi1anzJqnsDWpurJ/l8z4rbTzpixosU5L+PUR3sQ
7oVgeyPXnCrP/1nTBNx/Ye967cdexPzSdEK9tAXdlUewR4K0/zTorHhm5OSE
13l2IJ5PNcO4aZN9qP+GqPpBL+6GLc57QN1TVzcs9wZ9Cqnu66xxy56cscOL
L2qzDjUTiN9DLBd0LlVBc1SM/1KUZn4nwkOfvFP7vFfU/8Mg7mup36A78No0
vmL3d1vU3Uxtdu5L/RH3mOn2lhfGHal46rY3pylVnPm8vQMlrzOp2FzUJjVA
HhljjnP22JtTgD8RNNPGqDOpWA0x8G5yltEobvmGEXvZ7tpcVI/N2Hd3sLuc
KNZtmicfD4wT4m81DqlB5vj+1Nne1AX5Im/fEt0T4k8Q/+h11kOwm6J6UTut
9nZW27mv2ftDjHwXiJNvBvVJbQ9ZH2rnaFBtJ2L1UbpbTcQFMX5PpD/22GkY
+zLr+Gjfw+aNH/I06qV/3oPGqNlHEKvxwkgNLlkNa6mdZXuryVmPnW/F3hC+
JbzPzLej/j+SI/An
         "]], PolygonBox[CompressedData["
1:eJwtkztPlFEQhk922e8730JDArEWuVMABSsgIYSE5RKl8B/ID5AGtAITKbiE
0GlcCXQIJGb9A2DkliwstBhCZUJBgYAWoBDQ581sMcn7zjszZ87MOQ+Hhp+/
jDnn2rAibD9y7kXCuTqcefBV4Nwm/j/4epLOtWJ58G/0x+A79CP0O/hZSB45
Hyh0CZ+F/0CPE/8E34Z3bgq9HXyOPglOU+Mv+ve4cw/gWawTXoJeSv4x+RvU
X0cfR9umRgf5o+h94Dl8EfHd+PLw3chydYc98BQ1zuCL5FfBa5LWu86oBc+g
/4S/I78U3gsfiZlvjXrXnL/lrEf1WoZ9ThTujNZIzD9i31K/CfzF2100syz4
EWemqL0PrwDfBxa7iq8V3kK91zGbaQq8S04X2ji+HvAKdhi3GSyDn4amfSIm
Rf7H0PAS1hLZTDQb7aAW/rXANfNv4AniJ8AZaibgRd6wdqRdzZNTAT7QW0Br
i6zXe2rswQdDm/UROb3wm8DuphmfhtaDetGMMvCkt9l7+Amx0+gXxI7hmwHf
Bobfk1MDbyY+F7edardpb2dphunQelAvb7Bn8OrIdqcYxdbDX6H9whrA697e
mnbaF9oZOktvaAst8BarHQygL2DZhPWgXtSzetdOcvCDQj+akWa14+2t68x+
ctsj6001ytlnpbe3q5lr9pve/oJ2ot0Ue5u1ZlLi7Y/pr2nn5dT6D4jOf1w=

         "]]}]}, 
     {RGBColor[0.7886232884399551, 0.580858024691358, 0.3554738496071829], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtVTlPlUEUHeF7b+Z7hYBLbGRzi0SxQBFIFNQIWljxC9QGsNAECwtA9iUW
BpEomrgrEBXtcIkiz8qlNiEuiIkmRmyFiBA8J+cWkztvvnPv3HvuufMKj5+q
PZnhnBvCysTKiZ1riZzLhn0QnNuG/X3YWYCGADgNOwVbhfN3wG+F/YqzBqyn
wP2C7YbvOqwefKtJOVeCfRt8Zr1zy5HiMN5wwrmlSD4XYJvtnPF47wnY5qRz
67FmsL+L+F9gWxCvNBK2EasO6zPWpFPMAqz+SNgziFnPnPC7y3KlH++i7xXk
tAhbGgs3bXFuBcVsxvnuWPUe8cp32OLXBPGxBd+fBMWrBuZASrhOnDch91zg
W/F7EpgK2AnYRNBdncAPYf3DfifwtSlhV8Xi6WOG7iAHPcYJ+SVnWcC+QZz3
yPd7UnW0w6cFNgffRnDvOcROZ2rPOAPGN3PlnezLFPx/e/kuJcUfaySuF3et
wL4Pttj4Yw53gnq+H37ZVm8XMHORekdc2vKfsPyYZwp+35LiOAr6njZd5SfU
7xmrt9lqLsNyCcVh35et9wWwHzJ1Xumlg0rE3IG1gH0x7B4v3HXsR7CKsB8N
ipc233tBOh6GfRRU52PY8+yZ8XkQcUrwe9y+d1uNNV65Uwvkn3jORUck7VGD
h4Epx++XQbohv+RiQyzdb4w1G+zFrlg9YC/WgNdrwLYD04b100u3C/i+PRJH
7MUI9mMJ9ZGckcce+04c+aSm8hLii7quN53Tl1yxxnLDvHLKszChWR+wnKmH
IpurBouZa/hnQb15DrvPK/5N7NfGmrvqlGaMHF31uof+9GUM1skaByPd12ha
vRiJq9WxeOjwyqvfzsnxtNXDHAfsfHMs3z4vXVKfnMvqoJreBnE5aHcdTWlW
j6WUK3Oew+/RSBy12LvEc9bOOa4zDlkn76/y0h/P93q9HeT6RpB2pkwbfL/I
4W2ctwLXhG8rY9XyJ1I9Z2PtPyGHDvKGfXusfs5bT/k+8K3mDJHPcpsHvrns
/3xSup4zrY5bHvmIkw7KnbPIt419YW5tXvGy7M2mNqgrvk18Ly5bvpwpzk5s
s8aZ41vG3Ddh/zAo1zHYXq9ZKog1H4umN+ZaZnGKLc4lbxj7f/lh+TCvCXs/
XwdppcL08yIoziGvt6rczqnVDtMr52nU+phrWiMmL9Y9f5M6a7e+LthcsfYK
mz+e/wcmnQA+
         "]], PolygonBox[CompressedData["
1:eJwtlMtvTVEUxrd7zz1n7zvQlmJEXYoKJg1KgvbSIqlR/wJMPAYkDAyq6hZt
GYhXpK1XPG+9h97aGnmMJUIrJhLBUNuoCr8v6w6+ZK31rbX2Pmt9++S2723Z
k3LONYMIrE2c20GggDM9OFcNzmCfA8fhUlnnLmWcmw0K+N3wU7AHqB3wztWA
oTQOsU64jsR6qUa1l+Hn4reCdriLoB+7QM1P7Mqs2ZPcoTexnuq9mpxB7D56
5uj1jthr/F+xcy+xP5L/lfxy+DZye+iRhl8PdsEdJTYDrlJ3wl4MinCLwCC5
J/G7qN/G+a30bMdvwf6N/Zb+k/gd1I7gj2MvBfeorQaf6T+Kfwi+LNhddIcK
7GvwI/g7QQP97+AvgRsDw/TagL8brhN/Fvl1oBjZTDQb5Si3Btwk9woYTtmO
1sGPxfZtx8BMapeDw3zPH/ge+E+x3e0AsVHsC8TuZ+wMnTUe29lVxHrxT8AX
M7ZD7fKWt7M1w+vYz8AP7P1go3YbbDaaoWbZCD5g1xJrhM/Bn4osJm5hsFqd
UcF8m8jZh/8dPPamMWntIPnfdFdvs9aMbnvTlLRVR+w5/lOwIrIej7DLstbr
L7Fy7G56nI1Mw9KyZqBZSAPSwhf8f5H1eEJ9vzdt6Hulnaw3ranHAvKPBOut
b9K31Se2W+3kqrQdTEtt+M1wD4ktK91fu+5LTNv1xFaSWxVsVtLYnGA1qp0A
gfwG8D5tb2YN3NRgb0eal/a1c+1eZzzwNiOdJY3dxX7lS2+H/CHsTYnNTj3z
+C/AqsjecBe93pT2pzemtxZ5q5XGM9jnE7ubNFYLn09sVtL4DW//BP0b9Ia2
Mv8tiX2rejbBT8S229PE5lE/P5gtTUlb04K9Pd1P3643rLesHWlX+dI8dOfN
9P4PsMWdMQ==
         "]]}]}, 
     {RGBColor[0.9077157943067033, 0.6392894857667585, 0.3139189623507805], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVktsVVUUPdx33z3nPj9FHflarbW0TdBEpfUTRcEER0wMQ2pETXUmlJqg
vlYIaGuiYrVUg9pqLNREkfiBxA91JiRNkIGaYIMmxkRKnWkRZaKuxVqkDk72
uvvss8/+n9v2yJYNm7MQwtdYFawtZQgnwNiTQtifh7APawjf56ohNBchPAa8
GTLfgL4CmedjCAvAXcDboGA75B/NRIeMZ8A/A9qPdQz4KNYs7vohk8xXwFdD
dx3rJHinLUuZx3HXceDd0N8F2bNYn4K/AnQR6xPgRq7zM8A/gh4C/SBJN++g
DT3A/+SSWYAvZ7BG8T1S6CzvHSxFl9VCWF/I529hayvk/rCuZvAGfG8T6HfY
/xh4H+7rxPd7oPfXJJOX8pv+H4FMO3hPYG3MFL8HMtm6AzGcA34bZxul/LkM
9Dbwe8F/GfyWqvi0v8T3JHSux34L5CaAE3h/Z8LM196o/PVgv17VvbSZ9l9v
u1scg++B5zPlhWdvsK6VSbmddL6eyuULc7M3yadLSu0fs0wbvrdi/1nQ/lxx
ZAwZS+ILsQL/AL5PAk8kxXcSdC1s7gCeAr4nys53gM9B1xjk/7QvY/aHPtPf
G0GXI+bT4DfVlOdp+0Yd9Jm+DxjTd+K6+Ttx1ynYnNVUF6wP+sDz/GZ8iBmv
GdfqX8bduXBfJh30kz5e9Jn90vBZ6mFtsca2R+WPsbvOdTLvezuSeuC5qLtG
fN+wMc8/ib1ZNi7OjkTlrxn4mag8XVoqDqOuGcacOWV+P0uy+0vQNUl2vQH6
UE0+MB6DFeWeuX4feyshfxD0WujdDdwKOg+5BuSuAT5bqP8vL11PVdXHqqg+
eQlnfwPegb1b3NOsbfbyRd/6nAPasCvK12H7/nOhOVGBngO2h3axxrbmSzFn
vD8CXix0/1yh3qJtnAO/RmHaWy9lP/24I6ofX4XOd5PmyxrwOp0L5oSzp8Pz
h728wj31dKm+aIfMW2lpltQ9W5j/tUm2XQn+TaXiwHg0CtXhgGflrO3fVSoH
5wvVxqD7jnNovKJZxHiRMi7Mf8M9+CHuOgz6E87+4jphvSy6H2jz50kz8T7w
/0268/dCOem0j+yxdst/kXQP87Dfs/henJ1OmmGcuzzX5bMbanovHq4prswX
5VZHxYHx4Bw87hrgPuUOO7Ybzb8KcWjD991RNdvjeu6wbZRZF9U365LyRz23
R9nT6xnLGUp8K/h3+u7uqNrqtk7OhTbX0miSbXx/2GOM4TbIjyXNbr6By0rl
IiTlYdw1VnGslmP/ilLvUFOpnmAuWZfM5YLfuKOev8S0/YTj0OX5u7OUrbS5
CtxjTD/m/L4xfxPWM2RbZr1H//pcJ28m4buiZtu85xJnB88OR8WR8bwwy3P1
L2PSmi/VXcXzPQN9wfXDOmr2u3nK7wdnzp6omTHo/4DMPcXeeg1754Fvhp5V
WFOQe91z5fT/4jPl/xC+N0fc36uTev5F99ac49Dr95V55/2cfXxreA/7jph5
po3068Ga+nBTzTnyHKYsz1Oe9vH8eNQ71u+Y/AeQ+kMt
         "]], 
        PolygonBox[CompressedData["
1:eJwtlElsTWEUxz/33ffu/V7wit0zVI2JMdpnSFRr3FnQJWIKlrQk0j6vRfWR
oKnUVLSGDhZKLIjZkkSCBRIpO4mhsTJGN+J38rf4J+d//+ec73znnO+Wbd1V
szNwzq0GIViedm4w6VwbpMU7VwF6sHtBR+RcVezc64Rzk+BV8FUgh10B7qIt
+a9n4OVoK0AtB3wCAVoJ+R5zTgF9FHYpaMX+gn4H/TKYDJ8KlhJ7EvxB20/O
ufjOh6+HPwdt+LZEyp1Hz6IPB/WhzrSzl4Hp8GmgB/+M19lN4ADaNb7dop4Z
8H7shXzbQOwL0G61gEcJ5WyMFGOxe/n2EbsLvRS+Df/zdn++lYXqgfVqvFdt
n9EPo02Ed8EH4Ufg87zuNgQ/bfcl5mWgGhbBG0CWeeRTzm1kNidi1WY9WIB2
BnRz3hNyzEZrJN/PUHfuhb8j7nuoGjvhBfQf2FPAFXhrrF6uAzlyFdH/hprp
PbRZoDOhGczEPoReF2hHbFcexJq9zfQ+9tVYvbae9mHfiNXb2/Dr2CO9ejdg
M+W80fAd2GOps4Z8GdCXVA1Wyy/QnlQPrBdN4C3+WfzX4nsW3p/UjtqupsCe
UDG/vXbYdtlyluD/Ff9CoJ6Vo52jpjfU85D6OrCPgVfwm/Cj2N2xdtF6ar09
6DW7ffg0e/Xcev8UzMEuRpq19Wwc+qa0Zreb+DXYl2K9HZuBzWIopVz2BibA
B1KqxXauwSun5bad8dgOnEpopjbbEbZfoe5QjbadM4op9egC/FtKd3kG/0Bt
Af61oe5YGauH1kvLkUdbHGmXLYflaoa/D7TTY9C3pDUr+7Y5rTdrb9d2YiW+
F2PN1mZaCa8HdaHOTNjsI9VidxgGr460i/bm7e0fj/XvsBiLDb16Z+/J/i1J
r121Gdusc17/JpupzfYfjX+alA==
         "]]}]}, 
     {RGBColor[0.9332233955718804, 0.703058488929701, 0.39299252627282927`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1VktsVVUUvbx337v3XCnphyIYIDGOlI9iVEzUOHAgmkjUAZ+JJv0l0tqX
EAp9IBUTRUGIQmOrtMZWMDFGnFexDCDSQKISbBMdYAJtIwwUpK9VgeJaWauD
8/Z+++yzzv6fe29D6eX2XBRFV7HyWF34+bIQRdMQPpBE0bw4inalUXQzRFEv
5P8F7fVBbxfoSui8APoGdE5CNoz1LXBace4Q9H/A3lQQfwO0DfpDkP0BfgXO
nIb+StA7kHeDnwU9g/1D4DeC9uaFS8wLOek0gM7i/BFg3gbdlpdt3O/JS/4L
+Fyq888AswP0L9g0BvmOIN3toN9BfhHyr4H/EfQGwa+hnUG2twZh0a8SaA32
FwP/KPQ7gT8AOgXaCHmENQiyJQjzNdAq0EuxfJrEuWvgG8EvB72OdRz65SDb
fi1G0W9Y30AWAXMRZONYx/C3DvRyrHtfyoTTBXvLWOeAVwHGuP2nnfcnsmcn
cPaDvo81AtHSIP6dRD7ti6VfgW3LbM/uRHG6D2fvCdJ5OxH+fuNMgN6N9QUx
QXdgjWL/H5xpAj8D2okzZyE7kMrXsvGvArMF/L+Qn4INn8WqpSJzCb4Auq4o
nM8j2dLrGmAMJwrCas4Uxydwz8ep7PgEdEusvLJOaBN55ve9VPnYB/oQzmSM
A+ODtYAxAv0d994Evwc2PJIo3wchfzyRv93gq2PZybgzZsvtV3+q3DGH9Ld/
zs5YfURfHgPOQvAfQnc1+PXAeBP8RE6xYBzYE+QZ52eB9TdwfuT/nHqCNVfO
Kx/Uob09/r8bWCdAm4Kwh3PKETGYi03uPfZgayK8IWMuxl03CvJrc076rOdV
0J9hT0J/D/C/B98MWVLQHOA8GIhFaX9fQT3JvmGfMQ/MXT4Ik3XBnIx6j/OD
mKzzimfGBqzxgnSYO94zYfxjBfnP/0tdd+ypqYJ8Jx77fcz4zO2IfX/dvUi/
nyuqDk9Yb8x2njI2Y1tlfdrDuqNN57H/dKo7q4JsX2/72R/MA3uq2jXCvPe7
91kPTa4Jyqdd86z9d1P5ztnD+3gv64nzg/OQ/w/EuoP4rKmf88JZ59z9lJdP
nFHc4wygbNAzeYntr49lM2ujbDlrmD1x3v1CjBrfscS1zD3WK8+uQh6fLwqX
dtfGij3jwPeA/IpEtXDBsW2DzlbXcpdrZwzyi34X+D4wTyOuycag/JQgb4g1
Z+nLU6lqNA7qwQ2O1bDrjnftTSVfk2g+dbjmGI/Nrm321SbfxRgPuTaeTCXP
BfVgg+/dmygHy4LmPs/9WVQtTfldYEwqjidtI0872IPEIg5tYL5oBynzxzxy
HjEHt1PFlVjH3RfkGWfml/fxrrWpfCinup9yxuuccYl5JJUdn6Z63wY8b6lf
6zdlroeZiytBsbiVCJt2MxZVmXpvQaZ40Bfun7Vv9Gs61V7F7wD9mvOV84X+
3gmaERFwAtYg+BT0lUx2802bD/4o5HdlqoWt/h7oSzVvOfsvFzWDDvqN3uY3
YmdQr/GdrMv0PVObaYYQk719KRHm9aL8/qog3zlXaA97+EqiGl0dVDcdflNe
zOTLq5n6gTOB/TLqmdXoXmB82QO8r+x5Pu73izrspwn3I+mk5fxe4Xs3P+jN
qfc7O+tvpE77N+menHEv0X72Zb2/GXrcCyXLFll+ONEZznXOxjbPR9pc53o4
7O+PtYn6v9rz6uFEOWT/NXv2dYF/MOgd70709rAG2btnPHPZm5whrX4rW4Le
prdw9oNU9z6a6Bunxjbwnay1zZxFLZYzBnzjmQt+Hy20zjxgtoPfDpxSrHs3
+v5223ArVa6uFZX/knX+B+PMjX0=
         "]], PolygonBox[CompressedData["
1:eJwtlNlL1VEQx4/Xe+/v/K4apm20QUVBaottWgb9BUX0EPVSoBWkpRCaG5lB
WZZWartFSj1ERO/R9lBEFLRQRL0UpBb6UIalLaZ9vo0PA9+Z75yZc2Y5swrL
NpRGnHPbkShSGoAB25Cf3rlu9PJk59pjzo2Gzo1LOHcV3MOhBPg3trMx85Fv
LWeSohZDsS6hzwDfJPZF8F78X0XszB/wAWz30NchC/Ef8pb7OfHywXPFg+8j
88CNSBr8RvwblIs7XCTWN2y1xKvDdhduLZJDvGPo4+A2oa8G/8XnAv5niJeE
vhufIvhCZBB9GP51xHxGwJXwZXB78P8Idt7eUootCX4EvQT8Er4APIrsilrO
o95yKNcf9A9x57IDu9sdZB9cBXoxXBs+o+AAWzs4IH8X/gsCq43eVA+XqnrD
v9F5uL/YEpy/wZ2GwQtVA/gh+Fb4GehN8GXon9H3Bnb33Wo23Cf06mTraRq1
HEZv0Vvh35I/ElrtniDJ4LLA7r4Dvg+9KrS7q6eVyuXNdzOyBN9f3nxf4LMS
vBxbJnoGchw9N7BePkIOo0dDOzuF3Ou5z3ls0/EtwrYG7BI2i+qRelXjbXDV
Q/VSPVAvVJPFgc2oZvUKZ1LBWxMW+ym2LeCUhHH/a87ZOd5q+5Xz1cQvIMbM
qM3wBbg+zTj8ZfRF8J7znTGroWpZH1qvu/HZD17l7e3jsS2Dz8D/Wsx61BuY
j3wVI4RrQh+MmE8m+il8roM79J7QRLgTOQ0XQy8HpyNLA9sR7YpmJAI+iK0x
ajukXUrRTEetpue8zYRmQz5T4XJDi6036q2HtEOaZWRaaCKsmWqAq0P6o7aD
2sUsYj4g10MkG+yRx85iTOdsHv6TwBORFrgBbC0x2yHt0mzkdrLthHbjXdx6
UYFtIG5/gv4G9Xw+fBv6ZHCPZpxYP7zt8jN88rzNuGZdO6xdVgzFUg1Ui5Vj
/dGflQXf7K1XXZon+BJstyK2E73SQ5tV3fk7+AvxOpz5vMf3JOcnqP/6/7Qb
gc2KaqLaqEfpY/ug2dCfpb9LM9aO/i1uf43+EP0lOd5qqRqqlv1x2/X38MWh
5VAu1bQVfmdonGqoWmqHtcv6M4942zntnu64grukhbZb6mENuDm0v0czqFn8
EdquaMYGwdXeaqs3V3mrkWqlnT7hrafqrXqST/x/GPTRVA==
         "]]}]}, 
     {RGBColor[0.9587309968370574, 0.7668274920926437, 0.4720660901948781], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNV1esVUUUPdx77pmZC/phwcTyIQJioSjg05gYilLVD7EGTQRDeZRHVRQb
CoIiGh+WSAKYmEgiT8AvQTD6EAQNopGiaJASUEMvNkB4uBZrJfAxmX3m7tmz
69r7Xjl4zD11pSzL7m+WZWXsH+NjZJFlV2CvwX4z1mTQRUV0BfvAPMu6g15X
1jf51uDuAuw9sbqB/xHw3A76W/BsLYuHchaVxDMb/P1B9wD9ZqazHj5fgn0E
1uUl7bVYVdClXPTb4PkQ+0KsljgfanoI1qGK3qWcgxXpWQ96MfZFvruy0Dfl
15rmeSUXTxN8EapZNh/3y9jfx74Hv9FRK+gHrCXWp6Yi3Wp8TvqjlGU3wuaG
JD7+9hbkz8H+LtYgnI2yjeTnvVt89wRkHsf61DovOccPS+yLI+DthX0eeB4F
7x2mD1dEfwL+ttD7M3y3wd4VZzcV0p/8vLu+LJkjLZ8+HI51SUm6j7JujCNj
Rn9uCVnWDvRG7GuCfNEa8i+LypeWQe9TD+pzLX6bjfPv4YfVJenN8+25eHqX
lB+MWT/Q0yGnOX57BfsXSe/+AHkdsTph3YfvHbloyuDqaNurjtP52Efg7jjI
PYzfdkKnsaB3YO9cVX5vCrKf+tzLN+gXrGWQs7wkfWjvspJyqN75ucA5+oFp
5jlzjrn4TibfDLMPafdw59Liku50cxxHub4Yc/qafmYt8a2+pbNvsC4Yl2HO
c+YFY0k9t8GGOt4plJtdHV/mD2NNXubzEOs21PVBfVgrQy1zuGmez8tVq6zT
1kH6fp7kB75F3ejLV6HnQsjcD/6ZoAfg/DfwPQ96N/bXy6IbcP5Y0L4riXeW
+Schxk3gOxpVo7SdPuAZYzM3k12M6VrQTUn1cxL76aQa2h2EP6zT0SXp/yHo
zZni+hVWA+gLg2JyKd7Kq8KqY3jzWFn5x/ieV5X/fgfvoSQ9x4Pe7HrqVhWu
MDd4Zw94XgI9MqiemEvUuy2+u4N/XFTOTHPcLw6KOWtlWkV337Me1Gdbobep
Q6zKNtp4Au9Mr+gO/f8TbJwB+k7QfbCmWk5f029k2qf5fEOh/GtMqiXW1G1V
xXO6Ze5NkjkmKLYzz4lv50L0KvA8hPPV2J8Oqpld2HcVik+IsrWn3+Cb9ANz
uJEYXFKOMVaMGW1mP2FfYb4xZ08YYwvzUO72QljYDPK/S6pf1jFxizSx60Ch
fNlUyCfMN/phVpKs17A/EKTDeuZp0ltTknCBOX00SV/iNbG6bPyvYJ8InlU4
P5yE1TXG/1M4n42743HeKirfakH/6p7HPCSuEPNpA335rn3LfY7PiQOfGQv4
Bt+aENQzKWeNe1ajexhlkmehMZ/5SSwlFhJniYcbc9UA87/eeET/035+3w/5
p8uqbWJvbS7M5P2vg/iJ38yjqc6T9pDfoVDurfZ7xGTa1aVQvjI/f8zlQ/Ly
m/xro2y5E/umXPoRB/bmqnPW75Zc/LxLXehP2tDJPYB4zxrjGeNdznWH/AX2
n3P18QfddyfgrSej7Hwq6h7fnevZY7n72osV6UR9roftOejnonzLN+lP5gbt
etN1McC+vTXKB01RmMvYnIlplN3Ho/xA3/E+sbHBtVsxbq11LdR4viL+97du
B3L5lm9y3ijb3pujeP7FXhMVw7+xT4LtB8HzZNK9zr57OsifjztnV7nnXR2E
uZMsg/lAPCTG9TNdF1VP+9yfqTuxZZ17An+j73P7v1UQto4F/85cPXt+pl7D
vCIWH0nSgzW00D10iOcb2smeyJqnL0+B98Kqapk1PT8X1k92/2WfY25/mVQL
m91jWU/EXOJEvbGCdbK0JH2+CeLhvMYzxoa29QiKS1FVvmxyzjycy656z6iL
rS/zmvqw3k9G1dIpxh1yAugXouYizl7Uj3FhXFkvjBXpBsd6v2liMGnW+OPQ
bx/oiUk4y3xpXlVd0LfMvxa5fE27WFPk55zwTkXfZ+qrUNxOBs0Le8zzT1Qt
jA6St91yBrheqA/vk59vD8rVP5gr45J6wdik3/da5l1ROHh3FGZVnBvPRuXw
dXjr2qAaYa0s8MzTw3XS3TjMPkq6TdD/DsaA/mcvWup47nN+7i/U29h/hoD/
QNSd/VFzDPvwVcZyYv4Z37ouiN8rk+S1w1ltEC78kdT3OQezHreGs3NNXpGN
jHvu+qSNfyX5cWTS3MCYjwia44Z6Phwf1SM32O7F7pVdoupqTNSswx6RVYWL
Hewb9o7OxtsVxmX6kT1xhGfLFp6HORfzTnvPk6z5447RUuPQfP/XWOn+Qmwf
Z5xl3TT6P8Ii9yDWWqP5eT47qCY7JM1yAx2jsc4NzgudgvKUeMk3mzvHjkXZ
UIfff8lVL5xXm4yrfyblY2/rSTtW2FfMqcI+fzkqt5njM6Lq4YagXl0yZlIX
Yg59cE0QfhJHOXt09cwcPDdTh8FJtT8oSd8W1nlK1Lvtg3Tpb31SVXMF54s9
Qfh0QVX9hzXDeullHGBP4Sy53P2X8y9/7+s65PnkqLmQ/X9NVB/uY7x9Jqi2
jyflw6OeBzjjMr8uCppJV7uH/peEL08k5SH/q3D+PxKFbZyh6mzP0zj7Hwsp
K3k=
         "]], PolygonBox[CompressedData["
1:eJwllEdoVUEUhoeX+97cey0LY1m5sMcSG9aduhFsC8WGCiY+hVgSo7F3sTc0
C0HQCO5ULCtbBEtiotgQgw0rUTSW2DWJmvj9nMUP/z9z5sycNh1yC8bnJ5xz
aRCAQu/czqRzCzOcewVvFjtXyfoR1prDq1m7x4FzrH1LObcPfZS9QxzOjpzr
gs1F9FBwDL2I/V3wHaAWfRz0zzCbrtjOZ38LPJ+15/CC0Lmb8L34z4cXsLaV
/Yf4nxWZT/keAo7Cq+WT96xDv4HXc2ZMws68R/8D5/F1AN0In4e/zfBN4B36
dWRn93BnA3t/wWFnNjXs9QYl3L0SnzXs9QETEhbT58hyoFx8wGYJejZ4DE+B
9bwljX4EzwBr0N/REzn/Ev1D72MtD17O2mZ4J/wPg2/Cb1r5weYV+83BVvaL
IrvrPVgMr8LuIPdXoXPRi7E5xfnhoKu3HClXpaDCW41UK8VUjL6MPpmwOzuj
B3H+NrloBN3QA9G34HWgI3o99g2B5fRFynKoXKqGqmWr2HKVQmfCt3O+WWA5
3QZfAZrwNQqbwfD7nMmCtwOZ8CpwGt4etIHfxX8xfB+YjE6D6fibBj5x/mNo
XD0zAF4LZgT2Zr29n7fc6Q1blH8wM7AYFesPkBPYm5bDs73VLgnWoRu4P4e7
P6H/qN6RzUYZa0XYhsSoAVJOothqptqdYO0StstBLXvHib/RW81Uu/3kZzW6
p7feSIDV3FchYPuUOyrhs735UkyKrYu32qpmi9BZ6JHwM+Aqvj+mbHY0E0/Z
q4/srgXoEeiFodVSOVQuXWyzoRib1D/eYivG5is6D1xDF6Lnwjdw3nP2CZiD
HhPaW5+BsfDOsfWaenAK+0l0SdJiCmL7A/QX6I/RX6OZ1mxrRjQra/ERBDZD
mqUHxHMWX1OxL0O/BRuTNoOaxW+h9apm4Cu8ZWx/lWrSAj7JW++op+7oP4os
Nv1hhZHNvGZfd+guzaBmUTPal7223npRf9YNeGtvvaqevA7/GVovXwC/Qquh
aqkYerGfE9ls6s156LneaqUeVC+qx9Rrymlv9n6jR7NfCurgSyPrPfXQMv1f
kf0d+hP0N6wKzVZ/Xg/O745s9vRnVxPPl5TVTn/MX81Hyv5a9bx6vzyy3KqH
rsBXhhaL3tDdW8+qd9UDTfBxodU6UA11V2y9pRp7+H/KqeQp
         "]]}]}, 
     {RGBColor[0.9842385981022345, 0.8305964952555862, 0.5511396541169268], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwtlWto11UYx4//3347//OHijKVisiVl4giV71IJzN8ESkWsaJJl5kLt3Xz
Mq9lSFBBV+eLzN5lgUNx9aJtFl3ncivxNqeSqcuphVEbpWbNJOjz5duLL3yf
833O7TnP85yK+kU1CwshhFdAGdiQQhiThzAbXBdDWABm4HAEu7oUwp7yENbg
149dhX0cvQt9M2O/o5WYv4KF5qG3F0NoRu9GX5eho03DrsPuAxvQB7FrCvY5
Ae9njZdZ6x/8m9H/YM5a1loHlqGfAkvR1mOvhu9Db4J3gZs4zybGNqNPAT3w
Hei1aC2s+Q38XTAOew4YHz1Hc6fi/x32U+BuzjLI2F1oizjD32jVjN0B7wXV
3G8E/MhZT7HeGnxfBE8w91r0bfjPALuwO7Ar8X0VXIVvxponWWsj/hF+DXoH
vrPBGPwbQTt6C/ZF+JfMuR/fOxn7DN4FHswdI8WqTHcYFcIo+D2sdzXrtTN3
FhitWIBL4Rn6LPTB5LvrDY/Dt6O/zfzJ6LXovYwdK/Mb9cB3R9+lAfwAn8P6
zxUcg2/hnybnygrwKHoz9i9oW1j/X+zHwCq0lWAA7QRYnfsN9BZ6Q73laeYs
xv4p+a0U05+TY6rYPs3+x6JzSrmlmHbCf+XcS/G/nLHD+J+VjtbBGVfCJ0bn
0gWwBPt27rgT30awN9lHvnrzydF30F2Wg6PJczT3IpiE9hVjNbnfYAL2bvZv
Zv8+7GmsfQX+rXpLUIzOIeXSWnwO/R9jxVpv0q1cBi25c1y5fiP23Nw5uz05
Z5Q7+1VT8NPJtdTJeZ/EdwA8kzlnmuBD5Y7Vw/j/xlmOKqext6DXwyOo5L1v
Yf33WWsrqIJPB23wy5jzAf6XKGeiz6yz60zd6Duia2scSNF31t2nsv4j2B+C
sZljoFgoB5QLuuMZ5k/Bvyf3GW6FV0Tn9ibwOXolYzMz+9wGX8wabQX3oOvx
bY0+m2pctX5ldO0q55X75SXX1nrsmWgHomthATgMn4C+i9hUYvdiP64aKThG
ilUD+LjgmCq2N4AHcr+53n4sdlXmmlXttmCfw78W+2a9TTRXD1Av2E/8Xgpe
42v0edF3VQ2oFoaK7i264zD8SHLujQbvqBaTa0c9Wb1ZPVe9dzr+ddEQf5P9
RuBbdX7017H/jO7J6s0D3LmJ+Qeje41qQLVwEP0Q2rOMDcNHwCr4e+hl6A9F
10oD2JPcQ9RL1HNy5W/RtaGYzkUfBq/l7iHqJfOTc1V71MOfj+79+iNGkmte
ta+esQRewXp1mWM6Hr6Msf6Ce/5yeGPyXbTHEHwfZ2ktuEd+kZyTyk3l4EfR
PVG9UTm1F7stujbVk9SbVFOqLe15Er+zyX+N/iT9TRuTa0UxVWwVI8VKPeaM
/obo2CuH+tAuYL+VOYcOlLsmVBtvMPYXvDO5V6lndMDPR2u6g+6iGCvW+tNq
o2tYtaw/aGHRf7D+YuWUcus+xs4X3JPvhc+PrnWdQWc5F50LqmnVtv4s/V16
Y721/hj9NfrDv9f5k2tHMX8B7ZPkXFSP3QafWHLtqGdMKrlnqHeoJnbin5ec
O/rj9Nf9Bwt+I2M=
         "]]}]}, 
     {RGBColor[1., 0.9011878379757167, 0.6584771962044689], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3e4ldWxxr9vn7O/XUQpglKkioqxQxRFrw0RkCodDgdBFLCBWGMh3kSv
haaICmJBsHdBmiCiIFiisRAVFcsRRSRYokk0osl9f8x7HvLHetbs9c3qs2be
mbV269Mn9BufS5Lkh8okqVB+XJoknyjtrvRgliQ1KhxAEj1XjGPE00u/eyrV
F11dEb8biN5kmvLbSknSXvwfKH8qC/7WKm8puoXSIP1eqtRVaZv6WpdPkvv8
+zN9Xyve01R3YEXwHiSe1Vn8hu7lcdHvQuUnK81X+UelGGd1Qf2qrIvSXJWv
UfujzfeheO4Wz3DxfKbyvqJnq50J+vZCLn7nlK5R+k7ll6n+/4nuKLoyF/S/
RF+aBk9b0bOKSdJMa9hJbTatDHoJ66DyJqJvVb5VfdWI/xylKvU1Uml32te8
huvbOPEtFN8hyhcov1DlY0WvykXqo/Sg+N9gfrlo/wLxjIA/F21Tl/Y/Unud
lU9Oot9DK2NNxxWi/KNC9MdYaZOxjPJ67prFb+gbaFP0NZpr93KS1BX9kOpO
U/kBXvN24i+L7iC6Qt/2V15X4z+5FHUfUn61eOqI/oO+PVwR7XwterDaPJB1
V739ckFT3tnygWw0V1t/17ebxNNOZQuU5qWxl+zpPvrWS32cLvoV9fOnQvBT
b4Hmfp3mWM+yAE/bXLSxv9vhdzvT94huWBFz6FaOcVQWYm2Ge016mkaeSexl
myTKqs0zORd1t1lWq31mRnnfq9zGKNNrNO76FTHOYaUY61vqt6j0v2qjgeZS
KsT6vah8mea0tDLqLNccr/V8XlQ797itOuK7W/yNVbdnKeb4nMp2qS0vhBw1
tawiV8gqZRepjYsro6yT1uFO5a9lsUbs/RfiP0z5HUqjRT+rtqaK/lb52eyX
+jpL+RyVfS/6EOVDsuD5HLlF3iui/p1Z8J2j8kNz0ddE0RPzUZdvr7K3Sq1U
fpHKL1S6Kxc6hvwM78sr1j9ji1F3jPJbXZ+6t6uv2zn7oufnYpyH56LsO9EH
Kz9Pdf4p+txiyCJ7ORPZqIg95fdwfdsiuqnm2yEX+uTMJPrf4jH0Vl+9stCL
VeL/Unm5EDoVukJtnp+Pfun/s4r4tkl1R4n/G2RF+SVKv4q+WPmGYpzJ/mrn
hzRozibnH54T0RG5GH+nXOjIGvc1OxdtHsR6FaPf0cWQHc4y+/pmKdZriNp/
X99uEj2Q81SIc/Go8mH50Dnoo1NFD6mMviZorkMro/8PizGPnPhnlWKNNpbi
G7w36Nvgythb1v89tXO08itVPjAf7TCXZqp/gPKFqnu45nCt6COTmO+J1ts/
iec+0SOUn6y6AytjH7uIHlAZ8+2Rj/7oq6voQZUhk81V50DlT5diDRZap51e
iPF8qHxAIdaZtZ+QjzVkLav1+zblw/T9tizKemk807JYQ+RtZCnkAXmZqfJZ
Kj82CZ01Xek+9TVP38+oiN+s5Xyv0U1ZtH+I+K/h/Ovb1chmIc5IlfK/aDwd
WXvLM/O7PInfR4ger/ysilgffme5WMOfk7ApJe/j7FK0U6O8qhS2c4XaH5/F
nrFfE7NYd9Z8V2ROSaohWaR8odIuopcrX6a0q+j6ypcq1RG9JYsz8bLyjSpb
orRNvxebB/ox5Y8raYrJw8ofVdoiumSacvp80v2SP6Wk4Sa7KH/C9AaXbxX9
rtv8yvwLXP4X5Y+4feo95rqLPTbmwpyY219NP+1+4X/PbYJRsKtNSiE7b1aG
XRpRCrpa+dHmZ4zd0hgfYzhV39aJp28pxshYSx7LE24fOwUPun2A+F4W3V/5
Bx4PY6vrcTJm1nKx13y68peUjmH9Tf8nibXZ4PFw9mkT2T9Sv19WOkU8M0ux
X+wb+/mM25wGVlP6t7FQE6UK69/DbAsu0PdjlZolUe/jNGShqPScUiOV57E7
St3AGCpbpdTCmAoecNcK5SuVvhHd2H0d6bqNTf9WqQVyrzxV3jIXZW1M72O6
dS74kP9muWijRznsaCY5vzyN8RyVRN7MNPLyvvericf5k8f2rOV8tfLnlfYX
PQX7rHSQ6ILaWJNGO2DIF9LAjeix1ebfbP5fkxgD/J2SaG+1+Rt5HXYTfYXX
v7vo/ZSvNT94fbnHs8z010nUW+G6n3rMrOfH3tOv3eZa7+nzHmc70X/3b2jO
38M+g8jYRz6zPby/tPPXfOBzcOj7hcCErxUCf4FLa4wXsPvY+XtzoZvQSx8Z
l44pBIYAJyxXPjMfmAQcwhm41nYKPAQuelw8v5OMXpoFdr8+HzoN3QY2nGe9
il+BfzEvF+neisB69bNoG/wDJr3H9h38Cgb8AZxcCt/g2yzsAXZhZCHaRW/v
m4u273X7l+UDV6CP7y8E7n1A+ZX5sMvo0zfV1iT1+aPKf8nHWOjvD/mw4+hZ
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
77roW/wm7mGv9Xgo3+Gf5wKfI/P4IdxRNvYZ50zV4gYwA/b4K7dDjs8IFv3V
sW1+gz2/cjl33V/UnnfTrOdorzN+2kuWN+jHrbN5y4ru+dx6Bh8NW4Wd4izX
WC9tMg/jXOlyznhP80Njz5f5/zj7ee2xO6eU4386J5Xi21L/F2lgKd5aDSqF
f9HKerNLKXio1z2/8z8u3fyWAezYy3d0o5LYu8aWCc4QvgXnaL3vBkcmcW85
yPofPEM5eJp7bWwGZwqcBlb5xeedsw5W5D0DWB97is5CHrFr3BW0Md/vvQ/4
DIeU4798h5b9hi6Nt2dgIrAR2Oknn8nMa77Ca1jtdeBs7m75gWY/J3tPiQ9g
14i5NbDcMn50CvoIPVPl/UQekH9sLTKPH3SDyz8pxdvWT0txPw6mxf7yfmCG
58s5mOZyZOdMy88Ir1+tb02Oz8N7A7AF+KSL14m+f3Y5uo7YCO+zuYfd7r7g
v9V4Fr1H/JN51MaQicOiTzp7j7g/GmCsuLEYd7zEGbB5+At7mOckz4s93Wz9
so/PxFTPBXw00/O91Laet3DYAWKx2IKhjp1gW/GXwHTcN/H+Z5LHT1yioeeF
/4i/hf+11m+CeQcN9jjD+h7/6Uz/PrAc/888qBx6HLuJfSdOWeP70H6Wa2Q+
8//f5pbCVsKPzq/13+Cr9W+Rf/y0Me6vr8s4BxvdNj4v79+IpfLmjXfevPf+
pBCx04LH08f12P9HXM7bVOKRxBg5L/iwtXdHtbG2E5K4OyUGwX3p/wPS7MIv

         "]], PolygonBox[CompressedData["
1:eJwtlllsVVUUho/39nafcyNTIqEFFZAXm1aG8mCcYkylaAwtFFrGVihIiwMF
FROJJqJGMZpIApRoCEMgDolDS5isoKIWkClFlDIWaJXZIViBaDR+f34fVu6/
hr32OntNd3BtQ8XcVBRF70I50Mw4in5PR9G8TBT9mETRHPhu+OfhO+BfgU8w
XAx/Cf5l+CkZy14FVyH7DlzImQrwk8iugl/AphN+Afw/8Ivgz8Lfm+Ue8Dzu
PpAbRUPhR6PfhawY3Bv7dfDroT7gu0MUDcB/NfpdnP8KfkPad1bC74ffAl8C
HQC/D30ILoK+Dj6js/XY3wXfhM8a+GHwG8D9kKVviKJz2E+Nfafu3ikb4hkP
DSTOKmSHse0Brcb+LR5xG/gj8eCXkMXg5ZzPx/dSzl/j7tnwVzg7H/4w/H34
OwJ+ke9vw29P9GvRz4T2wHfAN+KvCLoFfy3Bd63C/43gyZwvw64L+4nYHsTn
HvBybCajPxkbF0IDgn3K9zfcWcTZO7LGpcimcfYS+jnghchOwQ/P+tuVE+Vm
I/5aiXU437QJfAH7enRPY9Oe+Bv1rQvQB/C33LlIsWLTCl4ILcs4hyti15hq
rQq+C/4X+GnwO4j3Mrgn9q9xtgXZbdz/A7IGcCX2Z5Q7aAW2c5EdQrcs8Vv0
Ical4ObYuX0dyoM/Ad+Jvgv9cfDpxN+6Dh+fgXsgW4O+F5Th7v7QedUXVIxu
d659SzYd++8T3z0B/6fQ70U/K+0cKpfToV/TjlmxJ9DmyG9wHbwVWsXdI6GB
wTWp2tQbtKIbzTf/Cy7gDdPosonfXj7ka0jWb1PAHeXwz3JfZcY99hy4AjqT
9jePBw/GRzn6MqgF+4Pwo9A1qd7hs8G1rzM6eyJxbKrpk4l7Vr1bQwy/ob8I
Tc7xnbq7Gn1bjntSvXlUMaF7GNoMrsfmkYxnyuPgdmwqwZeRlWQ9AzQLFOPn
2H8QnAv1sHr5FNQAHks888DHsClO+Q2PJ+4p9dZEYvgZ/03Y5GE/DCpFV8gd
tWl/cxu6j4N7VTX6SbBP+e7CxwPYBvihGc8gzaK6xLWpGOrB+bHfTjNAs0A5
UC52cv848K3BvasaVa2OTaxrxmY7uot87zMZv5He6mzs2PVGeivNUM3S3cgm
gMcQU69czyjNKvWseldvXgMen9hWPaPeSQXXejlnpmT9xnpr9XAnsn3QypR7
WL18P/oO9G+iPwRfBt+X33uwqcXXg/jfgv+tihHdzcGzRTOqmnhL0PdO22YU
eDCylrRzrFxXxY5FM0uzazk2I1J+gyPgcmT90JUoJuxHZL0LNNM120/H7rVR
yB6NnSPl6h3ibefcteBZup7z18H7c4010zTbtIO0i1SzFzi/BJvulGe6Zvtj
yEZnPKPrwLVQacY7cVbsnafdV8f5v+D/5Pz8yG94NTgmxaaenxF7R2hXrMS+
KPEM0ixqxiZf+wT9G5xdAh3V7o3dW9qp2q3audq9k5Cdg48Tz1btLO2uP4Jn
w03c0Q0uS1xbt0NfwucE70LNNM221Ylzp574FN3fsb9lKv6Wgc/Hvmsc/BPg
fZo52BbwPpOId3ZwblQjqpW3g79NOR6EfV7wblKNqlbrgnOjnCq38inf+k/w
FHh74lmkN9wGPha7V/UmE4JnrmavdtrI2DtGu+YhaCP4p9i7QzlT7jpj7wbl
TLmbHly72rHatTOCa7vv/7XdP+tcqGZVu/pGfatqYi+2O4L/OyyGrii/0J0p
/2fRfxftDO0OyQah+yL47TVjxqBbkzg3miFr1TuJZ6FmViP4veDdqBmvWb8p
8bepJ9Qbyolyo/8QjeD/AMlTQfk=
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lVlsjVEQx09v7+13vhvKm9pDi6SlDyTePFletEprSS21b23xgsSrJZF4
VIoSnrzaQqKxxRJC7EtipyhaUiJI1IPfPzOSezLzzZmZM/Of5Y5YtqF2fSaE
0MYp5MzMhlDD2YXwVRrCFmRrYwj7C0Jo5Ui3lvvJuRA+ywDBPuT8Qp8khDJk
7dAObHcia8Y2U2D2sl3M91d03kD7ojcafiB8J/qt3G+Cf8qp5o26xOgszkPu
mnL29nD4i9xdhZ+B3fy8xZxJLG7xbbw3Ef0Z8L/gq7LmS34kq3J5HXQKet3E
sYx3e6Ad0fzIxwHOXr5L0GuBnuRUwh+Hvke3PGf5bec7It8aTVbs8oXEdxf5
OGLczN1fbDZCj0FLOSMLTbcfJxYaxsKqQzhjex3buandtWRMLiBbXacJXz+5
+wSdzhu5IvJBfw3fP5B3QhdwSrEZAD7rXF92Nehdw38pdiv5/o78vWJDr4J4
DnPfwPcX5MMSw0o4VfLu52j1VZ3/wB+F74bviVZH1VP4ZbzuJXxfhZ7g/gOn
Ef4JsufReu6FaJFhoVw/Rus99eBb+Cr4R6nloFyq89Z3wqA/Z6xyh97ER4Le
afjf0NmJ1ftZNPzKM6bfiPLanH3Ll3yWJFYT8WrtkciP8EYx8oPeC5Kfwq4d
n2ezlrNy34b/3anF3wLNFlktKr2evTmLVTn2em+syxmmlT5Tmif1tjAW5pPg
F+G3C34IMbyOJnuA/3eqK/zj1HpBIIsMTszXy2j5C4c98Et97jR/qq1yUPxD
va6vos203lIcA/NWL9Vtn/tX/JoVxaYYhUeb13cyemfwM8ixPOhYjY+G8SDe
qec0Y38/NV8tXosJriPdS+iUY7goNZyEl/qhzGflUIHVWLUujiZTzfSW4u7y
/lyC/QPiueH24vXenNT86x3tCc2wcriMw9t88wuzfe40fws4d+DvJ3YvfpTP
rGJTHc/5HtM+m+UzVeP9L//SER7aKcLsYWoYarbqot3VQu8lFkdF3vaBYv6f
+7H/uyJa7reKbAdpF0XHSrrCVbHscKwU62jnp3qNVKsd7lfyBt9R2lXniWEM
8pmpxaTY8onNgGahDnl93vKaG20najf2Rothv8+8ZlUzuyTanGnehnu/qm+X
I1/h+1Z7txr5FfxcSKwXZKPe0I6/nLWYmt2P7qelNoPH0V/tu0s7TDtFu2WV
97l6XDMo2u47Xz2i2VOfyPcVr/s83+nKr9H3p/ao7PRfItutvue/RYulyfPa
6Lu9C/oPsMHjdg==
         "]], PolygonBox[CompressedData["
1:eJwtlEtsjWEQhj89/znf/Iew7QUJdUlaupHYWSkRl+rlnOIclbqEOJQViTUS
iaXbRsJK7EobFnVLqoIF2tq41q2ohpSIDRaeN2MxyfvOO/98883M98/bcbD9
QFUIYQ2WYAUL4SSO89NC6AD3pyE0Z8GIc2IIL/C1gJfju4xWxNcG34A9R+vD
txKtHV6HdgbfNfJWw8+CG/MhDGb9rIc5/Ph6MyEswGYQP2Z+Vg8xJXgL+Ybg
i9FvRfdJm4R3EXsBvRHeRL05tHry3yP+Inw+eAR9P3oDd1pG/Gn4THGsCJ/i
m+PkWoTdBFcrB7H18OngZ8SsT/zOBfgVbADcz/d15B8mXyXrZ2xB24zty7pP
mmpSbVnuuo74GvOzFmI30KqwjeRrxV6iNacem2Brie+I3lvVoFpK6I8S7+Fw
9BpUi3rQC+9Ev4/eQP4i+LX5LFSTajsEP0fv/6IfNp+BZnFXMyT+dnQ8qDPh
hjUlPsMIbk19FupxW+o9Uq80Q82yW/0i9ht8u2aZ+ixUUwH8yvyu2jHt2m6s
QvwP4veAt2pGaKPEdBPflfpdnsC3gTvRxzPesxJ3H8W3gu+/4nsKnhsda2e1
uw9ynmsWfAI8gv448R6qlzvJV+b7Kb7ZZT4TzUYxZfSB6LupHdGu7CXmCPE/
4RXwH/PdvoTvN7iWmq7Dh+A14Al8vzL+zWfzGlSLdvAU+cfN764aPoA/2f/c
8I/gSfNZnYB/AV81z62Z9IFnR38LenN6e7XRd109VC+1Q9ol1bQKPR/9bWvH
y+jfMUt8J6bAR83vIt8x8Hvz3mim78x3QruhN3mHXEvzPhuOD0vy/qb0tjSj
Teb/CP0r9GZW6y2a30U96QG/Nd8VzfAN+B9lsZKI
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0TlTU1EYgOEjBQHUtGzqjFqijf4E1AI3DCSYkGBARVHRRv0BwD9A7Bxb
OzF2LmjJ0hAQRlCCG7IV2DGDDc8pnnnP9829N5l7j/c9Sj08EEJ4wUx1CMma
EKb1VF0Ip8nXhtBDgc+JENKaIUUnHSTtT7j2JFfN12jno/0V/aSXdEIv65Tn
t7h21pwzl7Vb32uj3z+sH9jhHYdosD8YG5/h3vp4j12dprSDTr7zjar4bNdl
nLPapWme+Z1RNvyHSYrOefsm15/Rs5TtsuZZva4rds1aMh/RgjmnFT2qb+2P
aY953nmOVecf3KCXIl/sf+ov+rjFTRbsf+sfbnOHfhbt1/Qvd7nHABX7dd3g
PoM8iM+139QtHvOUJ/F++x39xxAjDLNtv6f/43vhOWPs2ieoYdxc4g0N5kbv
solW5/O0OZ/Ti1rtHbx0fq3N5nG9YH7Fcvw+5q/xW+lS/B66D3GrVHk=
         "]]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0LsvnlEcB/Ajbu8rEa3NILy7KLZSETFgIWmHSmhdBkzV2d8g0cVlZHBJ
aJeWXuhAtAaKROJ1Dbq5NBLqFovPM3zyPb/Lc57kJDp6Xr5LCSH0sZMZwipN
WSGsyPxYCB/kK/WWLIqH0C8L9RMknWvM/maE0GqWxxf9GT6TpY5zR6/dIb1y
uax+Ln/J3/zjnC66uXDfofl7qt2fVD84d9Go7pYHdFKl3jS/d26nQd0h92ij
Ur1hfut8x1sq9P7onUX/8b8jvlNoNiyPaXV+YW/Nzpw6of4hfzLPuv613g3N
lNtd1TshGb0DMwywzan+jpzlK4PsskeL77/JguiN5D4HvFFPEyPX232Un4iz
FL0fY4xT6/+pMsfelfzPFCPuGSXT+YnZU57ZLaGYMkqj9zBfo845TWbbS5f1
6kk5wSKv1QvykkdWVlPb
         "]]},
       RowBox[{"-", "100000"}]],
      Annotation[#, -100000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz7kuhFEchvEjdq2loLLMEI3CUoqoUSjQGqOgMNYouANXYrkGewYFYo1C
hCAK+2iQSPxO8eT5L+853/lqU5n+ibwQwjyuikM4QzmqS0Ko4H00l4VwXBrC
oPqQB/iIW83P1ZWoka/iA6zZrSJpn8CKehlZuwb9kHpGPqmf4gRP82lRCJt2
Dfp1rue0/Ib6xK5TPWr2JtuOOvUkp/mVX9CGDCbwHGfOXduP4N49j3jAr/7S
bke9iy00mW3zhXmXb43rv9zRgUb1POfwiVeZc6TkhzFm/8Qt/M7T8Z08xXe4
RU4/yx/x//mT/+K/xxwmsRDfGbPunov5mMWi2Q93c5G3FSMfhSjAt/wNst62
hx70og9Lzv0DXClGxQ==
         "]]},
       RowBox[{"-", "200000"}]],
      Annotation[#, -200000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0Lkyw1EUwOGTRhZLwRPQWZKhwngLb4AwY0sqxBoK2wwFT6eiYIwojBmx
R+K7xTe/3HPP/xYZnK/OVjIRMcdVNqKYj7jWkja0vxAxwIXzJfddEdlcRLdZ
DwX66OXRfk7z1O0ecmc/Y//P7zYtwn1HH+z/6C+bbFFLe+YdNhjy7bLZCq/e
aqW3OGbc/Yy2eXPfZJU1Ts0m3J/oOWfcpO/NGmlPn9Ku3vLirmmnxjaTvPPB
uvsdHdYp/eSLivOujui0fvPszarzgpbZNxt13tMxPdDF9N9o0bmuJT3SJfN/
VaI4qw==
         "]]},
       RowBox[{"-", "300000"}]],
      Annotation[#, -300000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzj0vw2EUhvHzV6revgA6NMKAxGsRKgZfAJulEolRu6EVJgy03kri9YPp
aJHYRFj5dbhynfs+J0+e3HZ5o5RExCbuOiMmuyLueYo/eYIbPJqJGMM4MhjU
n+oH+Iyz/MH9fMLDbkbQhlW5V3/EQ3LF/JaO+EaP+UH3iBX0yVWsd0ccu0/4
UH622zEv6Z7Mr3hB0xvBiZs9u+B9fseX3Z/dOS5QaP3HPoUD+5o8zcvcrlvz
/haKqOh/dL9IowMzukW3s1znXd0V5+VLnuNrLulveV6+4QVucFn/DwoIJvE=

         "]]},
       RowBox[{"-", "400000"}]],
      Annotation[#, -400000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNzTtOAlAQheEREgUKQOhVKisp1FIBCVYmFqxAXYBuQIIgxh2olQIqia/W
11okoaGytbHjK/78c85M7i0dnTSP5yJiH+P5iNdUxBue8IJn/OgfeYR77CxE
PHArHTHkmtznKg/4VH/HFbnC21zUdTmRiejwAR+iiYJdzd2W/pbbnNX9+Xdq
PkNOXkQeSTcTuy/+xgd23XzyhX3Om3n0zHU+5xIa9g1377wsL+HfO13uYFV/
ab9i3uO0XMYaruR1/S9v8g1v8DXPAHfGJc8=
         "]]},
       RowBox[{"-", "500000"}]],
      Annotation[#, -500000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1947, 2359, 1948, 2028, 1789, 2580, 1945, 2357, 1946, 2358, 
         1868, 2117, 2249, 2458, 2248, 1764, 2058, 2341, 1928, 2340, 1929, 
         2024, 1786, 2338, 2339, 2235, 1862, 2118, 2342, 2577, 1930, 2088, 
         2438, 2236, 1863, 2113, 1864, 2237, 2439, 2440, 2239, 2240, 2238, 
         2242, 2241, 1761, 2052, 2053, 1923, 2084, 2430, 1755, 1781, 2324, 
         2215, 2216, 2114, 2325, 2629, 1782, 2326, 2222, 2223, 2115, 2327, 
         2630, 1783, 2457}]},
       RowBox[{"-", "600000"}]],
      Annotation[#, -600000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1817, 2507, 2508, 2504, 2506, 2505, 2601, 1809, 2478, 2477, 
         2600, 2599, 1934, 2615, 2616, 2612, 2614, 2613, 2069, 1866, 2054, 
         1933, 2347, 2346, 2122, 1865, 2245, 1932, 2345, 1788, 2460, 2344, 
         2120, 2244, 2243, 2343, 1787, 2442, 2441, 2089, 1931, 2060, 2059, 
         1765, 2252, 2459, 2253, 2119, 1870, 2251, 2446, 2097, 1949, 2581, 
         2362, 2127, 1869, 2250, 2361, 2360, 1790, 2096, 2095}]},
       RowBox[{"-", "700000"}]],
      Annotation[#, -700000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1767, 2449, 2450, 2261, 2263, 2652, 2262, 2653, 1810, 2651, 
         2393, 1991, 2479, 2480, 2481, 2002, 2033, 2032, 2078, 1994, 2076, 
         2010, 2617, 2005, 2589, 2590, 2591, 2079, 1972, 2070, 1969, 2375, 
         1971, 2588, 1970, 2646, 2448, 1766, 2628, 2257, 2461, 2258, 2123, 
         1874, 2256, 2447, 2255, 1873, 2121, 1872, 2367, 1953, 2584, 1952, 
         2658, 2659, 2644, 2365, 2128, 1871, 2254, 1950, 2363, 1791, 2029, 
         1951, 2364, 2583, 2582}]},
       RowBox[{"-", "800000"}]],
      Annotation[#, -800000, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1954, 2366, 1955, 2030, 1792, 2368, 2259, 2260, 2129, 2369, 
         2462, 1793, 2370, 1956, 2376, 1973, 2136, 2137, 2138, 2067, 2378, 
         1974, 2377, 1975, 2379, 2391, 1987, 2636, 1807, 2068, 1961, 2645, 
         1962, 1808, 2471, 1976, 2592, 2466, 2467, 2071, 2470, 2469, 2468, 
         1977, 2593, 1999}]},
       RowBox[{"-", "900000"}]],
      Annotation[#, -900000, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70473506260525*^9, 3.704735077849285*^9}, 
   3.7047351242222643`*^9, {3.704735268173107*^9, 3.7047353560603657`*^9}, 
   3.7047365219902287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["qoutwfs"], "Input",
 CellChangeTimes->{{3.704734890785562*^9, 3.7047348941985683`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]]}], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}], 
  RowBox[{
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"]]}]], "+", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     SuperscriptBox["\[Mu]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.704734894734874*^9, 3.704736522109621*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"qoutwfs", "\[Equal]", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.704734963171315*^9, 3.704734966615429*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}]}], "d"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704734967226067*^9, 3.704736522248795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M1", "-", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"d", "-", "1"}], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}]}], "-", "1"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"d", "-", "1"}], ")"}], "2"]]}]], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704734226381188*^9, 3.7047343214895973`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.70473422711633*^9, {3.7047342643285313`*^9, 3.704734321977767*^9}, 
   3.704736522389719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M1", "//", "Factor"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.704734340252849*^9, 3.7047343514029303`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", "\[Mu]"}], 
        ")"}]}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "m"}], "+", "\[Mu]", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.704734343722761*^9, 3.704734351792891*^9}, 
   3.704736522581665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"qinwfs", ",", "m"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704733012000565*^9, 3.7047331714380713`*^9}, {
  3.704733226930266*^9, 3.704733274750944*^9}, {3.7047333104602213`*^9, 
  3.7047333107358932`*^9}, {3.704733357498149*^9, 3.7047333585633497`*^9}, {
  3.704733537912521*^9, 3.704733540748355*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], ")"}], "3"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   SuperscriptBox["\[Mu]", "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       ")"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.704733359314911*^9, 3.704733541944726*^9, 
  3.704736523510427*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704733359314911*^9, 3.704733541944726*^9, 
  3.704736523570531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"qoutwfs", ",", "m"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704733012000565*^9, 3.7047331714380713`*^9}, {
  3.704733226930266*^9, 3.704733274750944*^9}, {3.7047333104602213`*^9, 
  3.7047333107358932`*^9}, {3.704733357498149*^9, 3.7047333585633497`*^9}, {
  3.704733537912521*^9, 3.704733556083198*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.7047335566678*^9, 3.704736523792938*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7047335566678*^9, 3.7047365238718443`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704733534286635*^9, 3.704733536390143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "\[Equal]", "0"}], 
   ",", "m"}], "]"}]], "Input",
 CellChangeTimes->{{3.7047334015364237`*^9, 3.7047334048043947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], "d"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.704733405171088*^9, 3.704736523968514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"qoutwfs", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"qinwfs", ",", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7047359260190783`*^9, 3.7047359461450453`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.704735936981209*^9, 3.704735946641361*^9}, 
   3.704736524143124*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.704735936981209*^9, 3.704735946641361*^9}, 
   3.704736524173942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"qoutwfs", ",", 
   RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"qinwfs", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "n"], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "-", "1"}], "n"], "%"}]}], "//", "FullSimplify"}]}], "Input",\

 CellChangeTimes->{{3.70473604736336*^9, 3.704736083909327*^9}, {
  3.704736246628436*^9, 3.704736255485094*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7047360618764257`*^9, 3.704736084242805*^9}, 
   3.704736255876162*^9, 3.704736524405558*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.7047360618764257`*^9, 3.704736084242805*^9}, 
   3.704736255876162*^9, 3.704736524596334*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7047360618764257`*^9, 3.704736084242805*^9}, 
   3.704736255876162*^9, 3.704736524694643*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7047360618764257`*^9, 3.704736084242805*^9}, 
   3.704736255876162*^9, 3.70473652469741*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}], "-", 
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "2"], 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", "m"}], ")"}], " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}]], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7047362731989727`*^9, 3.7047362939021072`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.704736276607854*^9, 3.704736294266654*^9}, 
   3.704736524955627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"qinms", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "n"], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "-", "1"}], "n"], "%"}]}], "//", "FullSimplify"}]}], "Input",\

 CellChangeTimes->{{3.704736308465583*^9, 3.70473630968566*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "m", "+", "\[Mu]", "-", 
   RowBox[{"m", " ", "\[Mu]"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
   RowBox[{"n", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{3.70473631091967*^9, 3.704736525133869*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "m"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "m", "-", 
   RowBox[{"m", " ", "n"}]}]]], "Output",
 CellChangeTimes->{3.70473631091967*^9, 3.7047365251356487`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.70473631091967*^9, 3.704736525137474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m", "-", 
     RowBox[{"m", " ", "n"}]}]], "-", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"1", "-", "m"}], 
     RowBox[{"1", "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}]], ")"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7047363252916117`*^9, 3.704736347496859*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7047363478561277`*^9, 3.704736525373774*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limits", "Subsubsection",
 CellChangeTimes->{{3.704736384203796*^9, 3.7047363863658733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BD", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "Qin", "-", 
            RowBox[{"n", " ", "Qin"}], "+", 
            RowBox[{"n", " ", "Qout"}]}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "Qin", "+", 
            RowBox[{"m", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Qin"}], "-", 
               RowBox[{"n", " ", "Qout"}]}], ")"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "Qin"}], "+", "Qout"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], ")"}]}], 
      RowBox[{"d", " ", "n", " ", "\[Mu]"}]], "/.", "mychange"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Qin", "\[Rule]", "qinms"}], ",", 
      RowBox[{"Qout", "\[Rule]", "qoutms"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.704736399070149*^9, 3.704736440779292*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "d"}], ")"}]}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.70473640790519*^9, 3.704736441377088*^9}, 
   3.704736525660935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"BD", ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.704736449230999*^9, 3.704736473838619*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", "\[Mu]", "-", 
    RowBox[{"n", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{{3.704736458344777*^9, 3.7047364742346153`*^9}, 
   3.704736525834681*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
   RowBox[{"1", "+", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.704736458344777*^9, 3.7047364742346153`*^9}, 
   3.7047365258612967`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1873, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 308, 8, 33, "Input"],
Cell[891, 32, 1000, 33, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1928, 70, 109, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[2062, 75, 90, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[2177, 80, 531, 15, 59, "Input"],
Cell[2711, 97, 488, 15, 53, "Output"],
Cell[3202, 114, 98, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3337, 120, 533, 15, 59, "Input"],
Cell[3873, 137, 1084, 39, 59, "Output"],
Cell[4960, 178, 70, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5067, 184, 1406, 41, 131, "Input"],
Cell[6476, 227, 250, 5, 35, "Output"],
Cell[6729, 234, 495, 16, 52, "Output"],
Cell[7227, 252, 703, 21, 55, "Output"],
Cell[7933, 275, 706, 21, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8676, 301, 283, 6, 58, "Input"],
Cell[8962, 309, 440, 14, 52, "Output"],
Cell[9405, 325, 328, 10, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9770, 340, 1174, 37, 153, "Input"],
Cell[10947, 379, 444, 13, 52, "Output"],
Cell[11394, 394, 483, 15, 52, "Output"],
Cell[11880, 411, 223, 5, 35, "Output"],
Cell[12106, 418, 221, 5, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12364, 428, 201, 6, 33, "Input"],
Cell[12568, 436, 640, 21, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13245, 462, 498, 16, 58, "Input"],
Cell[13746, 480, 568, 19, 53, "Output"],
Cell[14317, 501, 7376, 135, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21730, 641, 934, 22, 58, "Input"],
Cell[22667, 665, 812, 25, 53, "Output"],
Cell[23482, 692, 3380, 69, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26899, 766, 324, 8, 58, "Input"],
Cell[27226, 776, 671, 22, 54, "Output"],
Cell[27900, 800, 484, 17, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28421, 822, 639, 20, 82, "Input"],
Cell[29063, 844, 720, 21, 53, "Output"],
Cell[29786, 867, 244, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30067, 875, 447, 13, 35, "Input"],
Cell[30517, 890, 7402, 135, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37956, 1030, 532, 15, 35, "Input"],
Cell[38491, 1047, 625, 22, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39153, 1074, 225, 6, 35, "Input"],
Cell[39381, 1082, 248, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39666, 1093, 694, 19, 35, "Input"],
Cell[40363, 1114, 6018, 172, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46418, 1291, 2034, 62, 107, "Input"],
Cell[48455, 1355, 6719, 124, 222, "Output"],
Cell[55177, 1481, 4099, 81, 234, "Output"],
Cell[59279, 1564, 6624, 122, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65940, 1691, 1572, 45, 59, "Input"],
Cell[67515, 1738, 12323, 218, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79875, 1961, 528, 15, 59, "Input"],
Cell[80406, 1978, 446, 15, 53, "Output"],
Cell[80855, 1995, 617, 20, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81509, 2020, 701, 21, 59, "Input"],
Cell[82213, 2043, 147, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82397, 2050, 1097, 31, 105, "Input"],
Cell[83497, 2083, 689, 23, 53, "Output"],
Cell[84189, 2108, 689, 23, 53, "Output"],
Cell[84881, 2133, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85012, 2139, 723, 23, 59, "Input"],
Cell[85738, 2164, 96, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85871, 2170, 390, 11, 35, "Input"],
Cell[86264, 2183, 1510, 51, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87811, 2239, 1516, 46, 70, "Input"],
Cell[89330, 2287, 93, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89460, 2293, 662, 19, 59, "Input"],
Cell[90125, 2314, 5115, 92, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95277, 2411, 345, 10, 58, "Input"],
Cell[95625, 2423, 218, 6, 50, "Output"],
Cell[95846, 2431, 189, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96072, 2440, 641, 19, 43, "Input"],
Cell[96716, 2461, 616, 22, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97369, 2488, 721, 22, 43, "Input"],
Cell[98093, 2512, 718, 24, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98848, 2541, 1509, 50, 59, "Input"],
Cell[100360, 2593, 9370, 168, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109767, 2766, 250, 7, 35, "Input"],
Cell[110020, 2775, 1057, 32, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111114, 2812, 253, 7, 35, "Input"],
Cell[111370, 2821, 1346, 41, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112753, 2867, 583, 17, 59, "Input"],
Cell[113339, 2886, 1181, 38, 59, "Output"],
Cell[114523, 2926, 900, 28, 54, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[115472, 2960, 90, 1, 38, "Subsection"],
Cell[CellGroupData[{
Cell[115587, 2965, 1357, 40, 131, "Input"],
Cell[116947, 3007, 146, 3, 35, "Output"],
Cell[117096, 3012, 506, 17, 56, "Output"],
Cell[117605, 3031, 794, 27, 62, "Output"],
Cell[118402, 3060, 761, 25, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119200, 3090, 226, 6, 33, "Input"],
Cell[119429, 3098, 783, 26, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120249, 3129, 439, 11, 58, "Input"],
Cell[120691, 3142, 1306, 41, 54, "Output"],
Cell[122000, 3185, 783, 26, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122820, 3216, 222, 6, 35, "Input"],
Cell[123045, 3224, 2743, 87, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125825, 3316, 1571, 50, 105, "Input"],
Cell[127399, 3368, 138, 2, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127574, 3375, 357, 10, 58, "Input"],
Cell[127934, 3387, 443, 15, 62, "Output"],
Cell[128380, 3404, 115, 1, 33, "Output"]
}, Open  ]],
Cell[128510, 3408, 92, 1, 33, "Input"],
Cell[CellGroupData[{
Cell[128627, 3413, 275, 8, 43, "Input"],
Cell[128905, 3423, 4702, 91, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133644, 3519, 522, 14, 106, "Input"],
Cell[134169, 3535, 246, 7, 53, "Output"],
Cell[134418, 3544, 94, 1, 33, "Output"],
Cell[134515, 3547, 234, 7, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134798, 3560, 89, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[134912, 3565, 533, 15, 59, "Input"],
Cell[135448, 3582, 1084, 39, 59, "Output"],
Cell[136535, 3623, 70, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136642, 3629, 1363, 40, 131, "Input"],
Cell[138008, 3671, 125, 3, 35, "Output"],
Cell[138136, 3676, 486, 17, 56, "Output"],
Cell[138625, 3695, 772, 27, 62, "Output"],
Cell[139400, 3724, 737, 25, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140174, 3754, 232, 6, 33, "Input"],
Cell[140409, 3762, 1261, 44, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141707, 3811, 374, 11, 59, "Input"],
Cell[142084, 3824, 1291, 44, 58, "Output"],
Cell[143378, 3870, 171, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143586, 3879, 187, 4, 33, "Input"],
Cell[143776, 3885, 737, 25, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144550, 3915, 276, 7, 57, "Input"],
Cell[144829, 3924, 737, 25, 54, "Output"],
Cell[145569, 3951, 223, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145829, 3962, 213, 5, 35, "Input"],
Cell[146045, 3969, 2272, 75, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148354, 4049, 186, 4, 33, "Input"],
Cell[148543, 4055, 363, 12, 50, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148967, 4074, 87, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[149079, 4079, 221, 4, 33, "Input"],
Cell[149303, 4085, 1161, 35, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150501, 4125, 169, 3, 33, "Input"],
Cell[150673, 4130, 223, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150933, 4139, 167, 3, 33, "Input"],
Cell[151103, 4144, 856, 27, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151996, 4176, 966, 31, 82, "Input"],
Cell[152965, 4209, 142, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153144, 4216, 100, 1, 33, "Input"],
Cell[153247, 4219, 189, 5, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153473, 4229, 256, 7, 33, "Input"],
Cell[153732, 4238, 144, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153913, 4245, 357, 10, 35, "Input"],
Cell[154273, 4257, 1511, 51, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155821, 4313, 389, 11, 59, "Input"],
Cell[156213, 4326, 689, 23, 53, "Output"],
Cell[156905, 4351, 451, 15, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157393, 4371, 358, 10, 35, "Input"],
Cell[157754, 4383, 1970, 66, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159761, 4454, 795, 23, 130, "Input"],
Cell[160559, 4479, 332, 11, 33, "Output"],
Cell[160894, 4492, 280, 8, 33, "Output"],
Cell[161177, 4502, 1155, 39, 62, "Output"],
Cell[162335, 4543, 460, 14, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162832, 4562, 261, 7, 33, "Input"],
Cell[163096, 4571, 98, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163231, 4577, 249, 6, 35, "Input"],
Cell[163483, 4585, 1039, 32, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164559, 4622, 103, 1, 33, "Input"],
Cell[164665, 4625, 96, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164798, 4632, 172, 4, 33, "Input"],
Cell[164973, 4638, 782, 26, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165792, 4669, 174, 3, 35, "Input"],
Cell[165969, 4674, 711, 23, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166717, 4702, 440, 14, 56, "Input"],
Cell[167160, 4718, 362, 12, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167559, 4735, 103, 1, 33, "Input"],
Cell[167665, 4738, 776, 26, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168478, 4769, 361, 8, 58, "Input"],
Cell[168842, 4779, 820, 27, 52, "Output"],
Cell[169665, 4808, 1112, 38, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170814, 4851, 269, 8, 33, "Input"],
Cell[171086, 4861, 168, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171291, 4870, 1098, 35, 82, "Input"],
Cell[172392, 4907, 245, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172674, 4916, 1400, 40, 105, "Input"],
Cell[174077, 4958, 915, 30, 52, "Output"],
Cell[174995, 4990, 1080, 35, 52, "Output"],
Cell[176078, 5027, 220, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176335, 5035, 381, 10, 33, "Input"],
Cell[176719, 5047, 381, 11, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177137, 5063, 165, 2, 33, "Input"],
Cell[177305, 5067, 473, 16, 52, "Output"],
Cell[177781, 5085, 779, 27, 52, "Output"],
Cell[178563, 5114, 1404, 48, 52, "Output"],
Cell[179970, 5164, 142, 2, 33, "Output"]
}, Open  ]],
Cell[180127, 5169, 96, 1, 33, "Input"],
Cell[CellGroupData[{
Cell[180248, 5174, 474, 13, 59, "Input"],
Cell[180725, 5189, 1302, 46, 58, "Output"],
Cell[182030, 5237, 266, 7, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182333, 5249, 679, 20, 83, "Input"],
Cell[183015, 5271, 1473, 53, 54, "Output"],
Cell[184491, 5326, 353, 11, 33, "Output"],
Cell[184847, 5339, 295, 9, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185179, 5353, 321, 10, 59, "Input"],
Cell[185503, 5365, 1106, 38, 62, "Output"],
Cell[186612, 5405, 411, 13, 54, "Output"]
}, Open  ]],
Cell[187038, 5421, 92, 1, 33, "Input"],
Cell[CellGroupData[{
Cell[187155, 5426, 469, 12, 59, "Input"],
Cell[187627, 5440, 1396, 48, 62, "Output"],
Cell[189026, 5490, 1484, 50, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190547, 5545, 732, 23, 43, "Input"],
Cell[191282, 5570, 1056, 34, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192375, 5609, 2092, 62, 67, "Input"],
Cell[194470, 5673, 7977, 146, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202484, 5824, 237, 7, 56, "Input"],
Cell[202724, 5833, 172, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202933, 5842, 1307, 45, 111, "Input"],
Cell[204243, 5889, 424, 13, 51, "Output"],
Cell[204670, 5904, 321, 9, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205028, 5918, 383, 11, 44, "Input"],
Cell[205414, 5931, 10187, 182, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215638, 6118, 218, 4, 33, "Input"],
Cell[215859, 6124, 895, 29, 52, "Output"],
Cell[216757, 6155, 780, 26, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217574, 6186, 101, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[217700, 6191, 93, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[217818, 6196, 999, 27, 82, "Input"],
Cell[218820, 6225, 1510, 49, 62, "Output"],
Cell[220333, 6276, 1941, 60, 62, "Output"],
Cell[222277, 6338, 3368, 107, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225682, 6450, 573, 15, 59, "Input"],
Cell[226258, 6467, 1200, 39, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227495, 6511, 355, 10, 59, "Input"],
Cell[227853, 6523, 1415, 47, 59, "Output"],
Cell[229271, 6572, 1150, 38, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230458, 6615, 221, 6, 35, "Input"],
Cell[230682, 6623, 1564, 51, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232283, 6679, 490, 13, 59, "Input"],
Cell[232776, 6694, 1068, 34, 54, "Output"],
Cell[233847, 6730, 1504, 44, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235388, 6779, 1792, 55, 302, "Input"],
Cell[237183, 6836, 144, 2, 33, "Output"],
Cell[237330, 6840, 144, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237511, 6847, 451, 12, 59, "Input"],
Cell[237965, 6861, 12205, 317, 203, "Output"],
Cell[250173, 7180, 1635, 54, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251845, 7239, 224, 6, 35, "Input"],
Cell[252072, 7247, 1387, 41, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253496, 7293, 344, 9, 35, "Input"],
Cell[253843, 7304, 438, 12, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254318, 7321, 971, 33, 59, "Input"],
Cell[255292, 7356, 341, 11, 53, "Output"],
Cell[255636, 7369, 131, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255804, 7376, 152, 3, 33, "Input"],
Cell[255959, 7381, 1153, 39, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257149, 7425, 182, 4, 33, "Input"],
Cell[257334, 7431, 561, 20, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257932, 7456, 876, 29, 61, "Input"],
Cell[258811, 7487, 7902, 144, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266750, 7636, 104, 1, 33, "Input"],
Cell[266857, 7639, 168, 5, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267062, 7649, 324, 10, 35, "Input"],
Cell[267389, 7661, 1588, 53, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269014, 7719, 1992, 62, 65, "Input"],
Cell[271009, 7783, 261, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271307, 7794, 2195, 66, 65, "Input"],
Cell[273505, 7862, 6426, 119, 235, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280004, 7989, 89, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[280118, 7994, 592, 15, 82, "Input"],
Cell[280713, 8011, 1053, 36, 40, "Output"],
Cell[281769, 8049, 1896, 65, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283702, 8119, 258, 7, 33, "Input"],
Cell[283963, 8128, 238, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284238, 8139, 169, 3, 33, "Input"],
Cell[284410, 8144, 199, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284646, 8153, 128, 2, 33, "Input"],
Cell[284777, 8157, 156, 5, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284970, 8167, 265, 6, 57, "Input"],
Cell[285238, 8175, 139, 3, 50, "Output"],
Cell[285380, 8180, 211, 6, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285628, 8191, 1035, 36, 63, "Input"],
Cell[286666, 8229, 1104, 39, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287807, 8273, 189, 5, 33, "Input"],
Cell[287999, 8280, 94, 1, 33, "Output"]
}, Open  ]],
Cell[288108, 8284, 1094, 33, 67, "Input"],
Cell[CellGroupData[{
Cell[289227, 8321, 501, 14, 55, "Input"],
Cell[289731, 8337, 2249, 75, 76, "Output"],
Cell[291983, 8414, 126, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292146, 8421, 404, 9, 58, "Input"],
Cell[292553, 8432, 1229, 40, 62, "Output"],
Cell[293785, 8474, 1977, 67, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295799, 8546, 452, 15, 33, "Input"],
Cell[296254, 8563, 72, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296363, 8569, 575, 16, 103, "Input"],
Cell[296941, 8587, 861, 32, 62, "Output"],
Cell[297805, 8621, 72, 1, 33, "Output"],
Cell[297880, 8624, 1010, 36, 62, "Output"],
Cell[298893, 8662, 72, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299002, 8668, 926, 29, 93, "Input"],
Cell[299931, 8699, 826, 27, 62, "Output"],
Cell[300760, 8728, 168, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300965, 8735, 1948, 69, 128, "Input"],
Cell[302916, 8806, 1154, 41, 62, "Output"],
Cell[304073, 8849, 962, 35, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305072, 8889, 430, 12, 55, "Input"],
Cell[305505, 8903, 965, 33, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306507, 8941, 462, 13, 55, "Input"],
Cell[306972, 8956, 373, 12, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307382, 8973, 207, 3, 57, "Input"],
Cell[307592, 8978, 94, 1, 33, "Output"],
Cell[307689, 8981, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307820, 8987, 184, 2, 80, "Input"],
Cell[308007, 8991, 120, 2, 33, "Output"],
Cell[308130, 8995, 119, 2, 33, "Output"],
Cell[308252, 8999, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308409, 9006, 99, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[308533, 9011, 1301, 37, 106, "Input"],
Cell[309837, 9050, 1263, 44, 54, "Output"],
Cell[311103, 9096, 1265, 43, 54, "Output"],
Cell[312371, 9141, 1550, 52, 54, "Output"],
Cell[313924, 9195, 1724, 60, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315685, 9260, 355, 10, 35, "Input"],
Cell[316043, 9272, 3017, 95, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319097, 9372, 556, 16, 83, "Input"],
Cell[319656, 9390, 2780, 95, 55, "Output"],
Cell[322439, 9487, 2564, 82, 63, "Output"],
Cell[325006, 9571, 2281, 73, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327324, 9649, 431, 12, 59, "Input"],
Cell[327758, 9663, 2170, 71, 62, "Output"],
Cell[329931, 9736, 3359, 106, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333327, 9847, 275, 7, 35, "Input"],
Cell[333605, 9856, 307, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333949, 9870, 402, 11, 35, "Input"],
Cell[334354, 9883, 3849, 77, 232, "Output"]
}, Open  ]],
Cell[338218, 9963, 1605, 53, 75, "Input"],
Cell[CellGroupData[{
Cell[339848, 10020, 510, 14, 82, "Input"],
Cell[340361, 10036, 1550, 50, 86, "Output"],
Cell[341914, 10088, 169, 4, 33, "Output"],
Cell[342086, 10094, 130, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342253, 10101, 103, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[342381, 10106, 340, 9, 59, "Input"],
Cell[342724, 10117, 647, 21, 33, "Output"],
Cell[343374, 10140, 270, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343681, 10153, 330, 8, 59, "Input"],
Cell[344014, 10163, 505, 17, 54, "Output"],
Cell[344522, 10182, 227, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344786, 10194, 484, 13, 105, "Input"],
Cell[345273, 10209, 96, 1, 33, "Output"],
Cell[345372, 10212, 439, 15, 33, "Output"]
}, Open  ]],
Cell[345826, 10230, 110, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[345961, 10235, 215, 6, 35, "Input"],
Cell[346179, 10243, 3895, 125, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350111, 10373, 247, 7, 35, "Input"],
Cell[350361, 10382, 825, 29, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351223, 10416, 877, 28, 61, "Input"],
Cell[352103, 10446, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352234, 10452, 435, 12, 58, "Input"],
Cell[352672, 10466, 606, 19, 54, "Output"],
Cell[353281, 10487, 399, 13, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353717, 10505, 498, 17, 59, "Input"],
Cell[354218, 10524, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354349, 10530, 183, 4, 35, "Input"],
Cell[354535, 10536, 225, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354797, 10548, 228, 6, 35, "Input"],
Cell[355028, 10556, 355, 11, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355420, 10572, 211, 5, 33, "Input"],
Cell[355634, 10579, 1867, 59, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357538, 10643, 534, 14, 35, "Input"],
Cell[358075, 10659, 117489, 1986, 377, 87559, 1494, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475601, 12650, 328, 9, 35, "Input"],
Cell[475932, 12661, 161, 3, 33, "Output"]
}, Open  ]],
Cell[476108, 12667, 92, 1, 33, "Input"],
Cell[476203, 12670, 173, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[476401, 12676, 305, 8, 35, "Input"],
Cell[476709, 12686, 6061, 178, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482807, 12869, 415, 11, 59, "Input"],
Cell[483225, 12882, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483356, 12888, 670, 18, 130, "Input"],
Cell[484029, 12908, 1482, 52, 67, "Output"],
Cell[485514, 12962, 505, 17, 60, "Output"],
Cell[486022, 12981, 96, 1, 33, "Output"],
Cell[486121, 12984, 98, 1, 65, "Output"]
}, Open  ]],
Cell[486234, 12988, 110, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[486369, 12993, 2396, 62, 247, "Input"],
Cell[488768, 13057, 720, 17, 35, "Output"],
Cell[489491, 13076, 3598, 72, 227, "Output"],
Cell[493092, 13150, 550, 12, 35, "Output"],
Cell[493645, 13164, 3447, 70, 231, "Output"],
Cell[497095, 13236, 531, 11, 35, "Output"],
Cell[497629, 13249, 5863, 110, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503529, 13364, 257, 7, 33, "Input"],
Cell[503789, 13373, 2294, 77, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506120, 13455, 181, 4, 35, "Input"],
Cell[506304, 13461, 2363, 76, 63, "Output"]
}, Open  ]],
Cell[508682, 13540, 1807, 54, 43, "Input"],
Cell[CellGroupData[{
Cell[510514, 13598, 325, 8, 58, "Input"],
Cell[510842, 13608, 1559, 46, 62, "Output"],
Cell[512404, 13656, 297, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512738, 13670, 289, 6, 35, "Input"],
Cell[513030, 13678, 15425, 350, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528492, 14033, 359, 9, 35, "Input"],
Cell[528854, 14044, 459, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529350, 14062, 7098, 170, 167, "Input"],
Cell[536451, 14234, 6905, 169, 139, "Output"]
}, Open  ]],
Cell[543371, 14406, 99, 1, 33, "Input"],
Cell[CellGroupData[{
Cell[543495, 14411, 249, 7, 35, "Input"],
Cell[543747, 14420, 3146, 94, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546930, 14519, 298, 8, 35, "Input"],
Cell[547231, 14529, 6057, 178, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553325, 14712, 360, 9, 35, "Input"],
Cell[553688, 14723, 306, 8, 35, "Output"]
}, Open  ]],
Cell[554009, 14734, 3017, 89, 75, "Input"],
Cell[CellGroupData[{
Cell[557051, 14827, 95, 1, 33, "Input"],
Cell[557149, 14830, 2647, 85, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559833, 14920, 184, 4, 35, "Input"],
Cell[560020, 14926, 70, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560127, 14932, 240, 5, 35, "Input"],
Cell[560370, 14939, 124, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560531, 14946, 423, 12, 59, "Input"],
Cell[560957, 14960, 877, 30, 55, "Output"],
Cell[561837, 14992, 627, 20, 53, "Output"]
}, Open  ]],
Cell[562479, 15015, 561, 19, 58, "Input"],
Cell[CellGroupData[{
Cell[563065, 15038, 184, 4, 35, "Input"],
Cell[563252, 15044, 141, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563430, 15053, 585, 19, 58, "Input"],
Cell[564018, 15074, 1903, 63, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565958, 15142, 211, 5, 35, "Input"],
Cell[566172, 15149, 2362, 76, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568571, 15230, 220, 6, 35, "Input"],
Cell[568794, 15238, 1413, 42, 62, "Output"]
}, Open  ]],
Cell[570222, 15283, 1339, 40, 67, "Input"],
Cell[CellGroupData[{
Cell[571586, 15327, 184, 4, 35, "Input"],
Cell[571773, 15333, 69, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571879, 15339, 181, 4, 35, "Input"],
Cell[572063, 15345, 79, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572179, 15351, 417, 11, 35, "Input"],
Cell[572599, 15364, 173, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572809, 15373, 272, 6, 58, "Input"],
Cell[573084, 15381, 1461, 47, 58, "Output"],
Cell[574548, 15430, 497, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575082, 15450, 787, 19, 35, "Input"],
Cell[575872, 15471, 3803, 76, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579712, 15552, 698, 18, 35, "Input"],
Cell[580413, 15572, 5038, 98, 584, "Output"]
}, Open  ]],
Cell[585466, 15673, 501, 14, 35, "Input"],
Cell[CellGroupData[{
Cell[585992, 15691, 654, 17, 58, "Input"],
Cell[586649, 15710, 7899, 143, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594585, 15858, 380, 11, 58, "Input"],
Cell[594968, 15871, 1141, 37, 54, "Output"],
Cell[596112, 15910, 967, 33, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597116, 15948, 368, 9, 35, "Input"],
Cell[597487, 15959, 113, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597637, 15965, 349, 9, 58, "Input"],
Cell[597989, 15976, 1196, 41, 54, "Output"],
Cell[599188, 16019, 1143, 31, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600368, 16055, 216, 5, 35, "Input"],
Cell[600587, 16062, 470, 15, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601094, 16082, 535, 14, 35, "Input"],
Cell[601632, 16098, 268968, 4442, 374, 235833, 3897, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[870615, 20543, 1226, 40, 85, "Input"],
Cell[CellGroupData[{
Cell[871866, 20587, 451, 12, 59, "Input"],
Cell[872320, 20601, 476, 15, 33, "Output"],
Cell[872799, 20618, 464, 15, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873300, 20638, 316, 8, 58, "Input"],
Cell[873619, 20648, 529, 18, 54, "Output"],
Cell[874151, 20668, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874308, 20675, 182, 4, 35, "Input"],
Cell[874493, 20681, 103, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874633, 20687, 528, 13, 59, "Input"],
Cell[875164, 20702, 3556, 116, 126, "Output"],
Cell[878723, 20820, 4625, 140, 129, "Output"]
}, Open  ]],
Cell[883363, 20963, 227, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[883615, 20973, 1597, 50, 137, "Input"],
Cell[885215, 21025, 73342, 1255, 371, "Output"],
Cell[958560, 22282, 76170, 1306, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034767, 23593, 626, 20, 59, "Input"],
Cell[1035396, 23615, 34973, 601, 371, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070442, 24224, 86, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[1070553, 24229, 101, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[1070679, 24234, 1355, 37, 106, "Input"],
Cell[1072037, 24273, 2589, 91, 63, "Output"],
Cell[1074629, 24366, 2685, 94, 63, "Output"],
Cell[1077317, 24462, 3089, 103, 63, "Output"],
Cell[1080409, 24567, 3256, 112, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1083702, 24684, 609, 17, 83, "Input"],
Cell[1084314, 24703, 2504, 81, 63, "Output"],
Cell[1086821, 24786, 2502, 81, 63, "Output"],
Cell[1089326, 24869, 2407, 80, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1091770, 24954, 431, 12, 59, "Input"],
Cell[1092204, 24968, 643, 19, 51, "Output"],
Cell[1092850, 24989, 288, 8, 51, "Output"]
}, Open  ]],
Cell[1093153, 25000, 255, 8, 82, "Input"],
Cell[CellGroupData[{
Cell[1093433, 25012, 275, 7, 35, "Input"],
Cell[1093711, 25021, 307, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094055, 25035, 402, 11, 35, "Input"],
Cell[1094460, 25048, 3849, 77, 232, "Output"]
}, Open  ]],
Cell[1098324, 25128, 1576, 52, 93, "Input"],
Cell[CellGroupData[{
Cell[1099925, 25184, 182, 4, 35, "Input"],
Cell[1100110, 25190, 103, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100250, 25196, 528, 13, 59, "Input"],
Cell[1100781, 25211, 3556, 116, 126, "Output"],
Cell[1104340, 25329, 4625, 140, 129, "Output"]
}, Open  ]],
Cell[1108980, 25472, 227, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[1109232, 25482, 1597, 50, 178, "Input"],
Cell[1110832, 25534, 73342, 1255, 371, "Output"],
Cell[1184177, 26791, 76170, 1306, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260384, 28102, 626, 20, 59, "Input"],
Cell[1261013, 28124, 34973, 601, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296023, 28730, 310, 8, 59, "Input"],
Cell[1296336, 28740, 2639, 86, 63, "Output"],
Cell[1298978, 28828, 787, 24, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299802, 28857, 254, 7, 58, "Input"],
Cell[1300059, 28866, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1300190, 28872, 208, 5, 35, "Input"],
Cell[1300401, 28879, 5138, 164, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1305576, 29048, 325, 10, 56, "Input"],
Cell[1305904, 29060, 1074, 36, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307015, 29101, 225, 6, 35, "Input"],
Cell[1307243, 29109, 921, 30, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308201, 29144, 525, 18, 66, "Input"],
Cell[1308729, 29164, 98, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308864, 29170, 524, 13, 81, "Input"],
Cell[1309391, 29185, 850, 28, 59, "Output"],
Cell[1310244, 29215, 117, 1, 33, "Output"],
Cell[1310364, 29218, 130, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1310531, 29225, 145, 2, 33, "Input"],
Cell[1310679, 29229, 126, 2, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1310866, 29238, 108, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[1310999, 29243, 93, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[1311117, 29248, 93, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1311235, 29253, 236, 5, 33, "Input"],
Cell[1311474, 29260, 1184, 40, 54, "Output"]
}, Open  ]],
Cell[1312673, 29303, 1203, 37, 59, "Input"],
Cell[CellGroupData[{
Cell[1313901, 29344, 358, 6, 33, "Input"],
Cell[1314262, 29352, 193, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314492, 29360, 221, 5, 35, "Input"],
Cell[1314716, 29367, 621, 20, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315386, 29393, 94, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1315505, 29398, 239, 5, 33, "Input"],
Cell[1315747, 29405, 852, 31, 53, "Output"]
}, Open  ]],
Cell[1316614, 29439, 821, 26, 58, "Input"],
Cell[CellGroupData[{
Cell[1317460, 29469, 210, 4, 33, "Input"],
Cell[1317673, 29475, 147, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317869, 29484, 97, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1317991, 29489, 776, 20, 59, "Input"],
Cell[1318770, 29511, 420, 9, 35, "Output"],
Cell[1319193, 29522, 5485, 106, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324715, 29633, 632, 18, 59, "Input"],
Cell[1325350, 29653, 244, 6, 35, "Output"],
Cell[1325597, 29661, 13719, 240, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1339353, 29906, 715, 19, 35, "Input"],
Cell[1340071, 29927, 7052, 182, 238, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347184, 30116, 90, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[1347299, 30121, 93, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1347417, 30126, 124, 3, 33, "Input"],
Cell[1347544, 30131, 1680, 59, 111, "Output"]
}, Open  ]],
Cell[1349239, 30193, 900, 31, 132, "Input"],
Cell[1350142, 30226, 395, 12, 59, "Input"],
Cell[CellGroupData[{
Cell[1350562, 30242, 210, 4, 33, "Input"],
Cell[1350775, 30248, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350932, 30255, 96, 1, 33, "Input"],
Cell[1351031, 30258, 637, 22, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351705, 30285, 711, 23, 106, "Input"],
Cell[1352419, 30310, 122, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352578, 30317, 357, 8, 59, "Input"],
Cell[1352938, 30327, 119, 2, 33, "Output"],
Cell[1353060, 30331, 118, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353215, 30338, 359, 9, 59, "Input"],
Cell[1353577, 30349, 2052, 62, 69, "Output"],
Cell[1355632, 30413, 1134, 40, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1356815, 30459, 98, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1356938, 30464, 243, 5, 33, "Input"],
Cell[1357184, 30471, 1722, 59, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1358943, 30535, 470, 15, 71, "Input"],
Cell[1359416, 30552, 1671, 58, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1361124, 30615, 212, 4, 33, "Input"],
Cell[1361339, 30621, 119, 2, 33, "Output"]
}, Open  ]],
Cell[1361473, 30626, 461, 14, 35, "Input"],
Cell[CellGroupData[{
Cell[1361959, 30644, 134, 2, 35, "Input"],
Cell[1362096, 30648, 1128, 39, 54, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363297, 30695, 96, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[1363418, 30700, 167, 2, 37, "Subsubsection"],
Cell[1363588, 30704, 107, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1363720, 30709, 301, 7, 35, "Input"],
Cell[1364024, 30718, 357, 7, 35, "Output"]
}, Open  ]],
Cell[1364396, 30728, 115, 1, 33, "Text"],
Cell[1364514, 30731, 930, 17, 382, "Input"],
Cell[1365447, 30750, 120, 1, 33, "Text"],
Cell[1365570, 30753, 250, 6, 35, "Input"],
Cell[1365823, 30761, 93, 1, 33, "Text"],
Cell[1365919, 30764, 1183, 29, 202, "Input"],
Cell[1367105, 30795, 110, 1, 33, "Text"],
Cell[1367218, 30798, 237, 5, 35, "Input"],
Cell[1367458, 30805, 99, 1, 33, "Text"],
Cell[1367560, 30808, 388, 8, 219, "Input"],
Cell[1367951, 30818, 128, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1368104, 30823, 320, 6, 83, "Input"],
Cell[1368427, 30831, 351, 5, 35, "Output"]
}, Open  ]],
Cell[1368793, 30839, 113, 1, 33, "Text"],
Cell[1368909, 30842, 343, 7, 151, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1369289, 30854, 188, 2, 31, "Subsubsection"],
Cell[1369480, 30858, 107, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1369612, 30863, 301, 7, 35, "Input"],
Cell[1369916, 30872, 382, 8, 35, "Output"]
}, Open  ]],
Cell[1370313, 30883, 115, 1, 33, "Text"],
Cell[1370431, 30886, 930, 17, 359, "Input"],
Cell[1371364, 30905, 120, 1, 33, "Text"],
Cell[1371487, 30908, 250, 6, 35, "Input"],
Cell[1371740, 30916, 161, 2, 33, "Text"],
Cell[1371904, 30920, 1997, 54, 107, "Input"],
Cell[1373904, 30976, 2175, 57, 130, "Input"],
Cell[1376082, 31035, 1623, 43, 83, "Input"],
Cell[1377708, 31080, 724, 17, 58, "Input"],
Cell[1378435, 31099, 110, 1, 33, "Text"],
Cell[1378548, 31102, 237, 5, 35, "Input"],
Cell[1378788, 31109, 99, 1, 33, "Text"],
Cell[1378890, 31112, 776, 14, 587, "Input"],
Cell[1379669, 31128, 128, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1379822, 31133, 373, 7, 35, "Input"],
Cell[1380198, 31142, 377, 6, 33, "Output"]
}, Open  ]],
Cell[1380590, 31151, 113, 1, 33, "Text"],
Cell[1380706, 31154, 396, 8, 35, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1381151, 31168, 89, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[1381265, 31173, 2068, 66, 183, "Input"],
Cell[1383336, 31241, 6569, 166, 123, "Output"],
Cell[1389908, 31409, 961, 34, 40, "Output"],
Cell[1390872, 31445, 1563, 57, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392472, 31507, 221, 5, 35, "Input"],
Cell[1392696, 31514, 2290, 76, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1395023, 31595, 98, 1, 33, "Input"],
Cell[1395124, 31598, 1574, 52, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396735, 31655, 215, 5, 35, "Input"],
Cell[1396953, 31662, 2698, 92, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399688, 31759, 131, 2, 33, "Input"],
Cell[1399822, 31763, 2700, 92, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1402559, 31860, 224, 5, 35, "Input"],
Cell[1402786, 31867, 1808, 62, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1404631, 31934, 99, 1, 46, "Subsection"],
Cell[CellGroupData[{
Cell[1404755, 31939, 98, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1404878, 31944, 429, 9, 59, "Input"],
Cell[1405310, 31955, 1188, 38, 59, "Output"],
Cell[1406501, 31995, 533, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1407071, 32013, 333, 8, 59, "Input"],
Cell[1407407, 32023, 1278, 42, 55, "Output"],
Cell[1408688, 32067, 539, 15, 53, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409276, 32088, 93, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1409394, 32093, 100, 1, 33, "Input"],
Cell[1409497, 32096, 1679, 59, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1411213, 32160, 314, 10, 44, "Input"],
Cell[1411530, 32172, 124, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1411691, 32179, 276, 7, 35, "Input"],
Cell[1411970, 32188, 2720, 89, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414727, 32282, 237, 6, 35, "Input"],
Cell[1414967, 32290, 552, 16, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415556, 32311, 2591, 83, 144, "Input"],
Cell[1418150, 32396, 23899, 437, 377, "Output"],
Cell[1442052, 32835, 69928, 1204, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512017, 34044, 101, 1, 33, "Input"],
Cell[1512121, 34047, 1643, 57, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1513801, 34109, 160, 3, 35, "Input"],
Cell[1513964, 34114, 449, 14, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1514450, 34133, 681, 22, 94, "Input"],
Cell[1515134, 34157, 146, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1515317, 34165, 159, 3, 33, "Input"],
Cell[1515479, 34170, 843, 29, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516359, 34204, 479, 10, 59, "Input"],
Cell[1516841, 34216, 2408, 81, 63, "Output"],
Cell[1519252, 34299, 618, 19, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1519907, 34323, 480, 10, 59, "Input"],
Cell[1520390, 34335, 2704, 89, 63, "Output"],
Cell[1523097, 34426, 852, 28, 58, "Output"]
}, Open  ]],
Cell[1523964, 34457, 92, 1, 33, "Input"],
Cell[CellGroupData[{
Cell[1524081, 34462, 346, 11, 35, "Input"],
Cell[1524430, 34475, 238, 7, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1524705, 34487, 314, 7, 59, "Input"],
Cell[1525022, 34496, 120, 2, 33, "Output"],
Cell[1525145, 34500, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1525302, 34507, 743, 22, 128, "Input"],
Cell[1526048, 34531, 144, 2, 33, "Output"],
Cell[1526195, 34535, 1158, 40, 59, "Output"],
Cell[1527356, 34577, 511, 17, 58, "Output"],
Cell[1527870, 34596, 412, 13, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1528319, 34614, 860, 30, 63, "Input"],
Cell[1529182, 34646, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1529339, 34653, 565, 18, 104, "Input"],
Cell[1529907, 34673, 483, 15, 53, "Output"],
Cell[1530393, 34690, 231, 7, 50, "Output"],
Cell[1530627, 34699, 231, 7, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1530895, 34711, 484, 17, 59, "Input"],
Cell[1531382, 34730, 94, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531525, 34737, 99, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1531649, 34742, 1408, 41, 58, "Input"],
Cell[1533060, 34785, 1536, 52, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1534633, 34842, 386, 11, 59, "Input"],
Cell[1535022, 34855, 715, 24, 53, "Output"],
Cell[1535740, 34881, 477, 16, 53, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

