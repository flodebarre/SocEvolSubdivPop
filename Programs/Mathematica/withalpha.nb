(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    195305,       4461]
NotebookOptionsPosition[    191520,       4332]
NotebookOutlinePosition[    191859,       4347]
CellTagsIndexPosition[    191816,       4344]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"Q", " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "2"]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "Q", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "2"]}]}]}], ",", "Q"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Qe", "=", 
  RowBox[{
   RowBox[{"Q", "/.", 
    RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qe", "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    RowBox[{"1", "/", "n"}]}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.718628844842741*^9, 3.718628909305086*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Q", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "\[Alpha]"}], 
     RowBox[{
      RowBox[{"2", " ", "m"}], "-", 
      SuperscriptBox["m", "2"], "+", "\[Alpha]", "-", 
      RowBox[{"2", " ", "m", " ", "\[Alpha]"}], "+", 
      RowBox[{
       SuperscriptBox["m", "2"], " ", "\[Alpha]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.718628866788789*^9, 3.718628909606175*^9}, 
   3.718630050612982*^9, 3.719672352205227*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "\[Alpha]"}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}]}], "+", 
   "\[Alpha]"}]]], "Output",
 CellChangeTimes->{{3.718628866788789*^9, 3.718628909606175*^9}, 
   3.718630050612982*^9, 3.719672352229032*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.718628866788789*^9, 3.718628909606175*^9}, 
   3.718630050612982*^9, 3.719672352264615*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "c"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "2"], "n"]}], "+", 
    RowBox[{"Q", "*", 
     RowBox[{"(", 
      RowBox[{"b", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "m"}], ")"}], "2"], "n"]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"W", ",", " ", "b", ",", "FullSimplify"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7186289206102*^9, 3.7186289601518393`*^9}, {
   3.7186292513292294`*^9, 3.718629276152315*^9}, {3.7186296925552177`*^9, 
   3.71862970397437*^9}, {3.718629743547407*^9, 3.718629755549502*^9}, 
   3.7186298039920597`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "m"}], "+", 
      SuperscriptBox["m", "2"], "-", "n", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}], ")"}]}], "n"], 
  "+", 
  FractionBox[
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "Q", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}], ")"}]}]}], 
     ")"}]}], "n"]}]], "Output",
 CellChangeTimes->{3.718629805283388*^9, 3.718630050862226*^9, 
  3.7196723524211407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]", "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Q", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}], ")"}]}]}], 
       ")"}]}], "n"], "/", 
    RowBox[{"(", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "m"}], "+", 
          SuperscriptBox["m", "2"], "-", "n", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}], ")"}]}], 
       "n"]}], ")"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.71862980651632*^9, 3.7186298528786373`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "Q", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}], ")"}]}]}], 
  RowBox[{"1", "-", 
   RowBox[{"2", " ", "m"}], "+", 
   SuperscriptBox["m", "2"], "-", "n", "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Q"}]}]]], "Output",
 CellChangeTimes->{{3.7186298217066298`*^9, 3.71862985336508*^9}, 
   3.71863005102773*^9, 3.719672352499886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"WW", "=", 
  RowBox[{
   RowBox[{"W", "/.", 
    RowBox[{"Q", "\[Rule]", "Qe"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WW", "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    RowBox[{"1", "/", "n"}]}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7186289206102*^9, 3.7186289601518393`*^9}, {
   3.7186292513292294`*^9, 3.718629276152315*^9}, {3.7186296925552177`*^9, 
   3.71862970397437*^9}, {3.718629743547407*^9, 3.718629755549502*^9}, 
   3.7186298039920597`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "c"}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "n"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"b", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "c"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "n"]}], ")"}], " ", 
    "\[Alpha]"}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}]}], "+", 
    "\[Alpha]"}]]}]], "Output",
 CellChangeTimes->{{3.7186289410586243`*^9, 3.718628960449944*^9}, 
   3.718629277328628*^9, {3.71862974869676*^9, 3.718629755949881*^9}, 
   3.718630051647778*^9, 3.719672353301937*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", "n"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.7186289410586243`*^9, 3.718628960449944*^9}, 
   3.718629277328628*^9, {3.71862974869676*^9, 3.718629755949881*^9}, 
   3.718630051647778*^9, 3.719672353331283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "c"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", "m"}], ")"}], " ", "m", " ", "n"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "m"}], ")"}], " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}]}]], " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", "n"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.718629365431204*^9, 3.718629395112255*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.718629375766314*^9, 3.718629395509375*^9}, 
   3.7186300520483932`*^9, 3.719672353428849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WW", "/.", 
    RowBox[{"n", "\[Rule]", "4"}]}], "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.718629440302065*^9, 3.718629447949059*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"b", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"]}], "-", 
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{3.7186294484431353`*^9, 3.718630052216593*^9, 
  3.719672353530274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M1", "=", 
   FractionBox[
    RowBox[{"ND", "-", "1"}], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ND", 
           RowBox[{"(", 
            RowBox[{"1", "-", "m"}], ")"}]}], "-", "1"}], ")"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ND", "-", "1"}], ")"}], "2"]]}]]}], ";", " ", 
  RowBox[{"M2", "=", 
   FractionBox["1", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWF", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "ND"}], "+", "M1", "+", "M2"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "ND"}], "+", "M1", "+", "M2"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"QWF", ",", 
   RowBox[{"ND", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"QWF0", "=", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"%", ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.718629488243228*^9, 3.7186296055331984`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Mu]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["\[Mu]", "2"]}]}]]}]], "Output",
 CellChangeTimes->{{3.718629576015213*^9, 3.718629605944769*^9}, 
   3.7186300524788237`*^9, 3.719672353765876*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.718629576015213*^9, 3.718629605944769*^9}, 
   3.7186300524788237`*^9, 3.719672353828918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]", "/.", 
   RowBox[{"Q", "\[Rule]", "QWF0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.718629830821931*^9, 3.718629838251905*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.718629835228199*^9, 3.718629856273327*^9}, 
   3.7186300526098633`*^9, 3.7196723538558702`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]", "/.", 
   RowBox[{"Q", "\[Rule]", "Qe"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.71862985975399*^9, 3.718629864009674*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"n", " ", "\[Alpha]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "n", "+", 
   RowBox[{"n", " ", "\[Alpha]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"n", " ", "\[Alpha]"}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.718629864368949*^9, 3.718630052731866*^9, 
  3.7196723539208183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myn", " ", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Kappa]", "/.", 
     RowBox[{"Q", "\[Rule]", "Qe"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "myn"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0.00001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"1", "/", "myn"}], ",", "1"}], "}"}], ",", 
   RowBox[{"ContourLabels", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<emigration probability m\>\"", ",", " ", "\"\<\[Alpha]\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.718629870715848*^9, 3.7186299534926767`*^9}, {
  3.7186300580219297`*^9, 3.7186300954586267`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxlXQVYVM33xm4xMLHFwMT6UFGPjSi2YJA2KhZiIIoF2KKIKDYmKqCigqhg
AKJYNEjD7rIssCxiYf/3B/vO/d/B53sen9dz79x5Z86cmJmzX+dFa2ctra6l
paWoraX1v78/2Un2PSiXjtKq+BNLeeUdLZ+ZBBHwnCQTJ3uTFwwPDdwTWb76
DcNHIrL2jjWJZ1jrjnPAvvRkhh3Otk54vzpdwJELttXXymH41nB9j74meQxL
73z3neEpZbh9j5f3N6TnM2x+zivaW0/BsEfzxWmhq4sYfrV/gDIjWCn0p+JP
KcPgmx68Wv1fAuMLDL7A4AsMvsDgCwy+DGv4AoMvMPgCgy8w+AKDLzD4sv5o
+AKDbwVU9xN8gcEXGHyBwRcYfIHBl2ENX2DwBQZfYPAFBl9g8AUGX9YfDV9g
8D2mZ+KpZ5LG+AKDLzD4AoMvMPgCgy/DGr7A4AsMvsDgCwy+wOALDL6sPxq+
wOBrXzHhmYwvMPgCgy8w+AKDLzD4MqzhCwy+wOALDL7A4AsMvsDgy/qj4QsM
vhX0PXMYX2DwBQZfYPAFBl9g8GVYwxcYfIHBFxh8gcEXGHyBwZf1R8MXGHw9
K/4hj/EFBl9g8AUGX2DwBQZfhjV8gcEXGHyBwRcYfIHBFxh8WX80fIHF/kjK
+SMp54+knD+Scv5IyvkjKeePpJw/knL+SMr5Iynnj6ScP5Jy/kjK+SMp54+k
jO+aCv2WMb7A4AsMvsDgCwy+wODLsIYvMPgCgy8w+AKDLzD4AoMv64+GLzD4
ZlQYbDnjCwy+wOALDL7A4AsMvgxr+AKDLzD4AoMvMPgCgy8w+LL+aPgCg+/k
CgVXML7A4AsMvsDgCwy+wODLsIYvMPgCgy8w+AKDLzD4AoMv64+GLzD4Pqzw
x4WMLzD4AoMvMPgCgy8w+DKs4QsMvsDgCwy+wOALDL7A4Mv6o+ELDL7dK+x1
MeMLDL7A4AsMvsDgCwy+DGv4AoMvMPgCgy8w+AKDLzD4sv5o+AKDr1eFvS5h
fIHBFxh8gcEXGHyBwZdhDV9g8AUGX2DwBQZfYPAFBl/WHw1fYLE/KuX8USnn
j0o5f1TK+aNSzh+Vcv6olPNHpZw/KuX8USnnj0o5f1TK+aNSzh+VVvn7D73t
bDf5ksZex3H+KY6kkac2rUkvYXKxfY9j71faAxVn/1TsfR7z36/EsZw8lpOX
cvZHRYPf6wWETPGkkIr1qc43F5kahaxWMQx5twp9VjE5MPrLv4/v433++3hf
LBfyT7SH9vnvs/nZeLT109USNp4Oqb9m9DQpZNh/WsziKep1CBwVN/+66ZrH
NKmCfxK9fJ5/Pij9JcNmU5ts7KjuBzDGrzK+TGXvA0P+99///qTTrWZy2Sd1
3A185N/zWmf1cimtwr9ls/5WvK4nYc9X8pWy71fyzadh3Sc/u6X3kWGtYuve
eeq4ABj9P17RoQL2PDC+D4z3gaOHBZxe6plI1SrGs5A9D4zngfG9tRXjWcT6
Cww+wHgfGOOXWTEeStZfYLwPjPECxvegv+g/MNoDxvvAwxf1HVVLq4Bh38Kk
CPNpuzXxh7BeMP8YD+iPOP6LY+0Bi+O9OC7ei2P2EO3DHgLDHgKDH4+hf+J8
LpXL91LZfPEY+onxghwYcswXMNrn5dBvzA/kwJDDfvPrg8fIXzEfeB+4cr8m
l/UHcvDjMZ7H+EEODDm+Dwx+PMb6BT/IgSHHeEIODDn0E3Jg5Hfgi+eBYS/A
H3Lw5TGeB1/IgSHH+uPtU6W9lbL+4XmMB49hnzAevH1DfoPxgByY5Vua7/P2
D88D43mMD54Hhr0T+xPBfvIY+Qj6y9tXll9p9AXvA7P8RtM/YIwP2gPm7Ssw
5oe318gf0B/efrN8Q/N9YIwHngeGfcb4QA77BIzx4PuL+B5yYPSX9w94H5jl
M5r+8/4DcowX708Qb6M/vL/g/Q3eB2b5gaY/LL7X6DueB2bxvqZ/aB/jyWM+
PoYc/Yc/gv2HHOPH80F7kAODD4v/NXx4fwg5/BfaB4Yc44n3gRF/oT/A6A8w
+gMs1k8Vw3w8B4z+AIv3A1SU07r26i9rbrF4UuwfEpi8cv7U4zPg2rn0YBXz
9/D/iD/xfKX9TWTxaaV/jOf6I5zn8P65ovn/d17A+19+v5z3v/x+PO9v+f1p
3t/y+8+Qi+NZYf+X95eQgx/vL5lcM3/A4vMhwV/Cn4nPhwR/Cbn4fEjwl5CL
z4NyufxG2O/k/R/k4MP7P8gRn/D+GXLw4/0dv9/I/JOGD+9f+f1DyMGH39/j
/Sm/Xwc5+sf7F9h/8XoW9st4/8b7C37/ifdP/H4T74/4/S3YU/QH9hT8+P0d
5j8088/7BzwPvvz+CZ9f8PsfkGP9w96I9xtV3H6hkL/y+SUf7wOjfeS3wLAv
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
p/y9Ui5RxxmfTsdH1xJ+X4DdN75b+qaNjZQ82u7s/W1VNlsfMavtTdYZBzB9
tZzh9mxfYRzD48rOVRs7SajngP2IUN4pMB6WT5ebTPs7qm7V+nIHywOr/QLl
pN/y8bGy8UI9+aqMwGj3NUL9RZ/6O3WCfgr1Fxjv0rjUrE3G6nizfK/LjRlV
67XrRNSNOD9FQbMtbiwK0xXqs68uinlS7iDUY3+Jsmzcu1A4/3PV7W1+ySmr
Sr3ztr32E/5YFFGB9/PgXqlCfTP4OBtt6j69oJhe2tb0p9fZVe7HvpkanxHn
W0wqs7KB1ScGsPit4POC3ZKGVetxp+hsGPfHu4QiT7sFWt8R7vOvLvP/+fZF
HNWomT35xKZk+jbP3mtmURaFvW0pbTpdRsm7OuYuXhlHddt26t61rZyady2a
eHRPDK1pFON1vryAGlxoudG2RzqZXvZK7FlfQf3Ov4hT2zyadXWMouWuQura
vXDgqbp5ZO6hPPbnZiHJIh0uNTDPp+9TDiy32awevy3Ll1y6pG5/4qySt7OL
ab9lguG8lHxqZpniOtijmLz+fj81/l42yU13WZj3KaFHl8cuqy1No7UdZz+Y
81ZFSmtn2fjgyxT/Lka6p7mKq6eJJe1mnT61dhfuk+A+VKfalVi8vxhLg343
+LZz91OaVr35z2jbRLIJWdP79LyXNMbvwh+7z4k0slZu7WP9o2lm2wPvOtRK
otFtTea7TX9Pn+a/N0l9mUT1Mq59aBJwg9pptcupm5tCf9P9Oxh0fkRpPp2v
h8emUp//LrkvnehL173dptm2zqBJ2tYndOSZZJ0WJpWlp5NdvfjS+k/V/nFF
31TLpCwyepC46HPLXNpTkzIH7c4mj3p5q/+5SWhvstGfhc0k9MV2sNZsvSy6
Hddu4IogKR0a/J+3o2UslX926HxjbT599VH9WOSSSuMaxp+8EptPpucHp+4b
LaMJ8vZWDYvy6XOY0cjtidF0OaH2Jpe2BfT7/I97575+pI+uhy+//iknW+/V
nUv/5lDHC25ekj4FZO9hWZ7RTJ1njmos22BeQKNGDf3T+4GMsp4nlqQbF9D8
1GkTs9T4xycvF7k6HlRNLpv9ok0SFbwY02bkOwWVOB1a9Mk3l5SL3j3556ug
WmuvJ63vrNb/XwUNdO4oaMatEMurr6JoUY/iBmsKi8hkXWOjqZdjyamzle5N
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
w21e5fpI6J5P2LUTufH081aP03etJOrxdO/94EAGfZ0XP0//hIQGNp+S/XRD
Bl33aVXy1l29/k83uHyxlzqvbNNzYORUKRndLm/QxlxKm+pEFIwLlNL4v/md
vjk/o9Z5f5IXNlLnYR1vzOmo+476xXz+s3iZjD6X9xutkCfTvQK/QYZBMopa
79jJ3EdtB121Wy/OlNHMkoXTbMOktCByxEkPbxkdT5yyzL7vHXo73T/d+qKc
TiWtP+U7PpLO3R57/WxjOelGH5qjX/SCboUc8T17J582dlGGBDWMpyNek1Pt
XeU0e8P2ap835dDB1Z1H7tORU+33Lk4hM3No6mnP+gc/5NPAuQvvb576iHxM
z492qaegoH1xrsF93tCj9LZh7w0U5PJ92ga3qy9orumN3z1jCqll9VVSv38J
5BD+2PagsoCMAp/tfjwjnTokrTzi1F9BdoN1MvbF3SLFkEan3cYXkX9hwIvs
LH/Sdzp9dfGCIrKqcf6kxZYPlGV0p/bn54XUMdr53QOnZPW4yfLaaRXRT520
8bv+d5/uysmBEep4oOxgr2qO3fLI6oGibKg6XrAL67936+77dGzFycPfLYtp
SFSoPK3eK/L5uyClNKaYTnZIW+haO56M9Y32zLhVTDFff7y6fOANze6q3B45
roRk31a1WPEihQL2p0XeNyqmVTpuEpONKdRZElHHtbSITt0Y1HfN+Txq06Gr
67xZxVRqdscqaUMemR48bvUxuYiKBj6udkadH8f6j/Zf5VVMPvl1pkWkHCL/
KSNi/MuU5GXwb139Bo70JG5oZMhBJfUbNn65/YJn5Bi8Pf7L1RI6sKZkWoHq
GfnNCjd/LSmhEgvHdRZzEmjqMfsfP6VK6nLx7NqlgxJI72p2b9coJU1qYnrh
W2I2Xd614u/0+SV0+ElLVYq+nN7fqjl6fuMS+m+52e132nL6c0Rn/U8vJbWi
bR0ze0VQo6ddoh4lqWjU1/0GjgciWLzyRdFp6bNFOXTRJ9/2+wMVOcXWflQ0
Joe+TI6e+8tMRQXxZkfWbRXql0Zcmzm438orzF7WHy22h4i3rvprz5qqzuu3
aF/u5K29m/j6pd4PJVt+Fgv3yybsaptj2D2DYoxm6sfavWL+JiNsh1evva9J
ekZ38yp1PBtz3SZC2zyJ+ZdRpy/eHPU2iZ5Zhtd4srSQ3HduHbW+WPh9oT3D
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
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkDkKAkEQRdt2ZkBQjyB4D3dvYCCYKm6JghfxBq4zxzBRQc/ihCPGvk91
UNSr7vq/qrs53Y423jnXIMrELXauIF8jAp5wWad+wxXygvMLXIPX8B7+wN+S
c3PqgtzmLAtaeey8aeVxiaxfugz+wV24E3x0P4Cr8Ap+wQc8PfkczsfeZmjW
M7Fa+2ivXmye8pZe/dI96Mvpb8HH8MaU+1lk/pqj98gnhYfetNpFb9b+Jzh3
ppXHKfzJMjJf+d8TC7H+04f9+7HNK8If/wGJiDE6
         "]], 
        PolygonBox[{{1345, 414, 246, 1344}, {1343, 246, 234, 1342}, {1732, 
         499, 491, 1731}, {1444, 13, 601, 1445}}]}]}, 
     {RGBColor[0.22150084001217346`, 0.370833800006763, 0.6088341200114006], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmGmMV+UVxu/9/++9LFZMkQqjhQAisjaxkZkBsYvCgI7QQoFxhjSQRqQ2
3VLKaL/UNCBILWIoNLR0kU1rYloLaOsUW5bGIKkV/KZYK8MgSxm2yDYDnT4/
zvPP8OHkXe67nPe8z3nOee+Qb3xv5ndLSZJ8kiZJWeXBIkkuqfJiniSdKt+S
ZPq2V2Wdvs+WbFS7We0u1e+U1EiqJc8V0b82S5Lxaj8gmSqZIHnQ7Vr3TZEM
97xxkjqtub8c63eo/ng59qHvgGSW+u+R1HutHer7nxS/W/U5SejGmto66Se5
WXJM89tUDpQMUb1D5QDW0aDBavf3XuwzQtJTZ/4ce+r7LdbvDvR3u4dER7xW
/4wkd8l+faTPvZImzb9d0qm+2yRDVb9V5Q2S1/V9mOf0TqK/SjJMY66o/Kxk
mvaabLuMkUz0uUe7xJYnNf7PWuuwyl6SJepbLfmFZJlkuXVkP/ZqKUeds3xV
6y9V+XPJmiTqT0nWulxm275RDltg4x2e+3455m302i0+D7q8Zn1qZaAzmjNA
5WmVf9L3nZJdSdS3Svbo2180/h8ql2vMItUHae7JUqzNuBHGCtgamQSeaI+y
DWg3GQtg4jFJo/syrfOy1quWNBgXYO6C9mlLQ8/hqn9bskr1V1Ve1py+XuMB
r/uw59EG//uNw4VJrMv3R40/2uOyqC+w3twl9zhd5Vd8r0e13/OSVq/JtzqP
meb6Ut/TEuN2jvF6UONnZnEPM7IYw33go6zPepVv9H8nC/+Ymkcfc8HJ/Trr
Za23wX7WXO72Acp+1n26dZ6LP2fhOz3tD/jCv7VOdRbn5Y73S96RfEH7XdA6
X8xDb+b295lmWAd8qzYL/sBurPOI6p0avykNXH1d68/1vbDHYskPJR+qrybr
3r/Gc9mn1nttl2yWbJHMV988SaPkotq/0fo32d/G2Lducwm+2L/D9oAzZpXC
X8FUWg6+utVjR9qHRxqzTd6Hc8Fp8Bm6pbLFerV/Jsx/09hptA2wBTq3p6EP
fDVZ49ap3QWmtH+DZIPWmKnya5LT2KMcWGJdcPxsGvYH1/eWom+gv9EPzzSV
gmu25FHfnMf6D5eCs+q130NZ+OPFcvjMXO+J3dh3pXT7idp/09wTaehE/++s
33+N29mlsB982OD1W7XeoXLoug1b+562mldowz1wDtj9Yxbxp18eHPOqeebp
UuwBvuAbuObvSeCa/eBdfJp4QCyA88Et+AXf9MPfnHuY+bpyl9xthd8rfE8J
5v9gfe4oYhy4gNs7XGc+/LXLPgFWi3Jg4PEkuBmOHe/9wFCtsUN7ojE5VtLs
sfByu9ap0job8N8i+GtSEVw4yti9u4gxb2Rhz93WAzvvcRtsVnm/UT4r2Icr
4Sr8vRJv0KPavgqe8Qfsgm/CE122JVw5wfPgDbgPHqt3H2eCF+FK/Hic/RXf
eLYIHK8qgmfHe62ptgvtt/En7TekiH58p8H7NiXdnN3obwg+VuHphd77Udt0
scc+5nHEhxrvh52JQ68kwZczzLdwYJP5ZZr0uAvuLsI24KO/sbvNWCY+0k/c
POb43scY32qMLDQm0ImYtaQcHIM/bPdao9V3pRTnn1JEe2oR/nYkifzmKvhK
g1c5zxNet852x87/SYID4OiB5oMPJR+574Ck1bHpMHZAb8m7ScQWYsxk16c7
1jzh/bDjcu9JH36Hn5JPHnZ8hcPvlEO9qfbWItbdbVyy9j7nmfuccxJnibd7
nRPC9WAH/ofTyVfId7DVGrexfyWvIXdpcd6CfYidNzrHhUd2F+FbzdabsX91
PrPHtt/ubwt9zmZjaKExtMDtX2mtpZq7voizvuaz7/ZdsxbfU9/vU57fbLvv
8tiDjt/4eCUmEaN+WQQ21hVxts3XnXWTMTXGY4kddxVx1pYs7LLFc9iTvckv
BpfiLhrTsCl9S+wH13w9idwPfBPvzsKzacSoHc4NK/nkas9lP/Y9pfJoFpj8
fNG9B2Pg/Z3GIhzKncPxYHCnbTHfOAEvS33ni42TvcYGPttgfI8qIg/e7tx2
jW3zuvXBHpUcl2/LjJ21Pu+U63wFbgJv8DaYW4TvlKJNnTj4pGPhxjzixxx/
Yzy6fqqIOTc6BybeEZsaPJZY84hzd2z3gfHJvcOn8CoxC/6hnzHkapcd13qY
k7j3XlnwFXyyzvEev35Lun1a5bf8nXGvGFOdxgprf2C/qHfMP6X+F7LIvV7y
+Z5xjBxe7s4pyLmwCTz+cRr5AHlIzyz0u7ZnGu8h7p14Cy/gF7/Nwh4rVR5J
Iydv9T2DFWy5rBRvA3QixxvnPPM92XSK+t5Xe2wRdgRrzHvTc3+URTkvj9jL
ePRkPdZNk+Agxg/XmN5Z2KdyV5RgkRxjhfOMYRrfpfpQlb/PIyd6IQ87XrHf
8f7Dr5p87kafnfXPOKb8oBTrDvZ9/rQU+Qr5KTkEsbmP35HY79e+txVZ2Jb4
tMF+hK7oCU9/ZC7Z7zp8P6kU73pszJjj/nbCeRyxowM8OsceXcTeY4qIOXwD
h4wlbybenOUevRbfL1fGGGPgsN3j2PO86/RdIqdM405bjbVr76A8bIJtDvid
Re7MvdX57li7t21B7CVe1qRx/1eNYfB81f6Cf1607metL/o8UwROyccnZrHn
YOO52m8KsAuGN3ouZzhk/HbYVqfRPw0bYs/jaeS979j2+GAP3xn3dV8RfvPP
LOZiy0GSwUXY/8Us3oYfO5/n/XTeNsI3H5ScS+L+e9q/XsqCK3oXET/eTbrj
SQUL5OCznIeT1y+zT1322Q553jHPIc+44jsF78QA+J+yy/9bhrsN/8OFPzYf
zvE7EXsS67o8F67qYTuAa3wE3+D/EndIXkFZfV2d+6XNfwL+L/DPg/8yxJ1e
ebxp0eX7vHWLeDf+K4s74C7ItU6aW0rmqKPmmeddX++8jPwM/8WnyVf6ekyr
x2P7VudFrH3M65MboyNnHGRsc19ZHm/I1UX0XXA/ct5r4pOfWLd2x9ax1uW4
cQWnojc8Xuv8k9gM7s46FqPnOevWZvy0+rxtnttmDmAvMH+P30HYC7tNyuOd
x3uP8cTZTud7Ezy+v22NzW8vIred4H7mXfLc+/LgtfvNnbNL3f8wKAf4fjud
753xWfCFL+XBEV/OA6cPGfOcmXfLCPs1eLvJtjzi84I79mD9c74zbMK9Ucf2
nGOi8cna9V6f2EpcvcHz6j0ebphoW60w99QUYf/T1pl/V5fMaXVF+M/b9kvq
N1tPuLhy59RX5YGdl40f8AQWN+XxxuKtRS4w3/fOuQb431pVEfhiDPkq3+d6
zHjXwcuiLHKlmXnE8CbH8W1F+OAC9TdI+pKX5GEDYhE5wi1FcE3/IvLiFud8
vPnB5b48YleD4xcYu2AM4EcX/E7nfTk07c472J+YCbezL/z+dB7/K5bncb7e
jsVnzbHYeaVzhic15r0s5pMLHDEX4y+rbZc8j3y43T51yr6Cj7e5PdB2wT7N
Wfy3OGEOJ8dBH2IscXm+bdvkOlhED/R5Los43OocDzvAO5wdzp3nucyhXmUO
OWGd/w8DYN9c
         "]], PolygonBox[CompressedData["
1:eJwllGtoz1EYx8///z/n5DZliZZkY00ZitS8MLfN5gVezGWaRJjr8GKZvCFZ
jLlMkjGx+6zQilzSUu5GSkoZUV4jKTbbis+358W3nu/znPOc8/s+3/PL2rS3
ZE/SObcWeNAanCsjUQt2kOiBHyYeQ+0l8dno3P6UcwMJ5wrgz8Ex6lC3mfXT
qY+mPpzENOIR4B+1KnJ1xL2gj3gde66xNwkqU9ZDvZpAKfEJsJ1+3fBDxCtB
K/y8t166g+7yHnwlPs15eawthOfAJ8IXE+/0dvd+ch/hLawZcvaNbcTPyHVT
m0NuN2tbwMGknamzdabOLgFXg2kibdaCZniOenBWJvwWvTboe5zlNhL/YH0a
8SfOeEc9C0xNmCad1F7Be6itglfCH8HvwO+CeexvD6bVetBOfRG8P2GaSbs3
rH9LXERuArwj2LdKY2m9FOSm7Mwi4pHgM72+gFHEk8AA8ZDmQf/X3rSrB0uo
3fY2yy1gBrwO/tCZ5tI+n/O+UZOHyqmVB9Min3pZtJloNvnkauSVYHEF9aPU
z2hm8N+saWZ/I3w1/DjYCu8M9u3p9N8FX8GeWezNY30O8TLqPmm55dF6qNcf
MJ/aeHLfqXex/zK1QnKD1LLhFd40k3bprCklXhMsLib3gXob6EuY5guDeV7e
bwGeuIH+1Zx9HX6BOEWukXifPAmfLP/rfcBvePOAvNDE+dXeNJf2mlExtdnR
tJZn7lPrAINJm5FmNSWaV9UzO5om0kZrMuH14EjKNJE2Vd68JY/IKzpTZ2fI
89FmoFnozRREe3N6e3/1foLNQLOoAS+CzVSz1RvP1dvx1ksaj4OP1TwS5ml5
+yRoSNg/5JT8EG0WP+Fzo3lcXr8HHsMzotXksSv0XhBslpqBZtHrbTaR9V3e
NJf2+uaLxCHYbDTjc/JXtFnoDrXEadG8rzd6wFsP9dKb0NuQJ+SNB+SeRoPi
mewfRu9t0jNpHpVXn0S7u96A3oI8KW9Kg5t6O8H26h+jf408IC/IM5c0a/iv
hHlG3vkPoyOxsw==
         "]]}]}, 
     {RGBColor[0.39137813004535954`, 0.44125110001594103`, 0.588998159973335],
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmGuM3kUVxv/v+58ZVHap0W1pabTtli0UV5ZeTPlgu3F3u5V4LYomZnfF
LX6hWNwVySJRu4BKoi2tN9QaWhJpuUgVNBESXUrLlmhpm1BqSostfjFgIknl
Ymi6xefneTb4YTLzzpw5M3POc55z/u+C4Ruv3tCsqmpbo6pq9ZtKVd2kwQ/U
L1e7QfN3pKoa0NwKCY7r921qByU7oXZhHTI7NH5R41NqG/V7k2SnNLdA7VP6
Pax+RO36XFUdWlsn3cOaH9fcFrXLdUar9raona+1rLXfau7f+n1abV0VZ6Ob
c9+QjtfVXtC44fM4a7P6u9Tma/yk9l0hHXvqWN/s+Q9L/2zt2a+1zjrm0TGu
cVOtVzJ36p4nNbdC/bvVj6n9RvOPa88sySyVjtewk/Zu11pXirOWVqF73Pdc
Kbn5klul/rDPu0rjXuldqPWtGremsOkh/Z6n3+fU79Jcm3Vw7kHt+0wVduyW
zCatTUlmseYvrWNPl+ZbNP+Y5s/XvR7XuFvt4jrk8dlx+w+9ZzV/SK1Pvxer
7VRbpvl/au/LarureN9Gv3G0jn5eI2zCvfB7p8a/aoT9a+yl/jrd4Zjk29ij
35Ml9N+g+XPqd/ksZLgzGEi2CbYZktygWo/a6hT2xbb4kvEyY+CCFDhYzlwK
O9EYYy9siwxv563LLfNVtXaN52n+gMbPqK2tQhd78AXrC1O8d6SOMfuGmt5r
W7b+n/7Dtid4vgq/VoELsMj9wea1xiH9kMe3aL1fcmPqH0qBxx/meDvz+Oc2
ra1JgVP07eWdmt9ex1n3gIUUMn1V2Gm19+Jr3nm15p+1jcDSi2BfMqMa96Xw
dYfkT5QYX6+5vbrH7Ro/mSM+sC16uiS3BB9pvJ/3aTyp/gsl3v1lyQ+kiD3e
OOk7YGd0NI1pdCy1Hu7STMEVyLNGPPI2bNpiTOUUuPp7M+R5BzzR8F7wiwz4
PNuI+4PRRbpbktwnS6wX62m1fu49bjtyv9rjPscF8i87JgZsq+dT8NPncnDe
IsfCsOa/lMIGd6aIp5sls1LjE9q7RL876sAceHupDv+zho5z5s+Tkv+0fn9W
d34P+zU+moKb4Ki/av7nJfBxd4n38lbiclWK8zrN43D1kRLrDd8TnjluTug2
V+OXIv336fePS7x5h7mo37jirl9T/6hkDpTgangbLH2/RMzcVcIvI+Yu1vdY
5vM5OGpuDs7kfOIIXoOvbtfeN411cA4+e1Nw0Jk6MIctvo6dte+aHPF40lw6
qwRP/SmFjZjfonGu48688S31H2oElkdTYHOt9NyS4p6t2jfTmNuqtZYcdzli
LMJb5LBDJd5ycwpdYBmOQnfdCAzzDvjrI+Yx1ntsc/aCITim3TwDtsH1xiow
WDs/TTpHEYNrnUOx50Zz8oTjcdKxdmUz3o5tbk2h77ocfsW/5+XIIZ3GwxMa
T9jm+0tw9Tsl85Tm9tnmu2wz3vCM4xree5/k/6Pz3q/+Hp11WuM5Gv85Ry75
S46Y7rJNyL2bnH+77Ive6Txnm2CDUduZfABnwr3zS8TJep8DhsHyo857+PeX
WntFaxc6Z852HrzP8bHEPLnYbxmzDuxI3h73HriYOz6RI87giNq457w2ze9O
wS1wzJE6eJbah9ilJwZuTOH/j0n+vDrWmJ/rWABHX0lhX2zfNGdjE3InObQv
R66Bw8H9nBy2P2bMrnV8kRfgTX5jgzHn7S3S+4J+v0v9Ua0/V0ct9mCKnPSw
9P06h50fzJGf1zlH0w97fH8ODjzuOhHdO5zvulx3PaB+itqsBH/x3lMpOIg9
r6TAGpjDF4ddk/Auakl4B1/ALa+aX6hPX3MtMuJcTs2xWjovIZdL5ydKcPbH
c+TGy50ficE3nYsnPAbnPa435hsbZ40P7kBdu9vxxW/ugx/OGTNw0pBrlW3m
efienP6NOrC1z7FPvJNDsvMI7ZT1/9SxeatzIPEPNu6tw5f4kZqHem663jhr
fBDvZ6wfn5B3Ohw/p53r17i2vN9142XUQFVg4SXnHWSxNfiB35lfWEWdSv+T
FFh+1jqHZN852jeovtt60ck5cMoCY4aaH9ysd/3Pd8C1ahdp/MUcZ4/ZLwcd
O2DgVd+Hd6CffIZe+AtbfTtFzj/tO++zHeAo3sk9qKmxOfmbXA9GNqj9TeN3
5PAl9Sl1E7ENbohpamh4BE4GZ3DOdyS3XuM7SuR17DzlXD9om+MfZOAb8v3/
6mjjYcz2JP7hgRHXRwPWA145/2clcjzveG8OLhowH5F7wGxrjlwFx9/kO476
nmAFvMOZvOtS143wylvm2kHjljtTg3TYJpzBtx54h1PJH+QO4histLtuucTy
TfsAnoaL4eQHdK+eEnJ95psT3gum+I0d4B72jTsekQEDLf4G5Fuwt0Q+/67r
gQnjpN82XewcO+68+K0c9/9mDv8M+40/KhGPOYcudH4vRy263DVtfw4e2mB/
Drt+G3QPP1xQIjZnlMid8MWaHDXCMdcE6Dvk2DzgOIWjed+EuY5Y6Taeaatc
p600zttdJ4BpsMJct+fRs9Jj8u0b/hbuNQ+BAfA+uw7MU8PwrQ4/P+97Mk+c
HXGs8Z3Et8zr/q5CJzzDu2Z6L7zV5vGaOr6FqYtmWYbxVu/BDstK3OGPKeL/
OWMS7u71PaffjE2oq/vS2+t99t2Qaz/GxBD1JxjYa07HPjsdQztz5CR4cJcx
MOD/I9qn6wdzxVPey1yP/ftIjvWH1P8jBX9dIX1P18GzxNuMOt7PW8/YR3Av
3zH7PW4r4YOZJeaeNi/Befeaz5GnHpr+Npo0ZvpL4OOjJeIDu8F3+Bj/EHcP
p8B9u/MqPAw3kyt21PEt8wF/i/FNhj9afOc9vgd3oG7G/2OuMamPqZ1+V0LP
ohy1Bfi9SONrStQuj6TgG/Ix/kJ3q/UTH8iQvzaXyM91fvubCv3JY/iOuo8/
oHgP+Xq7739ZCZ2d6v+Qohbhf45flJDFBo95/l8papy5ddRwd/ubaFsJLmwx
9sA+McCeK0vIr1D/wRJ+/X2K/57gn+Mp8uSUuQs/HLUvLi5x54W+4wy//b/h
Ay2b
         "]], PolygonBox[CompressedData["
1:eJwllVmMj2cUxr//fN/7UsYSO7UNhmCaYAgXaDAMF2pJ6I194oaWogSJJUZD
02EmtthiSZiptSkS0dgjGNs0xMVMRfWmkiYkQrjp4PfkuTjJ85zl/d5z3nPO
V7Bg6fQleUmSLEcy5H5Iku0oitIkqUNRGJMkBWfIWfhV7O/APyLbsO1FSojb
BN8HvoJP61ySfIcMhZ/Efw7nzUNOYtuBbg2+vfU9bDXoPoL74t8T20x0ZfBL
8G/BJ4Jtjeiq8e0LP0L8YeQc/jn4cvAy5Bf4PXhFnu+ouzYQE4h/C6/HXhnt
25rztuvu+FRj7488wvcaPAc+hlwH/4xuNfg1Zx4EDyamPfEdkEvwcvg27Ivh
P4FXZb57c/ynE1+ArhE8APtDbAvRbUqcw3lsq5FZ4J7IKPDm6LP6IPfx/4Qs
AfdDxmOriK69clbuqoFqcVQ+8DPBta5EHoBfEl+KrRXyFb5/w6dyvybwGfA7
yDVwMbr84BqoFmvR7cRWgG4KvDPnzQH/njn2H3hL7HPRdQFfx2cNtmHwjeDh
6NaDZwfH6pvPsV/IfJcWyADiX8HzsdXDH8OLom2q0UBwf+IXYC/kjMXgh+jq
sM/HvpLYZcgY8C10tYoNzuUm/K58kSepc1AuE3Vm6p4r1dsR34DtDecfUq31
xolrotqUEnM8Z92E4Dvqrofh5fh2grfD/iW6EeDh0Vg9o94ZHf22neAjwd2R
D3zrGfG7sHeM7i3NTAfwAwn+Jap5cA7KRTkuxf+e3gw+TTObOWflPgr/Nvj/
CX+aumaqXefo3HRH3XVIdO+qJ9QbFchZznoBfxrds+rdc/ivwPZN9OxrxieD
/9CdU8+AZuGyagD+T9+InjHNmma4HtsP6gnO+oRMDK6ZaqeY4uiZ0GzoTSYo
98y9XoiMjZ4BzcJ7zu+q943uNc10PrgsujfK4P/i+5vmPfXO0u5SjGJV827g
Gu4wC7wR+QveDHmW5xk9QWx18K6Rz6/gA9G7LeX8/dE7QbuhHPtN8KDob6uH
L2bOUbnWIN/Db2d+e+2Ir/XWmXejaqhabsB/RJ57UL3YG58kdc1Uu3bBb6Gc
lFuv6LvIpw94UeZctPNq8Q3Bs6sdq117Ct4j8Q4+Db4RfPf/OWM8eF3wrGoH
aRdNit792oGnMveEekMzrdneoh3Bec/hW4PP0Fmakaj+0z7Peac2hVdl9lWO
yrVLcG9rhjXLbYN7Vz2t3m4f3UvqyQPElkT3gr45Tvsy8+xrpjXb2nHadfpn
6d+1QfVIPAOahVbRu0q6Pdi+CH4b3VF33Z35X6QeqNJuzTxbmkHNonaqdqt2
3DzwZ8eq3Ew=
         "]]}]}, 
     {RGBColor[0.5739635500755987, 0.5054185000265683, 0.48166359995555863`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwllEeMT1EYxd/7v/cuRptC9BlWyoIRC5LREyNKtLAQLcpCRqITiZZgghhE
jzIYqzGFmUiQ6HWhC6KTSJRErNhK/I6zOC/nu+f77r3vK7fXgmXTluaiKKoA
KXjNZ3QcRbuTKDoTouhJFkX7cdgHHsM/oneGV6M3odezNg97FWiG30RfDJ8E
jmHPAp3g19mzBF4AdhJ7kLWn8DJwCG0kdhV8V2Y+CuyGLwIl8Hv4rGfvl5z5
ifg12KVot0Ap996Cz234DJ0Bv4y+Bv+F2MXYQ4mZSWwR+K77E3MUvQ49iv0P
DfBz6CcSx/yPBfsS/8Ns+BQwmZCT2O/gW/GvQH/E2l+dh12OvVc5RW8OztVd
zmiEv8SnLHYOTmJ3zpzr0+z3Ht6etS/wgE87+FTW8pRb7JXETle+2buRtR+6
Hz5H0LqDHvDnymfOd9Rdv2f2bQDf4G/0/4lzrty/Ys9WaE3YhdhvM/9bNXiT
uUaqlfZ8ljmHymUe6APfoZoQ+xP9OPyE8gO/yvm7sCfi0x/fHD4TgnOi3DzA
XgLfnJqrxqr1eBDn3HPqvSr0t+gDsddm7in1ls44Dt+Evof98jmjP/s3stYv
dk3rUv+z/l01VC0H4FMALwSX0C+mjlVPFKKVBmuq4Te0av1j4pqpdi3YYyP2
BvVw8J10N+VAuXgBcth12G3QijLXTjlWrv+k7t216k+0tqA+doxiu2bu3Xzl
H/sXWIJdxHmXU/eIeqUGfNBdwLXIOdqkWQXlaPNBfeqZ0eyopw7DJ6AnOZ+5
DHsduBF7ZjQ74zQP8LOs5cHngOWRfebCV+N/KXZPqjcPYD+M3FPqrW7gd85r
p9DGBd9FNXma+g3RW6Kc5sOfszYgcY+Mx7dvcG+1xL83fGVwrmaythp+j5jK
nO+ou2qmNFua2fPwVcG+eoP0Ft3FpzZ2zH29X5lzpxnSLN3I/HYoZ8rdcOJL
Eud0GHxb8GxpxiuDZ1yz3gt7BPb91FwxQ3U/7OLEOegaPAOaBa2VYdeAqsRv
rN7aFalnTzVRbS6k/vcx+CwI7jH1mt64gH4VvX3snhiEtj31W6Y3UW+jZlaz
qzM6wTsGz6ZiOsB7Zn6L9YbXYk8HgxPX+BN7jUX/G7vH1eutM/eCZvIwvl9T
3+0K9m+0O5lnWzlWrrUmTTOp2fwMhiQ+Q2eph9XLmkHN4tLUs6IzyzUrqd8+
xcwIngHNgnquC/o/VWnPmQ==
         "]]}]}, 
     {RGBColor[0.7565489701058381, 0.5695859000371954, 0.37432903993778216`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1Vl9Ml1UY/n6/33dOGJtKLmgVVFtFDWnqhWtAzY0LDIJco9TKNsg2dUtX
2bowQFurLWQVNhDwX20QBYKt4Y1zawO7yMic9MM/cWFhOWje5NZlPc+eh4uz
9/3e75z3vOd9n/c556HWPc/vziZJEjJJkoM8FZOkCfpcmiTL8eM09FdhvwC5
C+MI9MshSSagX4F8BuNp2M5BjsNWgDU1kN9Afo3xBv6dh/wJYwT6sO0NmDOD
vS5BfoS9CjPag/5HYJ+E/jB8Nmek0w/9TjieccwZQMAnIf/EvLOw/wVZm5G+
G3MeCJIv2869ufZXyBmMH6GXZKSfgf4Z5gXojZCliKkjI3t1lN4J2y3s2W77
MdjvoK9U5+M52/DvZEZ+noQcy+kf7QnmT0P/L8g27ZwMQX6FsQ361aAcbgrK
07BzyBgZdzH85K0zftaEORyFPpZRPE2J9mM8o55z3nvxvHMZraU8aP1jxNmL
ORtYg6gzrAiSPEdjolw2uxYFmF+N8QK+b2LeCqxtDsJLrWvUD1ufz9WTlX/6
ob8qjKeg/+Y114L+9ziGGXwfhn7J9sNeO2h80T/XcV/ud8H4K4Lci/i3ILa3
omrV5noRL/054Xsgq/gY2w9Y8wH0KcgPU+VpL/Q7jW1i/EqiXF1NlGPu1WTb
ddsvR+mH4GM6qB4/Q67LSG9yL+xyvbZE5XAz5FbGCttrQfmtNYb7HCdzwnP3
ub7EzKD76Pcg/FyHrDPumNsvo3p4NlVe1zkG+uqxn/ejsBSj9mYMY1F4KzE2
5qH/gXEwUR+UOJ+TqfBYhfnbMXZC/xu2UeilmN8Kf5uyyhHzR5yuMSbrIbdn
1e9rYW/NKua2VPvsxNp3gubfhq0SY1lOcXTnhEPm56UgfngkqM6bc4rtH3y3
4PsG1t3OCuslrgdrUQ+ZpKo7a8w433RPTRkPk5Cngu2Y+4sxRqwRX9xr1NxY
4bpW4t8OyAXMf9R5b/R5eK4DPF8QTqqD+oe54nluZuWLXFiWioO4B/11JcpV
oTmS3y2eS/2uKP001rweldszqWKqd56Z4zrnudzxtcP/vVG5OYfv+qh6XEwV
F3PL2FbjuyJV7l8x35ZBdgVhvxOyH2MV7N877jbjvCar8xIHa3KKY605ssr8
MmUsHcD+/6bq24kg/qs155B7Z8yBrGeNsXXNHHIP5HsY62HfF5RD1okx9cDv
fuiFQWfvyKkfFnLKAWM4kQqn3al45ay5rN+cQG4Yds+Rf+hjv/2Qsyfcox32
SVzxHOuX+D/VfqwBc8S43o7CDntjl3O0yTjsM9dts77B/ctY6Z+4Yp13GhPj
3p9znojCR3uqe4t9ewRnX25OJ8dXG4fkrZVRfV4EedR9eyzofiVvfhvliz7Z
W+VR/fg4OS8Vjl+M4lf2Kvt00XxLPQ85m1MPNETh4Fn74HzyDvOy4FrMez3X
3h10Px3nuqBc8e2w5Jc+74f9E+iDsB93z98HvS9VX62KytmC68Ke4lr2zmKq
HJLDeoL6pTfoPiMO5oypMWOa9/KnOeFgY6r8MP6hKHtpUL8c8l1T5n7hO+UE
5nTCXgy9xO8ovqfI8bSzxlzHPlu6b6m3JYqfPcu6rzSP8Z5hX/Z7zj7H+m7U
u4R31dGoO4B3wRdRbwvi9WJQ/JVez3NstJ4PuiNng7iVPMB3GWP73OcajtIf
DPKx0XVkz5WZAzh/tXmDfFZm3D/m+26rMVDoWvAuKTYfsL7LbCeuB31fExsF
Pu+AOYfcw9qyx1hf5nW533vkctrr/L5gDtmzS++b54JiZXy8O1qj4vnOuGYN
uFeDY6BP/m8x9+aN0y6/T4YcJ/E4ZL4g9vPm8j1BeCPuen3f8d4r8HuKexH7
PCd13j95cwLX7XC/kwtv+b6r9/0z4ju61HkmNph/1ot1rbDebb3NvFpkziV3
lftemA96x98I+s95xfaz6Pwzl+XO5/8MeoNl
         "]], PolygonBox[CompressedData["

1:eJwllF9MjmEYxt/3+97nKdpSmjI0bDbM2MfMgcyc2YoYk5AD39g4UP5kTqzU
jE1t2EdR+sOm/EmF6cQctRwYo1Ktpk1kmjnMnOF37T649l7Xe9/P/TzP/VzP
szxZsac8FgRBCYjADh8EiXgQrA+DoBB+hZ/D8DUknXJBsBM4+FP+ZcLrwATj
ptD18BWgH55PThfjrzF+Ej2LboM/B+nUn0ZnET9A/snAxhyEHwLl6NfoMvhl
sCVmNVSrEV2IfkJOEzoffZ16j/j3DT4GmuGHie919k+xx2Aa/sNZ7XnoGXgq
srVrDs1Vi/6AnkHfgS/j303qp0An6x3l3zbideh2dDeoYq5mdA/8gfYMLyLn
M7kDjN9K/BL13sAnnc3dpzg821sv6slpJP+Zt1rFxHvhGeRcRFeDW+h+Z7W2
gxS8JrKxY8QHvc2pudWTDnQrObvJHSenndggOh3dQ85H+EtQBc/WOZF/F12N
zgHNzvasvetMlqL3owvidoY6y1xnvWii5gh8I+hGb0JfgLeRfzVuPVPvhsCG
0PbUQKwLnYyZ54rQq8GcuPV0Ffw38S54gpxz1PsL3sVsDs31k/hx6p0AFc7W
oLXIA6Pwhc56nYm+T73v5B9BZzA+ia505qX3ugToYnkcehv9yVlP1JtcxvTz
/RXZXEeJHyPmwYjmAmnePCfvdaK/wl9ENpf2tJL4eW+9Uc//RHZmOjvtYa38
4Oxs0shpJTblrFYH+KL1ROYNefKhtzk192nQS3yAeF5oZ1hArE/zh7bndehX
ka1dd6iB/F3O7rL2rL0PgcaYndkC+GxkvdcbkEAnnd3tfeipyDwpb8rjc4kt
9nbXtYZF8LPevFRKTiX8bWRrlSdbnL0pelt053T3CuWf0Dwir8jj8ro8Iq+M
y7OheXgCXuJtLfJkKXzY2dlpD9pLi7deqmaW3gqwObQ37Iaznqq3urNL4P+c
eUEek9fOeFu7PCgv1njzgs68Vn5y9rboDdNbluPt7VDP58PvefOe1pxH/D+D
07O7
         "]]}]}, 
     {RGBColor[0.9062515000217376, 0.635628750054344, 0.30937965006738655`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVl9o1lUY/v07Z12oFLJP+L68KL1JCGF1s7zaRfClq+EnlGnYUmTCVjY2
EssLjebGBlGgblMsaSUo4Zwmc1vgRSGti8G+yq3/mXqRGJRdBBXW8/Q84MX5
3vc75z3vec/7Ps97fg9s3117KUuS5AeMHGMUP8MYrWmSfFYkSRmyJSZJM+R5
jOdgUw/Sv4BchtGKuSchl8DRR7b5BPqnGEfpG2tj0H+EbIT8GDZdmG+A3yHo
kf5xZgnnDWF+J/6vx/9b+N+C9Rnbz2NvL/RpxpBKP53IX6ttNmLvI9jbFhVL
i+N5BXtXYr4z0zmzqc46j//nMF5jzIXsvsfeHsTaA5vbmBvH3BmMWqrcTGY6
7wnoFaxXIa8FxbES8qegmK9CdsNXB+wvwW4j5CHMVzCacuWUsX0VFGsJ8jfM
L2TKO/VByNlEcQ/47g/C7jDWTsH3Gvh9CKMP/48H+f680Pq4Y14Lueh8rcDa
Y1hrgP5PIf8z3sfYFuH/SqFavgv/m7C2FPoC75Lqrsz5d4Vq+QFsujLVkXHW
M9WJsT6FPRF6G+TZIBvWnHmjn2OJzh/w3mdhU4L9jaB8t7im70fhhzhibZm7
aqq59zA6YXMba1PQf4dsT4U/Yq/bOs/iHZlbnsX6EwfMA/PBvBCDXzNXmfKw
v5CPF4P2Lbou3LfCe6uuJevIWBgT52bNnf6o2rBGW2Fz3TghXq647qz/wVy1
pO22VLEQn9zHeWKF88TevkSxLDjOMdhezO6uXzSem3wu955zvM9ErU/Zhpj8
xrgkp8qwWwb5aBBm7kC+gbEONvuj+EBevBzFgUn7IdeZZ+abtmdz1fVqoXi3
B5076Tif9314R55Z8bk7Mq0NuUbt1umbOutYi8rxt8xpLs5O+77EB/M8YV7X
3APOGCfsZWXXhxjk2cTzCfPznSB71pI1PYr5DdCHg+pw0Lwlp3vcf07luj/v
PuHewJyQv8vNMcbY6Tj3EquQb2LtRBTXyDnmhv1ln3mxzjxKojjci327GQf0
m7CfS6Ufc65WO0c/m7PkLv2N2CexttS8+tLcJEdDFG+LKC402/5trD2O+beC
arLKtRsxL8iPXUHzHUH1+J+XxgZzQf5yfcy4rrkWnG9zr94E2Z8rHuaWWGCP
IB5G+L5gfhRyT6EaboZ+OVNOiNn5qFwcKHT/OeOk7t7Hvkc81p1P4uJIrli4
Rv+s47VC92yPspt3vU5H2a8KwsJln8s3cIlxwn7f6HudjNLZIxkrY361EJfI
qX+Degpz2FcohkX39uOFsDEI+XcQrv4KwmndeNviPsl++XDQfZkDxss7TvlN
LBmLh2BThX7YvZE6OUX8dtvn2iAcT0et77DNC1H6BWOf/Ynv/ZGg+sxg/k/z
cE9ULjucT/YncoD9lm/ErlxvQKO/H/gdwT5acu/tc59hvyE3u11H4nrOveB+
v618Y3tdoyn3XuKauX496qwDUTH3m7PE/kx6l99Vv7/NxiYxTwwyNtrfG9Uz
2Tsn3EtY34Go/nsP5DDWbkC/L6onMqd/FMIQsXSd/c91Z08ltsvuPZvNt6ej
fJDDDX6jKn6Lbwa9478Efb90uY98GMXr1UE9hnkuG8vMC3PC+o/6W46cG3cP
HDTG9hoXzCuxeCvoe+jXII5MuLezZhW/0fw2Yi+7EMTR9ebpBnOCOuPr8jvL
96fJPXnAa5z/D0S7TXs=
         "]], PolygonBox[CompressedData["
1:eJwllF1oj2EYxt//630eFEPaDrADTElpB8rBHKuxiU0hDrShTWQtsjLK1DZR
iuzTZw01lIWVbcoBCQcOEOPA53ZgmzIOFIrf1XVw9b+u576fj/u+7ve/sLqu
cl+aJEkZyMCmmCQlU5LkMPwTCzvRa9Dn0OPo9+i5/M7LJckTfnvRbcQr0R/R
Deht6EHyGwNngCFiM7nkM3yQeC/xetYmyR8CefC1rO0iVkVOI3sHyP8B38za
1JzftAU+kTlXb9LbNug+8legK+CTwXvvge/wQ+TvIX4LPYZuRnejH6H/oCN7
TnJ+LfuPwVujaxsmfhx+ivwB8l+gA/oM+h28AlyGt4DH8DLQDS8hp5CzDqIf
otu4ozT1nZ3oEbCd83ewVkVuR/Be9aAd3h+8Vz38Re4zMD/nN/YR6wLlqd90
IXONqrWH/KXwr8G1ypNF8Cz67X3olcEQX8VaM/x3cC/kSTG8ENznrnzWrrH3
J3fsR9eg69HnQQu55dyfR+4N1YDuAkvQBeAu+TPUn2iP5bXO2E9svXpOrJX8
WfAPoCe1Rw2Za1Ati1mrhVcHz2InazejZ1CzuIx4HbGa4Fz19Auxscyx5+jl
qg29N7Un8qY/c+/lyVniu0ER/Cn5R4gdQBen9lTerguudTX6NPxisPfy5AL8
G7iTemY1uxujZ7GUeCV8DhhNPcOz4UPknMj5G9K39CBzb+VpJ7FxcDv1mRPw
N8Hfjnr6Gv5S9+Xcw1fwpujZVY2q9Wq0d/rmFhC/FO2F9uQHf6P6VtvZc51Y
UXBv5aG8lCfyRh7La3kqbws4Y6t6HbxXb9Rbj0bPkmr6y9mjwbmaoZHgnqq3
6kEHvCmzN+q5ev8PDOfc8yT6P0P/HVo7rFmI7qVm5Ap8WvS3+RZMh/8HfaCd
LQ==
         "]]}]}, 
     {RGBColor[0.9354185000265681, 0.7085462500664204, 0.3997973500823613], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtVUtsTVEUve/de04wEWWgYaIdaFUYaDtEMKlEon2YNAjRViitktD6xESK
gYFP0g6MdELirz7VEhLpIzoQg04EwQSP+kQHiFgraw1O9rn77LPP3muvve+8
rR1Nu/NJklzHSrGGcknSgLUD+0OQr7CK1s/K62wO5GPIHujXYP8MaxzfdZC9
Od3bE5NkAxz+zHAH+jHopmHVB/nMcF6J806cddjvI/tcl+puGb47sebjvB/6
W5CDWM18A35PQNca5LsK+rac3nro99px9hyyBvIbVhH775CFnPYnE/mjX/qi
nnvGUArK8TPk3agYPuLNF9Atwv5iIrk+1X46zvbhuwvnTyGLWHeh34K7q2Dz
Aef7sQagfwOfK1PpiUkZ9N2MAftdsG+Evh3yNVYP9PdhP5HqnLU4DVmONY59
dV72xImxrHM83zLpdkbViPUhnlfgqwI2y6E/5lqwJqN53aVNC9aKVJjTP/0Q
2ybcqYO+EJXfZexnQD8StV9iP/TB3IlHIRUm5Yhndia/rDfrzvhHIB8Y/x+4
Pxf7LZB7g/D9jjtfg+o0AXkpin9vM/FljuvF+Fgb5t6WCjdixRrSJ2v7Cfev
0T5TjsN5ceBdJk7disKpNi8Ok1NP8vLLeM8Y8x5zlv6vBtXjX6bcicsM16fD
ObInlpgPB4L2k7D/E+T/WKba1vld+hi1PfnCvmP/sW7kCX2XUnGuy/1BnrNe
xHjM+5tBNaiPynXEOA+k2hODgnGgfjKoFr8gZ/pNzgG+Ue3+Wp3TGfXssyr3
GmMktqwJuVrmnJjrU+fC2Kln/IyL8RMr3mfc08w77hk/e6TcnCGnxs0rnpfb
nrOn1vxuRp7LYLsZcnFQ3X4H2a50r22KqjVr/j5T/duC8Bg2JmPme79rXWnO
1kXF+yCTbcEzZKPf5fuDUVwlZ6lbmuq9LvskP1l74nIEtn2ej+dgPzWKY1Mg
qzyvOLeY3yvP1QnHQgzZi6wFa8I+Yb8MRc3S7kQ1qjJ/+fb5TLOg33OxxTne
ifpe6LlEvJlXje14fsNcIqfGHQtrUcyE0Wvjynx73HcFz/MG6xkT5TLvP3vG
VgbpG2zfCF+1+F4LeS+IN0NBnO8yhpwr1Z63xOelMWrzP4N5tabqKfIwRNmc
yoQfcSz6H9frXE44L+rJU9oQZ/ZiyXOV/wD22+6oOcXZ8iVoHnEWXYzidcmz
8W+meXQ0ar6O+t8xy73S4PlUNF4LgvrzdtS/qNmY9AX1wEP4qwi6+xHyMOy2
wf4Q5J9MuRyMwqzV/wzOrl2puHU2qA8G3Vct5jB5dCpVzw9E7S84BsbF+VBy
/MzreJTPXsjt5io5S7wZD+P4D70CDls=
         "]], PolygonBox[CompressedData["
1:eJwllEtszGEUxb+Z///7InYeG2GjXXhEWLRji9SGRKQtIvEo4pVopyMkdBRd
aNBFFx5JLazMhsQj0hEq1ZCIEhuxJCxYIAT1WGglfsdZnMk5997vde/5z/xd
3W3lYgihBeTgAT8zCiFcz0IYTSHsAC3wAXLvyE3FEMZZ8BT8hQ8QewZfBy7D
62A661ezZidrP6D3oJ+DTurLxBZQW0F/IzeM3gKvE6vD91JzVvdA/4ZXqbkF
nw02oyvUbGDvjWCCXCOxR6yfS/4auS70QvgY6CP/XfclPw89Ac+peY1+iY7w
fdFvU81++CnVB9f0wy9Fv20megj+B7yAPyY2Cb8I1hT95gvwj+BhwXf+BG/n
jBJ3XUtsPbxMbBG5dmLd6KboXqun6u2v6LePgp/w/txn6U16m96kt+nMIfhg
7rc0g57onqg3S9GHonum3tXAEXJXk3ulOzaQ60Xvpr5ErBo9U822CRyFHyN/
uuCa4/Dl4HDRHikpp56Tq8gT7L8ketaa8V1y08D5gmvOwO+AWmZPyBvqgXqh
PW+z9kv0rDTTz/A3YAQ+SE2N2q/RXpFHeln/A2zK7Al5Yyz3rBQ7iO4ErZl7
rt4/IT+H/DlwE30g2Yuq6YJfST5rFvWvqO2TRzJ7Qt5YiW7IvIf2ehvdW93x
/11BT9E1N+An5enMsXvRe2pveaIteWaanb4hfUuauWavHi2O9oy804xuTe6x
et2IXpUM8Sqx8dwz1Cx1ps6+H53TG6bIb9WZvGUFehu8I5nrG9wOH0n2jjy+
jLXvc3/L+g/Qf8GJZG/IE5Pk/gFKj45v
         "]]}]}, 
     {RGBColor[0.9645855000313986, 0.7814637500784967, 0.4902150500973359], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVDtok2EU/fM/vtnFRQJSBwcRwYqCDprMFiwdxShEEnz0T0DwlVQduujW
TnYW2nRSEK3WR006mCFgXJK5o4vUQUWxgud4juDw/fd73O/ce8893z9Rbc40
4iiK5jASjM/4fMDG7kIUfUmjaAbrRoiiFtaT2L8NW8d6CvtXYNtYVzF/j7tf
sygaYP0Ntoy7e1OdncPeQ5zfx4hx5yNwEthZ+O3H/BP8ihgljFX49FLFPw6f
M4lidrB/MREuMRmHd5ci5TUqyG86EQ7vvQk6u4k4jUzYs9j7hfMazu86f9b7
Ame/4TPGege2hdEnL/A5j1GG/wXYPbB1+NcwulhvMU/4rtv/Hva6OKs75z7s
vlgcLBTkT64Yk1wz7ibmvVj+3CPX3D+FvZMYi1g/Bn6O+SvY0+Z0yfick1vy
Rd42U9XRNs6iY48xH8aKzRzYh6Hnd4L4bQfxu/BfnkPrgXWPjcmekf+1oPgD
53M2EeesoeWe0J96Yd55QfywXs53paqZ+BOx6mEteVAvr8IuJ7pD/LVYfNLv
knVIPfaBQyGXgrC75pMY1AL78RJnHcwPZsqZ+VCX7C1jV6xl6pb1U0e8T92w
jpp1wj7Qh/2uALPEfsBeDqpp21ouWoccnP/DqBuH86I1zxo7zpN+I+uH72/a
+8x3yjmzp9QG8zzgd8f3d9QaPRbUu7b7+COTzn5m4pu8t4yxZX1U3APyfy1T
DpOZ3spfbRTEcTuWlvgWuU8eWEfN/4fXQXcP4+6JTPh8K82gWvkWe0GxH2TC
qBp/LlWPt633hmPNG4d45IKckh/mndvnSSZ/aoF1PEqkE/YqN1fXgzR6A3Yl
Ee/U1VP/H5p+v8vmnFpatW6p9xX7Pw/Cfwa7HuRzCBi3/A/hv4Rxy9bJ26C+
b6TS78Dvdsf+RzK9W76DjSDeR+ay67fCuLl1wPn3TFh12HdB77QQ9A9iTP7D
/gANx8ZJ
         "]], PolygonBox[CompressedData["
1:eJwlkrsvhFEQxe8+7q01Gh2FwitBSDSsXiFKgoTsei4h8YhXQcU/oJewW5F4
r3hkFbZQ0FApRKdBYxGJ+J1McfKdM+fOfHdmbvnAZNdE1DlXC+LgKThXAimN
OJfn+wLKOdAec64PL+Wdq0AfgyW8GLF7+A25q3gR9F3UYlF4PbEHajWgz9E/
6Gt4hvNT8DFindTuAh/U6w/2r15yeuCjoAOdRo/Aa8jJoLfBCboF/YzXSs08
+j1uZ7P4OfQrOhWxnFP0CkjCF4kV8ZbQBe4ySGwZPgu64Qv4h94grploNhPB
7qqaqn2An+TfWWrsw6vBDn4lsXF4QjnwNNhFv4ECuVucOcI7DMY1Y826ztvd
8+gveCN45HwKfcHZM2+1dOectxlpVgnNLFhP6k058/iXccstw2/Cbw7GdWfd
/U/no3bHPW//1L+1o29vO9KutMNpbzPX7NWjetXOtXvtYA3+7u1tqEf1Oudt
95rpDLnHwWZzi1+FNx5sdnoDafgQ2HS282H4urfdtoEN9RPsbeqNXcE/vdXS
myzCF4PtUjv+pbd/5NVk/w==
         "]]}]}, 
     {RGBColor[0.9937525000362293, 0.8543812500905732, 0.5806327501123106], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNUzFPk1EUff2+771fweIuJGzU0V0HS0PD0KqLtkMbSBDZwBIT+AclnR20
CbGWCkmjYXB3gAk2YGYilqXxnJxjZLi579537r3n3nffo9edF+0shLAKySFT
GO8h/VIId3AMIedB+pvPkxjCAe4D9MiYj7A3UghjuDfh/wzfl1z2FfRXyBnO
P4E5xPkHdBsxR/B9gjRhP4e/BV3PFc/Yx+DyuyTMDL6nsHuwdyFdyK8g3cx0
vs5Vj7VOkziXo2oxL+sNnJ++DcTN5YqvFiEsF4pvZeJ5AcwoCvcuaS6cD+tP
knpcxP1Nrtqs+wH2E2DyJO7zmWqRO3vg7Naj/GvQ0yjcnyjheQH6JKn/20Lz
u/KcWYd5eu675d4Z1/asthFfhn8rqc7A/Z4W6uXS82b+DvzHUX19j7LpZx5y
nnof9hDTQcx+Eocb98K5XZsP51p/MFvy4zs27O+af9Vz3jFP8iXmpd+IPV34
fXn/yrErhbjQz9z0Mf+c36xprsSRT9+7Qjzftmp/8A4vQVcK4YnpeMd4N/Ob
8kwufFPOn1wa5sM5sk/uyLRQrTHONedk7q73gXtRd+yRZ0t+//a57H6ypHql
JLvuv1DzfhK/5v25j/p/d/5j+1F/dM99MQ85v0WuZ7h/k8Sr5jy8r7j3oXMQ
z7dhLZ6XjSeOfYzy//6KMX8BGPOZng==
         "]], PolygonBox[CompressedData["
1:eJwtkLtKA1EQhie7e85TSMBeA6YylumTwhfwUgRN4YIQL+lC0sRCsLWzVUFQ
iYpBE5/AQrGwtrbdWPn9TIqfM9+Z+yxu5+t7iZmVUYbWgtl9ystnH7uC3ktm
S/BTNHtGl/ivURXfMVzDNyCmoMCMv+XEcwrsQzSi7hXxY2KH8Cd8B0+j11At
5exjl/j7JveGv1fsP2pupd6jh38Gb8IbqIv/N/PZmvAuvErMOfk/8BecRt9F
NRPNihbwdfibkvsSvVcbfoMn8G06v0HwHuqlGTTLQfRc7dTBfiDmCC7QReY9
1fsD/xm8Enx33Uy3a6GcWRrwDvYp/jq5OTyET6Lb2mEcvKZqK0axmlGzagft
Mgp+e83wiN2Ofgv1UK9a8FtrJ+32D7AIREk=
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{1185, 230, 1463}, {240, 231, 230}, {1169, 479, 1751}, {
         1464, 631, 1462}, {1422, 230, 1185}, {244, 240, 236}, {636, 637, 
         236}, {1274, 389, 1658}, {637, 479, 236}, {1272, 861, 1657}, {231, 
         631, 230}, {240, 636, 236}, {861, 631, 196}, {631, 231, 196}, {636, 
         240, 230}, {248, 240, 211}, {240, 244, 211}, {1673, 230, 1422}, {240,
          248, 231}, {1468, 636, 1674}, {1409, 389, 1274}, {1751, 479, 
         1336}, {1658, 389, 1273}}], 
        PolygonBox[{{1674, 636, 230, 1673}, {1657, 861, 196, 1408}, {1336, 
         479, 637, 1280}, {1463, 230, 631, 1464}, {1280, 637, 636, 1468}, {
         1408, 196, 389, 1409}, {1462, 631, 861, 1272}}]}]}}, {{}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
      LineBox[{1169, 1751, 1336, 1280, 1468, 1674, 1673, 1422, 1185, 1463, 
       1464, 1462, 1272, 1657, 1408, 1409, 1274, 1658, 1273}]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
      LineBox[{1418, 1417, 1729, 1337, 1728, 1338, 1411, 1410, 1539, 1538, 
       1537, 1727, 1726, 1218, 1593, 1217, 1756, 1460, 1654, 1653, 1399, 1724,
        1329, 1723, 1330, 1394, 1393, 1529, 1528, 1527, 1326, 1721, 1263, 
       1641, 1642, 1638, 1640, 1639}]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
      LineBox[{1278, 1455, 1223, 1600, 1454, 1466, 1465, 1663, 1402, 1660, 
       1661, 1659, 1275, 1662, 1270, 1400, 1533, 1532, 1331, 1725, 1214, 1589,
        1590, 1459, 1458, 1647, 1390, 1644, 1645, 1643, 1264, 1646, 1257, 
       1720, 1324, 1719, 1323, 1388, 1256, 1718, 1322, 1524, 1525, 1526, 1382,
        1148, 1519, 1518, 1717, 1716, 1250, 1630, 1631, 1627, 1629, 1628}]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
      LineBox[{1545, 1544, 1672, 1671, 1225, 1601, 1224, 1758, 1467, 1276, 
       1664, 1412, 1413, 1334, 1540, 1541, 1166, 1401, 1162, 1181, 1433, 1432,
        1215, 1649, 1267, 1648, 1266, 1395, 1265, 1722, 1327, 1530, 1531, 
       1157, 1389, 1152, 1176, 1429, 1428, 1205, 1633, 1252, 1632, 1251, 1383,
        1384, 1320, 1520, 1521, 1522, 1377, 1517, 1516, 1515, 1315, 1706, 
       1248, 1705, 1314, 1513, 1514, 1146, 1368, 1143, 1503, 1502, 1700, 1699,
        1243, 1618, 1619, 1615, 1617, 1616}]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzT0vA1AUBuAjqdqKgYlBUqPN5D8gqaTU2LRDF10kBgzt0LkMlYiPLiwM
IjEZmWyqaiFRH4vabXg6PHnfe+65uVP5cmZtICKy7CYimhwNRhxyp1/IoWRE
kioVbs3n5I18kVd2fvQNfVPfYpZf/gjzdVmzs8+e3uBaL7r7lgXZk2XzLzkj
7/v/6SV9u/+OUbMRLvVluUKWrnPe3rmelmdyWq6S45MP3pnk1P2zNydywvmV
Lm8s8USHR8Zp2uvYP5Zjzi0eaLPAIsMcuE/JeXao8w8mNzJ8
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzDkvhFEUgOEjQUFjKQiJpUIj+vkFlkJkGqEaasTSKhQUiGJCYg8NhTUS
tYTRWUYmMZYpLT16zxRP3nvOvd/XmhofGCuJiFGypRE95RF99HJkTpdFXHPD
LRm6qWDVm0pd06fit8733FHFtn3OfkerzQ88kqWfV17IU8eed8/e72u9+Y13
CiT55otPmhhmiGYOfNOih1rwjzM955hTThhxP6jtdNDGhbcp/dAf97Paab7U
Gq1l3XmOCfcLmrPrcv51ntE/nbSbZoor84b9JlssmhP2GW3QRnadV5h3n9a8
XcJ5qfieZf4BdrI6Kg==
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz70rBHAcx/Gf4iweysNAXN1oomTzMHHpphPjGZCBuouQEgaUwaTL4j84
DDcxKA+Dp6MTKRObzZ+gvH7Du/f78+t7111qpjCRrwkhzKNYG0IyEUI3ulCx
d3kPO/izR/iOB3kYQ1jHZl0IWxjAh33gZk3v8zHavbXhUvfH7+M3/uUL9Opz
7uMfnuUFn19ED17tbe9zeoOP0OytCWU9xd88yV+cczeNFKrxN8Ybvcovdqf+
1B38bK/orF7mJ7s1/g/dwo/2ks7oAj/YjfpdN/C9nddjOo16FL0leBQ3uMU1
rnCIE/fjbqpcib8BZyjZJT6NNyjjH0mrNfA=
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0EtLlGEYgOF3cAwz3YUHXNhkKnhYKMK4rilnYS5mUdAmEd2oqSAIrkSI
NGxsNMRD4tJyoUa5McidgqdBEITRH9DOv6DXt7i57+d5n+GDSfSNZkZiIYRp
9MdDKCoOYf5BCF8xh5j5C2dxoE9wjEG3N3Y/9DX/5M0I+y0e4ifRO9dG79zF
abzCuTnBW1zKOSzpBX7h93Es6mL+xnlvKT3Mh+YSfaEf8pH5g07rMa4zP8NT
bJvX+DuWsYoVdLt9zT1owI67et7lx95O9bjO6AnOm2v0W7xBwa5gd82/8EiX
oRyT5vduetGI39E3+A8P8DtuRguasOe+lf9zO+9zG//lW1zqj9zB/7iCK7Gu
PyOpO1GFamzYZTHlWzm+skvqWczgU/QfI4XnOHPzku/4HgIVPqs=
       "]]}, 
     {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
      LineBox[{1123, 1479, 1282, 1345, 1344, 1189, 1343, 1342, 1186, 1423, 
       500}], LineBox[{1125, 1341, 1732, 1731, 1340, 1730, 3}], 
      LineBox[{626, 1480, 1126, 1440, 1127}], 
      LineBox[{598, 1442, 1129, 1444, 1445, 1443, 14}], 
      LineBox[{598, 1441, 1128, 1346, 579}], 
      LineBox[{235, 1439, 1188, 1469, 1187}]}, {}, {}}, {InsetBox["0", 1759], 
     InsetBox["0", 1760], InsetBox["0", 1761], InsetBox["0.05`", 1762], 
     InsetBox["0.1`", 1763], InsetBox["0.15`", 1764], InsetBox["0.2`", 1765], 
     InsetBox["0.25`", 1766], InsetBox["0.3`", 1767], InsetBox["0.35`", 1768],
      InsetBox["0.4`", 1769]}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"emigration probability m\"", TraditionalForm], 
    FormBox["\"\[Alpha]\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->NCache[{{0.00001, 1}, {
      Rational[1, 4], 1}}, {{0.00001, 1}, {0.25, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718629912436016*^9, 3.7186299537653847`*^9}, {
   3.718630053224238*^9, 3.718630096045176*^9}, 
   3.7196723540321207`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQd4VcfVNnqsTrcx1dim9957r6oIkEBdSAgQooOEkIQEohcVOqbbxhWD
GzbG2Ma9fK5xi+M4iRMnTuw4cRKn+Ev71p137Vlz5giVo63c+9y/+HnA6Gif
PWveWbP6rInOyM1evDIjd9mijE4z12WsyV62aH2nGavXqY8Cb/B4bnhJ/bnW
yYN/k8cjf/F/L+Mvj+cV/l8I/eAHP6AtW7bQ8uXLafPmzfTKK6/Q//zP//Tm
XwfSp59+SmvXruWfRvLfQfT555/TmjVr6P7778ejB5wXOu8NpW+//ZZycnLo
hRdeoD//+c/04Ycf0urVq/EmT21v/ctf/kIffPABf/7uu+/6vDWQvvnmGyHN
E6A/e/DBB+muu+7in3pV8+bR+rNHHnmEDhxwXrjfee1F/l9j+tOf/kR33HEH
TycvL48f/fe//81A/eMf/6AlS5bQ119/HaBp3Lp1K73xxhuk/wug++67z9OC
//3Xv/6Vn8aU8d8vf/lL2rNnD7/59OnTdOXKFSGC/vu//5uf/d3vfqcncwsm
RufPn+fnN2zYQBcvXmToMJmXXnqJv/fss8/SqlWr6NKlS9eN9/vf/54OHTrE
UBcWFtLly5f5ndXOJJBefvllJs+ZF/5uYrB7/fXXqaioiP8NfEFuVbID+Tv9
ah0W79uxYwev26ZNm2j9+vUAjP75z3/y7+uacl3ftyGQf4P7qkJjwSbTf/XV
Vyk7OxuPqD3gfGah5KltwTc7LHRBo4ZZ7Ny5k3bv3k0/+tGP6M0336Tc3Fx6
8sknq4Jf62ur4SMAjkljEX7+85/zRNatW8fDVc9HTeijjz6ipUuXMpAAA9/B
3gaXgxT8t23bNpCnvqNG8zQz44Hzi4uL6fDhw/TTn/6U3nrrLV4cvKP6qdTM
SKAB8uSHP/whvf/++1RQUEBnzpypge7+dY6Nd65YsYJllf1OMAT+q2vedX3f
X2bS2DFygsGxY8f4mRdffLFh3BTIUwfZYEznayH0zjvv0MmTJ6vfyjUwU+h1
k8IuwoQV0ObNJ06c4B1WZVFkXliDjRs3WkK3GRMCwSv/YXQQWHU4rAM23fff
f2+Gu3btGguWaidSHSs58hyPKVzMaz755BNeagxXDdV1jSyvVDvKfiN0lvqK
PWn5tT3n677dwufb/rKRhs2wBuAAe2KosrKyBnIRxBsYXak39QXnb2wwf7kn
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite population", "Section",
 CellChangeTimes->{{3.719668352826543*^9, 3.719668356660132*^9}}],

Cell[TextData[{
 StyleBox["Notation : ",
  FontWeight->"Bold"],
 "\n(x=y): x=y;\n(x,y): x and y are two different sites in the same deme,\n\
x,y: x and y are two sites in different demes.\n"
}], "Text",
 CellChangeTimes->{{3.725688494587751*^9, 3.725688551303151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"QQin", " ", "=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "*", "dself", "*", "din", "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"k", "=", "l"}]}], ",", "j"}], ")"}], "\[IndentingNewLine]",
        "*)"}], 
      RowBox[{"1", "*", "dself", "*", "dself", "*", "Qin", " ", "*", "pin"}], 
      "+", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", "k"}], ",", 
         RowBox[{"j", "=", "l"}]}], ")"}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "dself", "*", "din", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", "k"}], ",", "j", ",", "l"}], ")"}], 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", "n"}], ")"}], "*", "dself", "*", 
       "dout", "*", "Qout", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "=", "k"}], ",", "j"}], ")"}], ",", "l"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", "din", "*", "din", "*", "Qin", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", "l"}], ",", 
         RowBox[{"j", "=", "k"}]}], ")"}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", "din", "*", "dself", "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{"i", ",", 
         RowBox[{"j", "=", 
          RowBox[{"k", "=", "l"}]}]}], ")"}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "din", "*", "din", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{"i", ",", 
         RowBox[{"j", "=", "k"}], ",", "l"}], ")"}], "\[IndentingNewLine]", 
       "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", " ", "n"}], " ", "-", "n"}], ")"}], "*", "din", "*", 
       "dout", "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", 
          RowBox[{"j", "=", "k"}]}], ")"}], ",", "l"}], "\[IndentingNewLine]",
        "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "1", "*", "din", "*", "din", "*",
        "Qin", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "=", "l"}], ",", "j", ",", "k"}], ")"}], 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "1", "*", "din", "*", "dself", 
       "*", "Qin", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{"i", ",", 
         RowBox[{"j", "=", "l"}], ",", "k"}], ")"}], "\[IndentingNewLine]", 
       "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "1", "*", "din", "*", "din", "*",
        "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{"i", ",", "j", ",", 
         RowBox[{"k", "=", "l"}]}], ")"}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], "*", "din", "*", "din", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{"(", 
        RowBox[{"i", ",", "j", ",", "k", ",", "l"}], ")"}], 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", "n"}], ")"}], "*", "din", "*", "dout", 
       "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "j", ",", "k"}], ")"}], ",", "l"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", "1", "*", 
       "dout", "*", "din", "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "=", "l"}], ",", "j"}], ")"}], ",", "k"}], 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", "1", "*", 
       "dout", "*", "dself", "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", 
          RowBox[{"j", "=", "l"}]}], ")"}], ",", "k"}], "\[IndentingNewLine]",
        "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "dout", "*", "din", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "j", ",", "l"}], ")"}], ",", "k"}], 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", "1", "*", 
       "dout", "*", "dout", "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "j"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"k", "=", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "dout", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "j"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"k", ",", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", "n"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", " ", "n"}]}], ")"}], "*", "dout", "*", "dout", "*", 
       "Qout", "*", "pout"}]}], ")"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", ",", "j"}], ")"}], ",", "k", ",", "l"}], 
   "\[IndentingNewLine]", "*)"}], ";"}]], "Input",
 CellChangeTimes->{{3.719668358346829*^9, 3.719668700339443*^9}, {
  3.7196688712454576`*^9, 3.71966890309032*^9}, {3.719669651985901*^9, 
  3.719669661610971*^9}, {3.7196697750120277`*^9, 3.719670102645968*^9}, {
  3.719670998527741*^9, 3.719671000486349*^9}, {3.7196721206661987`*^9, 
  3.719672193464335*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"QQout", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "1", "*", "1", "*", "dself", "*", "dout", "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", 
          RowBox[{"k", "=", "l"}]}], ")"}], ",", 
        RowBox[{"(", "j", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dself", "*", "dout", "*", "Qin",
        "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "=", "k"}], ",", "l"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
      "1", "*", "1", "*", "dself", "*", "dself", "*", "Qout", "*", "pout"}], 
      "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "k"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dself", "*", "din", "*", "Qout",
        "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "k"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "dself", "*", "dout", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "k"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", "l"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "din", "*", "dout", 
       "*", "Qin", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "=", "l"}], ",", "k"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "din", "*", "dout", 
       "*", "1", "*", "p"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", 
          RowBox[{"k", "=", "l"}]}], ")"}], ",", 
        RowBox[{"(", "j", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "din", "*", "dout", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "k", ",", "l"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "din", "*", "dself", 
       "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "k"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "din", "*", "din", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "k"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "din", "*", "dout", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "k"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", "l"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
      "1", "*", "1", "*", "dout", "*", "dout", "*", "Qout", "*", "pout"}], 
      "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "l"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "k"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "dout", "*", "Qout",
        "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "l"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "k"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
      "1", "*", "1", "*", "dout", "*", "dself", "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", 
          RowBox[{"k", "=", "l"}]}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "din", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "=", "k"}], ",", "l"}], ")"}]}], "\[IndentingNewLine]",
        "*)"}], 
      RowBox[{"1", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", " ", 
         RowBox[{"2", "n"}]}], ")"}], "*", "dout", "*", "dout", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "k"}], ")"}], ",", "l"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "dout", "*", "dout", 
       "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "l"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "k"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "dout", "*", "Qout",
        "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "l"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "k"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "dout", "*", "dself", 
       "*", "Qin", "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "=", "l"}], ",", "k"}], ")"}]}], "\[IndentingNewLine]",
        "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "1", "*", "dout", "*", "din", 
       "*", "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", 
          RowBox[{"k", "=", "l"}]}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "*", "dout", "*", "din", "*", "Qin", 
       "*", "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "k", ",", "l"}], ")"}]}], "\[IndentingNewLine]", 
       "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "dout", "*", "dout", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "k"}], ")"}], ",", "l"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "1", "*", "dout", "*", "dout", "*",
        "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "=", "l"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", 
        RowBox[{"(", "k", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "dout", "*", "Qout",
        "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", ",", "l"}], ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", 
        RowBox[{"(", "k", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "1", "*", "dout", "*", "dself", 
       "*", "Qout", "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", "=", "l"}], ")"}], ",", 
        RowBox[{"(", "k", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "*", "dout", "*", "din", "*", "Qout", 
       "*", "pout"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"j", ",", "l"}], ")"}], ",", 
        RowBox[{"(", "k", ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", "1", "*", "dout", "*", "dout", "*",
        "1", "*", "pself"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"k", "=", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dout", "*", "dout", "*", "Qin", "*", 
       "pin"}], "+", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"(", "i", ")"}], ",", 
        RowBox[{"(", "j", ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"k", ",", "l"}], ")"}]}], "\[IndentingNewLine]", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"2", "n"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", " ", "d"}], " ", "-", 
         RowBox[{"3", "n"}]}], ")"}], "*", "dout", "*", "dout", "*", "Qout", 
       "*", "pout"}]}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", "i", ")"}], ",", 
    RowBox[{"(", "j", ")"}], ",", 
    RowBox[{"(", "k", ")"}], ",", "l"}], "\[IndentingNewLine]", "*)"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.719668702373042*^9, 3.719668800499158*^9}, {
   3.71966891106186*^9, 3.7196691425841503`*^9}, {3.719669185892029*^9, 
   3.7196692896756973`*^9}, {3.719669321301545*^9, 3.71966952603471*^9}, {
   3.719669665028893*^9, 3.719669675439692*^9}, {3.719670121709237*^9, 
   3.719670536471631*^9}, {3.71967219932858*^9, 3.719672285614252*^9}, 
   3.719672345490718*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Qin", "\[Equal]", "QQin"}], ",", " ", 
         RowBox[{"Qout", "\[Equal]", "QQout"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Qin", ",", " ", "Qout"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"dself", "\[Rule]", "din"}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"din", "\[Rule]", 
       FractionBox[
        RowBox[{"1", "-", "m"}], "n"]}], ",", " ", 
      RowBox[{"dout", "\[Rule]", 
       FractionBox["m", 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", "n"}]]}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.719669528753953*^9, 3.7196695859977713`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.7196695406162043`*^9, {3.71966957323761*^9, 3.719669586474947*^9}, 
   3.719669693612924*^9, 3.719670611792984*^9, 3.719671036376495*^9, 
   3.719672424255361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol0", "=", 
  RowBox[{
   RowBox[{"sol", "/.", 
    RowBox[{"p", "\[Rule]", "1"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.719669587736887*^9, 3.719669596787506*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Qin", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "m"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], 
             " ", "\[Mu]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], 
             " ", 
             SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
    RowBox[{"Qout", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", 
          " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "d"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", "m", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{"d", " ", 
           SuperscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}], ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.719669597538018*^9, 3.719669703088418*^9, 
  3.719670621011796*^9, 3.719671038717297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Qout", "/.", 
     RowBox[{"sol0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
     ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7196696026198063`*^9, 3.71966963717754*^9}, {
  3.719669709187129*^9, 3.719669710988627*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.719669614692402*^9, 3.719669637627071*^9}, {
   3.719669705407467*^9, 3.7196697113236723`*^9}, 3.719670621220543*^9, 
   3.719671038795142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Qin", "/.", 
     RowBox[{"sol0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
     ",", 
    RowBox[{"d", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.7196697170737753`*^9, 3.719669717156024*^9}, {
  3.719671044241967*^9, 3.719671052606883*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
     "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.719669717816434*^9, 3.719670622175005*^9, {3.719671039014929*^9, 
   3.719671052966359*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{
  3.719669717816434*^9, 3.719670622175005*^9, {3.719671039014929*^9, 
   3.7196710529730377`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Qin", "-", "Qout"}], 
     RowBox[{"1", "-", "Qout"}]], "/.", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.71967117526515*^9, 3.7196711946722183`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", "p", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox["p", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "+", 
           
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "+", 
           
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["p", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "m"}], "+", 
           SuperscriptBox["p", "2"], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"4", " ", "m"}], "+", 
              SuperscriptBox["m", "2"], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
               SuperscriptBox["p", "2"]}], "+", 
              RowBox[{"d", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["p", "2"]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
            SuperscriptBox["p", "2"], " ", "\[Mu]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "m"}], ")"}]}]}], ")"}], " ", "m", 
           " ", "p", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "p", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "p", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], 
              "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}], ")"}]}], "-", 
           
           RowBox[{
            SuperscriptBox["p", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "m"}], "+", 
              SuperscriptBox["p", "2"], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"4", " ", "m"}], "+", 
                 SuperscriptBox["m", "2"], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"d", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["p", "2"]}], ")"}]}]}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"d", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], 
               " ", 
               SuperscriptBox["p", "2"], " ", "\[Mu]"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"d", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}], ")"}]}]}], ")"}], "2"], 
               " ", 
               SuperscriptBox["p", "2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.719671189817552*^9, 3.719671215051021*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"prms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"d", "\[Rule]", "15"}], ",", 
    RowBox[{"n", "\[Rule]", "4"}], ",", 
    RowBox[{"b", "\[Rule]", "15"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"RR", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "15"}], ",", 
      RowBox[{"p", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
      RowBox[{"n", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.71967120301017*^9, 3.719671243623784*^9}, {
  3.7196713603881483`*^9, 3.719671364870471*^9}, {3.7196714631021147`*^9, 
  3.719671466961533*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"d", "\[Rule]", "15"}], ",", 
   RowBox[{"n", "\[Rule]", "4"}], ",", 
   RowBox[{"b", "\[Rule]", "15"}], ",", 
   RowBox[{"c", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.719671222252408*^9, 3.719671235860561*^9}, 
   3.71967136520389*^9, 3.71967146733215*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/LZmDm/MESO5anp5mYlc1u3Nz5jm+B9O/HVc
       "]]},
     Annotation[#, "Charting`Private`Tag$288569#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.719671222252408*^9, 3.719671235860561*^9}, 
   3.71967136520389*^9, 3.719671467407444*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CWF", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], "c"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "2"], "n"], "+", 
       FractionBox[
        SuperscriptBox["m", "2"], 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", "n"}]]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BWF", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], "b"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "m"}], ")"}], "2"], "n"], "+", 
       FractionBox[
        SuperscriptBox["m", "2"], 
        RowBox[{
         RowBox[{"n", " ", "d"}], "-", "n"}]]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.719671281687891*^9, 3.719671340584119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["CWF", "BWF"], "/.", "prms"}], "/.", 
    RowBox[{"\[Mu]", "\[Rule]", "the\[Mu]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xfH5nX5g35onoHG2RF9zfP61MWPP9FkaOs+EX24jnrYt/3rWEI0iwWav8fU7
m/lGLfhO1v96mcj487mspLwzfZic74rU7DDituE627m/yPcPR22JJVbiRune
/EPD6MgXuUvEnjlGMrP+0dAN7q27QUxt+inVIMSgb1346/H9kxJ7JnlCmMGx
HHaomNj38dEpRmIMJqSbOjUQv/QwFeeJM9D22tXTTawgPiaaJsFgh9KBzGHi
A/kvhR2lGFQtdE+XIOdLfYrVWIEcg0/itUuNiUMLRf/6zmSwpGdznRMx17vy
t5IiA3pxQ/Ie4miO3fDx2Qy2GwdU3Sbu2+FEOyxgcGbXqxRVcl/MpsnxxxaS
vv9nXr058ZWi5oE8PQYBs5KNfYhtZN16FBYzQInDgxzihyVb2nvMGLQoZPx0
Jvd34p45766YMxAKOV13jHjzzO63dlYM9hUcbsskltzn05RryyBbJCpuMsmL
/Up7q8LWM5B9c8udO54fFbqV+q4M8oKWNIiTfFE9wJZ3uzM4GsqEgrihMvCl
jRcDE++uvbnEhgePcKb7MXgQrfXqphLZ7zkmhZV7GaQFOLd3EX+uHs0L9Wew
0bt0/hySb4nqx7M/BpP1PojwvEs8Un/yXlYEg4SJoyuKSB6uO2pzxyuKwb/U
6hFhkp/3Nafcko1h0Cot2r+GeFP4ubTDpxmUx1Rt6yV+rp14yeoyg6eMVoM6
yefjMbciPzxksHmdeGwryfuphybZbX3EwHN0xiZdUh9Sd+2T7cth0GExahxN
nG9vfIctYPB1su+cJXPJfsg0lk8sYbCua3XcHQ2Sl9eFxBdwGXhH/H2TR+pR
24WdDY9aGKyUUNqrSOrXjsiaZMM2BsZiu1QiiY/tSF6wooPBo/u5d10WkDzX
NrB37Gfw+PHt9aKk/s3keJ0/+IeBXlD20qukXt65X7Hx918G+mxHriyprwap
C1UjhFhcjc1YeobYNnwkJ06UhYrPvP0RBqQ/sbzQeFWaxcXHlyOCDSl01xdP
L5vLoryqevlFIwqPBmZdlXJg8d6Ltr1M6nvctRjvzrUszlT+3bWS1P8dzvS8
bCcWD/St3wmIVZ4/z13jymLltcxHtqR/OH1h8+uz21hcyjCbL2dNYZdRytCU
Iyz2mUzd3Uv6D/Xo6TaT0ln8GxTExbpS+LcsbGrrfRbcPcY8D9L/vKM/N6Vn
soiJjUxbRPqleNd8z1WPyXw5lqM9myiMaTsHxTxn8SfF8bbrFtJfNF64Lsxl
MSmkJSnMh+TTyZHt3BYW956G6PmS/ivRxGvBnTYWKY+VlVx8yX7c0yuw6GSx
1ZSi9XZTeHa4tiqSx6KyTjFumPRvSbpLLjgJWOyZWl7K30fua3faejWWRX7i
mGP3flKfHPZ2vfzOwlwnyI9L+j+RCc1340dYDHHrh2sPUPhYaOLn/ZuF5jex
tirSLz73u6Nv8JfFhRkLpSpJf3lFVeLH+P/+gx/XplQEU/g/xw/uCA==
       "]]},
     Annotation[#, "Charting`Private`Tag$288895#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.08624708629163277},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0.08624708629163277, 0.9999998730158866}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7196714561644993`*^9, 3.719671469521614*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"the\[Mu]", "=", "0.01"}], ";", 
  RowBox[{"thep", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["CWF", "BWF"], "/.", "prms"}], "/.", 
      RowBox[{"\[Mu]", "\[Rule]", "the\[Mu]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RR", "/.", "prms"}], "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "the\[Mu]"}]}], "/.", 
      RowBox[{"p", "\[Rule]", "thep"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.719671343588318*^9, 3.719671535422167*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$291427#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
B2jRXXs=
        "]]},
      Annotation[#, "Charting`Private`Tag$291465#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.719671440926569*^9, 3.7196714476571817`*^9}, {
  3.719671480448559*^9, 3.719671536262157*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QQin", "/.", 
   RowBox[{"dout", "\[Rule]", "0"}]}], "/.", 
  RowBox[{"dself", "\[Rule]", "din"}]}]], "Input",
 CellChangeTimes->{{3.719671947987338*^9, 3.7196719814937897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["din", "2"], " ", "p"}], "+", 
    RowBox[{
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "p"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["din", "2"], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.719671953901188*^9, 3.719671981843731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QQout", "/.", 
   RowBox[{"dout", "\[Rule]", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.719672033252407*^9, 3.719672048647112*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"dself", "+", 
     RowBox[{"din", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], ")"}], "2"], " ", "pout", 
  " ", "Qout", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.7196720357036133`*^9, 3.7196720490213423`*^9}, 
   3.7196724319486513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QQin", "/.", 
  RowBox[{"dout", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7196720517999763`*^9, 3.719672054430031*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "din", " ", "dself", " ", "p"}], "+", 
    RowBox[{
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "p"}], "+", 
    RowBox[{
     SuperscriptBox["din", "2"], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{
     SuperscriptBox["dself", "2"], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{"2", " ", "din", " ", "dself", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}], "+", 
    RowBox[{
     SuperscriptBox["din", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
     SuperscriptBox["p", "2"], " ", "Qin"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.719672054869178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QG", "=", 
  RowBox[{
   RowBox[{"Qin", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"QQin", "/.", 
            RowBox[{"dout", "\[Rule]", " ", "0"}]}], "/.", 
           RowBox[{"dself", "\[Rule]", "din"}]}], "/.", 
          RowBox[{"din", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "m"}], ")"}], "/", "n"}]}]}], ")"}], 
        "\[Equal]", "Qin"}], ",", "Qin"}], "]"}], "\[LeftDoubleBracket]", "1",
      "\[RightDoubleBracket]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.7196723829715223`*^9, 3.7196724029795637`*^9}, {
  3.719672443606776*^9, 3.7196724608695593`*^9}, {3.719672600140873*^9, 
  3.719672607685143*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "pself", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
   RowBox[{
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "pin", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}], "-", 
    
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "pin", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.719673266205085*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   FractionBox["pself", "n"]}], ";", 
  RowBox[{
   RowBox[{"1", "-", "\[Alpha]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], "pin"}], "n"]}], ";"}]], "Text",
 CellChangeTimes->{{3.719672924909548*^9, 3.719672956828588*^9}, {
  3.719673031645522*^9, 3.719673036678142*^9}, {3.719673316360009*^9, 
  3.71967331844061*^9}, {3.719673373663905*^9, 3.719673398514662*^9}, {
  3.719680383562086*^9, 3.719680383631921*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"QGa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"QG", "/.", 
     RowBox[{"pself", "\[Rule]", 
      RowBox[{"n", " ", "\[Alpha]"}]}]}], "/.", 
    RowBox[{"pin", "\[Rule]", 
     RowBox[{"n", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}]}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.719672609774068*^9, 3.7196726360600443`*^9}, {
   3.719672671712638*^9, 3.719672674129012*^9}, 3.719673045579215*^9, 
   3.719673285054509*^9, {3.7196734059901037`*^9, 3.7196734148256407`*^9}, {
   3.719673686575059*^9, 3.719673689997945*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["m", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
   RowBox[{"\[Alpha]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]], "Output",\

 CellChangeTimes->{{3.719672622350296*^9, 3.719672636404706*^9}, 
   3.719672676256599*^9, 3.719673046361258*^9, 3.719673285484915*^9, 
   3.719673415411785*^9, 3.719673690621314*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], "2"], " ", "\[Alpha]"}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}]}], "+", 
   "\[Alpha]"}]]], "Output",
 CellChangeTimes->{{3.719672622350296*^9, 3.719672636404706*^9}, 
   3.719672676256599*^9, 3.719673046361258*^9, 3.719673285484915*^9, 
   3.719673415411785*^9, 3.719673690623301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "2"]}], ")"}]}], "+", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "m"}], ")"}], "2"]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.719673486695339*^9, 3.7196735146216908`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "m"}], ")"}], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "\[Alpha]"}], ")"}]}], "+", 
  "\[Alpha]"}]], "Output",
 CellChangeTimes->{3.719673514958393*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7196736929101686`*^9, 3.719673711996373*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"the\[Mu]", "=", "0.0"}], ";", 
  RowBox[{"thep", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["CWF", "BWF"], "/.", "prms"}], "/.", 
      RowBox[{"\[Mu]", "\[Rule]", "the\[Mu]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"QGa", "/.", "prms"}], "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "the\[Mu]"}]}], "/.", 
      RowBox[{"\[Alpha]", "\[Rule]", "thep"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.719673722652153*^9, 3.7196737610184507`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
XgnBHP17LliPzE+1c2ZVoxCKjzfuTtUh+zlZ6DetV4hxbooBFloUWqr0ZG99
EcLCzyL57XwKSbGBz+bzhcjhZr0NJp417ruUKSuEmrfF2YeaJP5+/c7Z+luI
9hnxJbPnUVjVN3E4cwqNOLd2d2sNCpPu2z5YNpVG3urz12h1ct5bz6wtk6OR
46fPv0rs0iF9t1WRhj1PqZidTeKlZfqqYXUa9fZSBhlqFOZecmVj59K4+DBu
0JP4i+O1JJn5NNaZvq6bSry3ZoZAQ5eG9bOjmYdnUThSNife1ojG8WyHZW4z
KZgf8zHmLqPR3OETI0c83jyt28OURsxGtU91M0g8P9VeErSChhVvW+1q4sTs
/71LtKNxc3PxLhtVch9uYW7PFhoD/aeehytT+B72feLWrTTClDYo2hIbuaYJ
OraT55WEBxWIi2Rk8tp20hiZGGyXr0Th1bFOi5pgGu274hcPK1KQ8Lw0z2Y/
jfWhAS8aie2NV02qPEjjTfM/+1TixoEnjcXhND7yloetJ36/LcIr9wQNJ9dO
lRcKZP/xP6uFp2j4B+k2XSP2Vu3VzDhDY8EstXMHifu4DsyDeBofQvjTjYi1
skWaNS7TsPMq6VYg3n02v+D2FfI+3/8V/JpO4av1jIhryTSCvvX6lxAvUm/0
VrhJI8Jw3tr7xAdGjltfvk1DYcJfo9PEfwsEkufu01A5sEPZndj80m12UhqN
nzY/5SyJj+114Z54RMNETlFOl1h8flHysUwaqhcl1EWJbUUDj45k00j62mrw
dRqFs10a28LyaFgmL1zVSVxf9GblUAEN17hpW+uIZZNOLwgtpDGx4njUC+L1
oeZTBp7RCPUJT8skTlz37eueFzTuXx5pvkP8Vje1hV9C40KM+IQE4hmTNhX6
ldFQikg0iSP26p1yo6eChmxTxoEI4nulpZFbq2gYfbYpDCHuubl/e2c1jYXz
/Ef9ieeHLVi9uZZGouJUh+3E/hs7tNvrafBtTW55EGcYXpTe0ETiZVP/z43E
rPTKb01cMt8hZRdnYkPBr9a1b2jsfV9fsJZ4f1XG05p2GpO54rMciAtTvG/a
vKfxm1N6xo74T+S0qMoOEs8ho/9sic08Xu+w/Ejjy3DJwbH/jy0LtynpplG+
WXTQnrhsmoHu8l4ajx5UHx57v9jAZ5mnX2i4jMqJjo1vU3f1+xI+Gf9G18Wx
+Z1+ZN+WK6RxpmSh5tj862JHny1kaeg8E325jXjqtrxbGQM0ngk3e42t39nc
L3rBD7L+V8smjO3PFRVV39RBGv8qkzPDidsH623n/CbPH4recpJYhRutd+cv
jSWHv8pfJvbMMpKd+Y+GXmhv/W1iatMv6UYRBn3rIl6NnZ+0+DOp46IMIrLY
gWJiv5wjk43EGYikmjk1Er/0MJPgSTBY4LWzp5tYSWJU7IYkg+0q+9IHiffl
vRR1lGbwWsc9VZLEl8Zk69F8eQafJOqWGhOHFYiN+CkwWNyzud6JmOtd9UdF
mYFwcWPSbuIYjt3gsVkMthoHVd8j7tvhRDssYHB6Z/k1NXJfzKfKC0Z1GET+
ym2wIL5a1NKfq88gcGaSsQ+xjZxbj9JiBuYlDo+yiB+XbHnfY86gRSntlzO5
v+N3z3571YLB6P7T9UeJNyt0v7GzZrAn/1B7OrHUHp/mbFsGTyZEx00i+WKv
SkB1+HoGcq/vunPH8kelXtVCVwY5IUsaJUh+UdvHVnS7MwgLY8JA3FgV/NLG
i4GJd1dANrHh/sOcaf4MHsZold9RIec927SgKoDB9SDn913En2uGc8MCGWzw
Lp0/m+S3BI1jmR9DyXofRXreJx5qOPEgI5LBxfHDy4tIPlx3xCbFK5rBcHLN
kCjJnw81J9+Vi2XQJiP2ZQ3xpohzNw6dZlAeW72tl/i5dsJl6ysMChmtRg2S
n4/F3o368JjBpnUSJ9tIvp9ycKLd1icMPIenb9Ij9SF55x65viwGHZbDxjHE
efbGKWw+g4FJfrOXzCHnIdtUMb6EgWPX6riUuSRf3hKRWMBl4BU58jqX1KP2
C76NT1oZrJBUCVAm9WtHVG2SYTuDZeI7Z0QRH92RtGB5B4OMh9n3XRaQfK5t
YO/4hUF2zr31YqT+KXC8zu//y0A/JHPpdVIvUx5WbvwzwkCP7ciWI/XVIFlH
LVKERfLJtKVniG0jhrLixFio+MzbG2lA+hOrC03XZVjE51yJDDWk0N1QPK1s
Dovy6hqTi0YUnvTPvC7twKLdi7a9Qup73M1Y7861LM5UjexcQer/Dmd6XqYT
i0cLV74VEs94/jx7jSuLFTfTn9iS/uH0hc2vzm5jcSnNfL78Sgo7ja4NTD7M
IsB0yq5e0n9oxEyzmZjKYoQvjDvpSuHfsvApbQ9ZNO825nmQ/uct/bk5NZ1F
7MmoG4tIvxTvmue5KofFBY7VcM8mCqPaziGxz1n8ueZ4z3UL6S+aLtwS5bIQ
P9CaGO5D8tOJoe3cVhYpTw/o+5H+K8HUa0FKO4ukHFUVFz9yHg/08y07WXib
UbT+LgrPDtVVR/FYVNYrxw2S/i1Rb8kFJyGLXVMqSgV7yH3tvrFenWWRmzDq
2L2X1CeHgK6XP1hY6Ib4c0n/N2Fcy/34IRYD3IbBun0UPhaY+nv/YTHvu3h7
NekXn/unLDQYYXF+uo50Fekvr6pJ/hz77g/9uPZaZSiF/wMWm+4V
        "]]},
      Annotation[#, "Charting`Private`Tag$531989#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
SSnKBg==
        "]]},
      Annotation[#, "Charting`Private`Tag$532027#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{728.0000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.719673724898355*^9, 3.719673761515492*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1269, 911},
WindowMargins->{{0, Automatic}, {61, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 857, 25, 86, "Input"],
Cell[1440, 49, 611, 18, 54, "Output"],
Cell[2054, 69, 511, 17, 57, "Output"],
Cell[2568, 88, 509, 17, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3114, 110, 1026, 30, 86, "Input"],
Cell[4143, 142, 989, 34, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5169, 181, 1159, 37, 64, "Input"],
Cell[6331, 220, 773, 25, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7141, 250, 540, 13, 55, "Input"],
Cell[7684, 265, 1238, 42, 70, "Output"],
Cell[8925, 309, 601, 18, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9563, 332, 930, 31, 56, "Input"],
Cell[10496, 365, 144, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10677, 372, 270, 7, 32, "Input"],
Cell[10950, 381, 833, 31, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11820, 417, 1369, 46, 168, "Input"],
Cell[13192, 465, 1214, 41, 57, "Output"],
Cell[14409, 508, 511, 17, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14957, 530, 191, 4, 32, "Input"],
Cell[15151, 536, 146, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15334, 543, 188, 4, 32, "Input"],
Cell[15525, 549, 670, 23, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16232, 577, 796, 21, 57, "Input"],
Cell[17031, 600, 83917, 1403, 461, 47180, 800, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100985, 2008, 102, 1, 65, "Section"],
Cell[101090, 2011, 268, 6, 122, "Text"],
Cell[101361, 2019, 7197, 199, 539, "Input"],
Cell[108561, 2220, 12186, 343, 791, "Input"],
Cell[CellGroupData[{
Cell[120772, 2567, 823, 25, 53, "Input"],
Cell[121598, 2594, 223, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121858, 2603, 211, 5, 32, "Input"],
Cell[122072, 2610, 5886, 172, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127995, 2787, 384, 10, 34, "Input"],
Cell[128382, 2799, 194, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128613, 2807, 542, 15, 57, "Input"],
Cell[129158, 2824, 1159, 41, 57, "Output"],
Cell[130320, 2867, 514, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130871, 2890, 335, 9, 57, "Input"],
Cell[131209, 2901, 8839, 251, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140085, 3157, 891, 24, 57, "Input"],
Cell[140979, 3183, 327, 8, 34, "Output"],
Cell[141309, 3193, 7283, 132, 255, "Output"]
}, Open  ]],
Cell[148607, 3328, 1336, 47, 138, "Input"],
Cell[CellGroupData[{
Cell[149968, 3379, 263, 8, 53, "Input"],
Cell[150234, 3389, 6778, 124, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157049, 3518, 1341, 39, 107, "Input"],
Cell[158393, 3559, 11969, 212, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170399, 3776, 213, 5, 32, "Input"],
Cell[170615, 3783, 1031, 32, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171683, 3820, 188, 4, 32, "Input"],
Cell[171874, 3826, 459, 15, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172370, 3846, 153, 3, 32, "Input"],
Cell[172526, 3851, 1275, 39, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173838, 3895, 824, 22, 34, "Input"],
Cell[174665, 3919, 1017, 36, 60, "Output"]
}, Open  ]],
Cell[175697, 3958, 518, 13, 50, "Text"],
Cell[CellGroupData[{
Cell[176240, 3975, 807, 21, 55, "Input"],
Cell[177050, 3998, 1255, 42, 57, "Output"],
Cell[178308, 4042, 581, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178926, 4065, 540, 18, 41, "Input"],
Cell[179469, 4085, 282, 10, 32, "Output"]
}, Open  ]],
Cell[179766, 4098, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[179885, 4103, 1349, 39, 107, "Input"],
Cell[181237, 4144, 10255, 184, 464, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

